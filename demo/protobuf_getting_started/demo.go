//
// Copyright 2017 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Package main contains a demo of using a protobuf schema generated by ygot
// to generate a Protobuf form of the OpenConfig RIB model.

package main

import (
	"fmt"

	log "github.com/golang/glog"
	"github.com/golang/protobuf/proto"

	ocpb "github.com/openconfig/ygot/demo/protobuf_getting_started/ribproto/openconfig"
	ocenums "github.com/openconfig/ygot/demo/protobuf_getting_started/ribproto/openconfig/enums"
	ocrpb "github.com/openconfig/ygot/demo/protobuf_getting_started/ribproto/openconfig/openconfig_rib_bgp"
	ocrbpb "github.com/openconfig/ygot/demo/protobuf_getting_started/ribproto/openconfig/openconfig_rib_bgp/bgp_rib"
	ocrbapb "github.com/openconfig/ygot/demo/protobuf_getting_started/ribproto/openconfig/openconfig_rib_bgp/bgp_rib/afi_safis"
	ocrbaapb "github.com/openconfig/ygot/demo/protobuf_getting_started/ribproto/openconfig/openconfig_rib_bgp/bgp_rib/afi_safis/afi_safi"
	ocrbaai4pb "github.com/openconfig/ygot/demo/protobuf_getting_started/ribproto/openconfig/openconfig_rib_bgp/bgp_rib/afi_safis/afi_safi/ipv4_unicast"
	ocrbaai4lpb "github.com/openconfig/ygot/demo/protobuf_getting_started/ribproto/openconfig/openconfig_rib_bgp/bgp_rib/afi_safis/afi_safi/ipv4_unicast/loc_rib"
	ocrbaai4lrpb "github.com/openconfig/ygot/demo/protobuf_getting_started/ribproto/openconfig/openconfig_rib_bgp/bgp_rib/afi_safis/afi_safi/ipv4_unicast/loc_rib/routes"
	ocrbaai4lrrpb "github.com/openconfig/ygot/demo/protobuf_getting_started/ribproto/openconfig/openconfig_rib_bgp/bgp_rib/afi_safis/afi_safi/ipv4_unicast/loc_rib/routes/route"
	ocrapb "github.com/openconfig/ygot/demo/protobuf_getting_started/ribproto/openconfig/openconfig_rib_bgp/bgp_rib/attr_sets"
	ocraapb "github.com/openconfig/ygot/demo/protobuf_getting_started/ribproto/openconfig/openconfig_rib_bgp/bgp_rib/attr_sets/attr_set"
	ywpb "github.com/openconfig/ygot/proto/ywrapper"
)

func main() {
	rt := buildRouteProto(&ipv4Prefix{
		atomicAggregate: true,
		localPref:       100,
		med:             10,
		nextHop:         "10.0.1.1",
		origin:          ocenums.OpenconfigRibBgpBgpOriginAttrType_OPENCONFIGRIBBGPBGPORIGINATTRTYPE_EGP,
		originatorID:    "192.0.2.42",
		prefix:          "192.0.2.0/24",
		protocolOrigin:  ocenums.OpenconfigPolicyTypesINSTALLPROTOCOLTYPE_OPENCONFIGPOLICYTYPESINSTALLPROTOCOLTYPE_BGP,
	})

	b, err := proto.Marshal(rt)
	if err != nil {
		log.Exitf("Error marshalling proto: %v", err)
	}

	fmt.Printf("%s\n", proto.MarshalTextString(rt))
	fmt.Printf("Marshalled proto size in bytes: %d\n", len(b))
}

// ipv4Prefix describes an IPv4 Prefix within the OpenConfig BGP RIB model.
type ipv4Prefix struct {
	atomicAggregate bool                                             // atomicAggregate is set when a downstream BGP speaker has aggregated the prefix.
	localPref       uint64                                           // localPrefix is the value of the BGP LOCAL_PREFERENCE attribute.
	med             uint64                                           // med is the value of the BGP multi-exit discriminator.
	nextHop         string                                           // nextHop is the IP next-hop used for the BGP route.
	origin          ocenums.OpenconfigRibBgpBgpOriginAttrType        // origin is the value of the ORIGIN attribute of the BGP prefix.
	originatorID    string                                           // originatorID specifies the address of the BGP originator of the prefix.
	prefix          string                                           // prefix is the IPv4 prefix for the route.
	protocolOrigin  ocenums.OpenconfigPolicyTypesINSTALLPROTOCOLTYPE // protocolOrigin specifies the route on the device via which the prefix was learnt.
}

// buildRouteProto returns a Protobuf representation a route and associated
// attribute set in the OpenConfig BGP RIB model.
func buildRouteProto(pfx *ipv4Prefix) *ocpb.Device {
	return &ocpb.Device{
		BgpRib: &ocrpb.BgpRib{
			AttrSets: &ocrbpb.AttrSets{
				AttrSet: []*ocrbpb.AttrSetKey{{
					Index: 1,
					AttrSet: &ocrapb.AttrSet{
						State: &ocraapb.State{
							AtomicAggregate: &ywpb.BoolValue{pfx.atomicAggregate},
							Index:           &ywpb.UintValue{1},
							LocalPref:       &ywpb.UintValue{pfx.localPref},
							Med:             &ywpb.UintValue{pfx.med},
							NextHop:         &ywpb.StringValue{pfx.nextHop},
							Origin:          pfx.origin,
							OriginatorId:    &ywpb.StringValue{pfx.originatorID},
						},
					},
				}},
			},
			AfiSafis: &ocrbpb.AfiSafis{
				AfiSafi: []*ocrbpb.AfiSafiKey{{
					AfiSafiName: ocenums.OpenconfigBgpTypesAFISAFITYPE_OPENCONFIGBGPTYPESAFISAFITYPE_IPV4_UNICAST,
					AfiSafi: &ocrbapb.AfiSafi{
						Ipv4Unicast: &ocrbaapb.Ipv4Unicast{
							LocRib: &ocrbaai4pb.LocRib{
								Routes: &ocrbaai4lpb.Routes{
									Route: []*ocrbaai4lpb.RouteKey{{
										Prefix: pfx.prefix,
										Origin: &ocrbaai4lpb.RouteKey_OriginOpenconfigpolicytypesinstallprotocoltype{ocenums.OpenconfigPolicyTypesINSTALLPROTOCOLTYPE_OPENCONFIGPOLICYTYPESINSTALLPROTOCOLTYPE_BGP},
										PathId: 1,
										Route: &ocrbaai4lrpb.Route{
											State: &ocrbaai4lrrpb.State{
												PathId:    &ywpb.UintValue{1},
												Prefix:    &ywpb.StringValue{pfx.prefix},
												Origin:    &ocrbaai4lrrpb.State_OriginOpenconfigpolicytypesinstallprotocoltype{pfx.protocolOrigin},
												AttrIndex: &ywpb.UintValue{1},
											},
										},
									}},
								},
							},
						},
					},
				}},
			},
		},
	}
}
