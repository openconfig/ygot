// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.2
// source: github.com/openconfig/ygot/protomap/testdata/exschemapath/exschemapath.proto

package exschemapath

import (
	_ "github.com/openconfig/ygot/proto/yext"
	ywrapper "github.com/openconfig/ygot/proto/ywrapper"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExampleEnum int32

const (
	ExampleEnum_ENUM_UNSET       ExampleEnum = 0
	ExampleEnum_ENUM_VALONE      ExampleEnum = 1
	ExampleEnum_ENUM_VALTWO      ExampleEnum = 2
	ExampleEnum_ENUM_VALFORTYTWO ExampleEnum = 42
)

// Enum value maps for ExampleEnum.
var (
	ExampleEnum_name = map[int32]string{
		0:  "ENUM_UNSET",
		1:  "ENUM_VALONE",
		2:  "ENUM_VALTWO",
		42: "ENUM_VALFORTYTWO",
	}
	ExampleEnum_value = map[string]int32{
		"ENUM_UNSET":       0,
		"ENUM_VALONE":      1,
		"ENUM_VALTWO":      2,
		"ENUM_VALFORTYTWO": 42,
	}
)

func (x ExampleEnum) Enum() *ExampleEnum {
	p := new(ExampleEnum)
	*p = x
	return p
}

func (x ExampleEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExampleEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_enumTypes[0].Descriptor()
}

func (ExampleEnum) Type() protoreflect.EnumType {
	return &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_enumTypes[0]
}

func (x ExampleEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExampleEnum.Descriptor instead.
func (ExampleEnum) EnumDescriptor() ([]byte, []int) {
	return file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDescGZIP(), []int{0}
}

type Root struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	System    *System              `protobuf:"bytes,1,opt,name=system,proto3" json:"system,omitempty"`
	Interface []*Root_InterfaceKey `protobuf:"bytes,422482938,rep,name=interface,proto3" json:"interface,omitempty"`
}

func (x *Root) Reset() {
	*x = Root{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Root) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Root) ProtoMessage() {}

func (x *Root) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Root.ProtoReflect.Descriptor instead.
func (*Root) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDescGZIP(), []int{0}
}

func (x *Root) GetSystem() *System {
	if x != nil {
		return x.System
	}
	return nil
}

func (x *Root) GetInterface() []*Root_InterfaceKey {
	if x != nil {
		return x.Interface
	}
	return nil
}

type Interface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description *ywrapper.StringValue `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Interface) Reset() {
	*x = Interface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interface) ProtoMessage() {}

func (x *Interface) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interface.ProtoReflect.Descriptor instead.
func (*Interface) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDescGZIP(), []int{1}
}

func (x *Interface) GetDescription() *ywrapper.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

type System struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname *ywrapper.StringValue `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
}

func (x *System) Reset() {
	*x = System{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *System) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*System) ProtoMessage() {}

func (x *System) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use System.ProtoReflect.Descriptor instead.
func (*System) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDescGZIP(), []int{2}
}

func (x *System) GetHostname() *ywrapper.StringValue {
	if x != nil {
		return x.Hostname
	}
	return nil
}

type ExampleMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bo    *ywrapper.BoolValue       `protobuf:"bytes,1,opt,name=bo,proto3" json:"bo,omitempty"`
	By    *ywrapper.BytesValue      `protobuf:"bytes,2,opt,name=by,proto3" json:"by,omitempty"`
	De    *ywrapper.Decimal64Value  `protobuf:"bytes,3,opt,name=de,proto3" json:"de,omitempty"`
	In    *ywrapper.IntValue        `protobuf:"bytes,4,opt,name=in,proto3" json:"in,omitempty"`
	Str   *ywrapper.StringValue     `protobuf:"bytes,5,opt,name=str,proto3" json:"str,omitempty"`
	Ui    *ywrapper.UintValue       `protobuf:"bytes,6,opt,name=ui,proto3" json:"ui,omitempty"`
	Ex    *ExampleMessageChild      `protobuf:"bytes,7,opt,name=ex,proto3" json:"ex,omitempty"`
	Em    []*ExampleMessageKey      `protobuf:"bytes,8,rep,name=em,proto3" json:"em,omitempty"`
	Multi []*ExampleMessageMultiKey `protobuf:"bytes,9,rep,name=multi,proto3" json:"multi,omitempty"`
	En    ExampleEnum               `protobuf:"varint,10,opt,name=en,proto3,enum=exschemapath.ExampleEnum" json:"en,omitempty"`
}

func (x *ExampleMessage) Reset() {
	*x = ExampleMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleMessage) ProtoMessage() {}

func (x *ExampleMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleMessage.ProtoReflect.Descriptor instead.
func (*ExampleMessage) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDescGZIP(), []int{3}
}

func (x *ExampleMessage) GetBo() *ywrapper.BoolValue {
	if x != nil {
		return x.Bo
	}
	return nil
}

func (x *ExampleMessage) GetBy() *ywrapper.BytesValue {
	if x != nil {
		return x.By
	}
	return nil
}

func (x *ExampleMessage) GetDe() *ywrapper.Decimal64Value {
	if x != nil {
		return x.De
	}
	return nil
}

func (x *ExampleMessage) GetIn() *ywrapper.IntValue {
	if x != nil {
		return x.In
	}
	return nil
}

func (x *ExampleMessage) GetStr() *ywrapper.StringValue {
	if x != nil {
		return x.Str
	}
	return nil
}

func (x *ExampleMessage) GetUi() *ywrapper.UintValue {
	if x != nil {
		return x.Ui
	}
	return nil
}

func (x *ExampleMessage) GetEx() *ExampleMessageChild {
	if x != nil {
		return x.Ex
	}
	return nil
}

func (x *ExampleMessage) GetEm() []*ExampleMessageKey {
	if x != nil {
		return x.Em
	}
	return nil
}

func (x *ExampleMessage) GetMulti() []*ExampleMessageMultiKey {
	if x != nil {
		return x.Multi
	}
	return nil
}

func (x *ExampleMessage) GetEn() ExampleEnum {
	if x != nil {
		return x.En
	}
	return ExampleEnum_ENUM_UNSET
}

type ExampleMessageChild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Str *ywrapper.StringValue `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"`
}

func (x *ExampleMessageChild) Reset() {
	*x = ExampleMessageChild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleMessageChild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleMessageChild) ProtoMessage() {}

func (x *ExampleMessageChild) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleMessageChild.ProtoReflect.Descriptor instead.
func (*ExampleMessageChild) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDescGZIP(), []int{4}
}

func (x *ExampleMessageChild) GetStr() *ywrapper.StringValue {
	if x != nil {
		return x.Str
	}
	return nil
}

type ExampleMessageKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SingleKey string                    `protobuf:"bytes,1,opt,name=single_key,json=singleKey,proto3" json:"single_key,omitempty"`
	Member    *ExampleMessageListMember `protobuf:"bytes,2,opt,name=member,proto3" json:"member,omitempty"`
}

func (x *ExampleMessageKey) Reset() {
	*x = ExampleMessageKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleMessageKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleMessageKey) ProtoMessage() {}

func (x *ExampleMessageKey) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleMessageKey.ProtoReflect.Descriptor instead.
func (*ExampleMessageKey) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDescGZIP(), []int{5}
}

func (x *ExampleMessageKey) GetSingleKey() string {
	if x != nil {
		return x.SingleKey
	}
	return ""
}

func (x *ExampleMessageKey) GetMember() *ExampleMessageListMember {
	if x != nil {
		return x.Member
	}
	return nil
}

type ExampleMessageListMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Str       *ywrapper.StringValue `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"`
	ChildList []*NestedListKey      `protobuf:"bytes,2,rep,name=child_list,json=childList,proto3" json:"child_list,omitempty"`
}

func (x *ExampleMessageListMember) Reset() {
	*x = ExampleMessageListMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleMessageListMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleMessageListMember) ProtoMessage() {}

func (x *ExampleMessageListMember) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleMessageListMember.ProtoReflect.Descriptor instead.
func (*ExampleMessageListMember) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDescGZIP(), []int{6}
}

func (x *ExampleMessageListMember) GetStr() *ywrapper.StringValue {
	if x != nil {
		return x.Str
	}
	return nil
}

func (x *ExampleMessageListMember) GetChildList() []*NestedListKey {
	if x != nil {
		return x.ChildList
	}
	return nil
}

type NestedListKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyOne string            `protobuf:"bytes,1,opt,name=key_one,json=keyOne,proto3" json:"key_one,omitempty"`
	Field  *NestedListMember `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
}

func (x *NestedListKey) Reset() {
	*x = NestedListKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NestedListKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedListKey) ProtoMessage() {}

func (x *NestedListKey) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NestedListKey.ProtoReflect.Descriptor instead.
func (*NestedListKey) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDescGZIP(), []int{7}
}

func (x *NestedListKey) GetKeyOne() string {
	if x != nil {
		return x.KeyOne
	}
	return ""
}

func (x *NestedListKey) GetField() *NestedListMember {
	if x != nil {
		return x.Field
	}
	return nil
}

type NestedListMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Str *ywrapper.StringValue `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"`
}

func (x *NestedListMember) Reset() {
	*x = NestedListMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NestedListMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedListMember) ProtoMessage() {}

func (x *NestedListMember) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NestedListMember.ProtoReflect.Descriptor instead.
func (*NestedListMember) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDescGZIP(), []int{8}
}

func (x *NestedListMember) GetStr() *ywrapper.StringValue {
	if x != nil {
		return x.Str
	}
	return nil
}

type ExampleMessageMultiKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index  uint32              `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Name   string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Member *MultiKeyListMember `protobuf:"bytes,3,opt,name=member,proto3" json:"member,omitempty"`
}

func (x *ExampleMessageMultiKey) Reset() {
	*x = ExampleMessageMultiKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleMessageMultiKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleMessageMultiKey) ProtoMessage() {}

func (x *ExampleMessageMultiKey) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleMessageMultiKey.ProtoReflect.Descriptor instead.
func (*ExampleMessageMultiKey) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDescGZIP(), []int{9}
}

func (x *ExampleMessageMultiKey) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ExampleMessageMultiKey) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExampleMessageMultiKey) GetMember() *MultiKeyListMember {
	if x != nil {
		return x.Member
	}
	return nil
}

type MultiKeyListMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Child *ywrapper.StringValue `protobuf:"bytes,1,opt,name=child,proto3" json:"child,omitempty"`
}

func (x *MultiKeyListMember) Reset() {
	*x = MultiKeyListMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiKeyListMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiKeyListMember) ProtoMessage() {}

func (x *MultiKeyListMember) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiKeyListMember.ProtoReflect.Descriptor instead.
func (*MultiKeyListMember) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDescGZIP(), []int{10}
}

func (x *MultiKeyListMember) GetChild() *ywrapper.StringValue {
	if x != nil {
		return x.Child
	}
	return nil
}

type InvalidMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapField                        map[string]string     `protobuf:"bytes,1,rep,name=map_field,json=mapField,proto3" json:"map_field,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NoAnnotation                    string                `protobuf:"bytes,2,opt,name=no_annotation,json=noAnnotation,proto3" json:"no_annotation,omitempty"`
	Km                              []*ExampleMessageKey  `protobuf:"bytes,3,rep,name=km,proto3" json:"km,omitempty"`
	Ke                              []string              `protobuf:"bytes,4,rep,name=ke,proto3" json:"ke,omitempty"`
	Bk                              []*BadMessageKey      `protobuf:"bytes,5,rep,name=bk,proto3" json:"bk,omitempty"`
	Bm                              []*BadMessageMember   `protobuf:"bytes,6,rep,name=bm,proto3" json:"bm,omitempty"`
	InvalidAnnotatedPath            *ywrapper.StringValue `protobuf:"bytes,7,opt,name=invalid_annotated_path,json=invalidAnnotatedPath,proto3" json:"invalid_annotated_path,omitempty"`
	BkTwo                           []*BadMessageKeyTwo   `protobuf:"bytes,8,rep,name=bk_two,json=bkTwo,proto3" json:"bk_two,omitempty"`
	MultipleAnnotationsForContainer *InvalidMessage       `protobuf:"bytes,9,opt,name=multiple_annotations_for_container,json=multipleAnnotationsForContainer,proto3" json:"multiple_annotations_for_container,omitempty"`
	Bkpm                            []*BadKeyPathMessage  `protobuf:"bytes,10,rep,name=bkpm,proto3" json:"bkpm,omitempty"`
	Ikpk                            []*InvalidKeyPathKey  `protobuf:"bytes,11,rep,name=ikpk,proto3" json:"ikpk,omitempty"`
}

func (x *InvalidMessage) Reset() {
	*x = InvalidMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidMessage) ProtoMessage() {}

func (x *InvalidMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidMessage.ProtoReflect.Descriptor instead.
func (*InvalidMessage) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDescGZIP(), []int{11}
}

func (x *InvalidMessage) GetMapField() map[string]string {
	if x != nil {
		return x.MapField
	}
	return nil
}

func (x *InvalidMessage) GetNoAnnotation() string {
	if x != nil {
		return x.NoAnnotation
	}
	return ""
}

func (x *InvalidMessage) GetKm() []*ExampleMessageKey {
	if x != nil {
		return x.Km
	}
	return nil
}

func (x *InvalidMessage) GetKe() []string {
	if x != nil {
		return x.Ke
	}
	return nil
}

func (x *InvalidMessage) GetBk() []*BadMessageKey {
	if x != nil {
		return x.Bk
	}
	return nil
}

func (x *InvalidMessage) GetBm() []*BadMessageMember {
	if x != nil {
		return x.Bm
	}
	return nil
}

func (x *InvalidMessage) GetInvalidAnnotatedPath() *ywrapper.StringValue {
	if x != nil {
		return x.InvalidAnnotatedPath
	}
	return nil
}

func (x *InvalidMessage) GetBkTwo() []*BadMessageKeyTwo {
	if x != nil {
		return x.BkTwo
	}
	return nil
}

func (x *InvalidMessage) GetMultipleAnnotationsForContainer() *InvalidMessage {
	if x != nil {
		return x.MultipleAnnotationsForContainer
	}
	return nil
}

func (x *InvalidMessage) GetBkpm() []*BadKeyPathMessage {
	if x != nil {
		return x.Bkpm
	}
	return nil
}

func (x *InvalidMessage) GetIkpk() []*InvalidKeyPathKey {
	if x != nil {
		return x.Ikpk
	}
	return nil
}

type BadMessageKeyTwo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *BadMessageKeyTwo) Reset() {
	*x = BadMessageKeyTwo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BadMessageKeyTwo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BadMessageKeyTwo) ProtoMessage() {}

func (x *BadMessageKeyTwo) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BadMessageKeyTwo.ProtoReflect.Descriptor instead.
func (*BadMessageKeyTwo) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDescGZIP(), []int{12}
}

func (x *BadMessageKeyTwo) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type BadMessageKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BadKeyType float32 `protobuf:"fixed32,1,opt,name=bad_key_type,json=badKeyType,proto3" json:"bad_key_type,omitempty"`
}

func (x *BadMessageKey) Reset() {
	*x = BadMessageKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BadMessageKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BadMessageKey) ProtoMessage() {}

func (x *BadMessageKey) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BadMessageKey.ProtoReflect.Descriptor instead.
func (*BadMessageKey) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDescGZIP(), []int{13}
}

func (x *BadMessageKey) GetBadKeyType() float32 {
	if x != nil {
		return x.BadKeyType
	}
	return 0
}

type BadMessageMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	BadType []string `protobuf:"bytes,2,rep,name=bad_type,json=badType,proto3" json:"bad_type,omitempty"`
}

func (x *BadMessageMember) Reset() {
	*x = BadMessageMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BadMessageMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BadMessageMember) ProtoMessage() {}

func (x *BadMessageMember) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BadMessageMember.ProtoReflect.Descriptor instead.
func (*BadMessageMember) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDescGZIP(), []int{14}
}

func (x *BadMessageMember) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *BadMessageMember) GetBadType() []string {
	if x != nil {
		return x.BadType
	}
	return nil
}

type BadKeyPathMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *BadKeyPathMessage) Reset() {
	*x = BadKeyPathMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BadKeyPathMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BadKeyPathMessage) ProtoMessage() {}

func (x *BadKeyPathMessage) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BadKeyPathMessage.ProtoReflect.Descriptor instead.
func (*BadKeyPathMessage) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDescGZIP(), []int{15}
}

func (x *BadKeyPathMessage) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type InvalidKeyPathKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *InvalidKeyPathKey) Reset() {
	*x = InvalidKeyPathKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvalidKeyPathKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidKeyPathKey) ProtoMessage() {}

func (x *InvalidKeyPathKey) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidKeyPathKey.ProtoReflect.Descriptor instead.
func (*InvalidKeyPathKey) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDescGZIP(), []int{16}
}

func (x *InvalidKeyPathKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type Root_InterfaceKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Interface *Interface `protobuf:"bytes,2,opt,name=interface,proto3" json:"interface,omitempty"`
}

func (x *Root_InterfaceKey) Reset() {
	*x = Root_InterfaceKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Root_InterfaceKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Root_InterfaceKey) ProtoMessage() {}

func (x *Root_InterfaceKey) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Root_InterfaceKey.ProtoReflect.Descriptor instead.
func (*Root_InterfaceKey) Descriptor() ([]byte, []int) {
	return file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Root_InterfaceKey) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Root_InterfaceKey) GetInterface() *Interface {
	if x != nil {
		return x.Interface
	}
	return nil
}

var File_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto protoreflect.FileDescriptor

var file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDesc = []byte{
	0x0a, 0x4c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65,
	0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x79, 0x67, 0x6f, 0x74, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x6d, 0x61, 0x70, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x65,
	0x78, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x61, 0x74, 0x68, 0x2f, 0x65, 0x78, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x70, 0x61, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x65, 0x78, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x61, 0x74, 0x68, 0x1a, 0x38, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2f, 0x79, 0x67, 0x6f, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79,
	0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2f, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x79, 0x67,
	0x6f, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x79, 0x65, 0x78, 0x74, 0x2f, 0x79, 0x65,
	0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xae, 0x02, 0x0a, 0x04, 0x52, 0x6f, 0x6f,
	0x74, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x65, 0x78, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x61, 0x74, 0x68,
	0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12,
	0x5b, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0xfa, 0xa7, 0xba,
	0xc9, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x78, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x70, 0x61, 0x74, 0x68, 0x2e, 0x52, 0x6f, 0x6f, 0x74, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x42, 0x18, 0x82, 0x41, 0x15, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x1a, 0x9a, 0x01, 0x0a,
	0x0c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x53, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3f, 0x82, 0x41, 0x3c,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x6e, 0x61, 0x6d,
	0x65, 0x7c, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x78, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x70, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x09,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x22, 0x71, 0x0a, 0x09, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x64, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x2b, 0x82, 0x41, 0x28, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x73, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x57, 0x0a, 0x06,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x4d, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42,
	0x1a, 0x82, 0x41, 0x17, 0x2f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x08, 0x68, 0x6f, 0x73,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xb9, 0x04, 0x0a, 0x0e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x02, 0x62, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x08, 0x82, 0x41, 0x05, 0x2f, 0x62,
	0x6f, 0x6f, 0x6c, 0x52, 0x02, 0x62, 0x6f, 0x12, 0x2f, 0x0a, 0x02, 0x62, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x09, 0x82, 0x41, 0x06, 0x2f, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x52, 0x02, 0x62, 0x79, 0x12, 0x35, 0x0a, 0x02, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e,
	0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0b,
	0x82, 0x41, 0x08, 0x2f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x02, 0x64, 0x65, 0x12,
	0x2b, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x79, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x49, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42,
	0x07, 0x82, 0x41, 0x04, 0x2f, 0x69, 0x6e, 0x74, 0x52, 0x02, 0x69, 0x6e, 0x12, 0x33, 0x0a, 0x03,
	0x73, 0x74, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x77, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x42, 0x0a, 0x82, 0x41, 0x07, 0x2f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x03, 0x73, 0x74,
	0x72, 0x12, 0x2d, 0x0a, 0x02, 0x75, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x08, 0x82, 0x41, 0x05, 0x2f, 0x75, 0x69, 0x6e, 0x74, 0x52, 0x02, 0x75, 0x69,
	0x12, 0x3e, 0x0a, 0x02, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65,
	0x78, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x61, 0x74, 0x68, 0x2e, 0x45, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x42,
	0x0b, 0x82, 0x41, 0x08, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x02, 0x65, 0x78,
	0x12, 0x3e, 0x0a, 0x02, 0x65, 0x6d, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65,
	0x78, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x61, 0x74, 0x68, 0x2e, 0x45, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x42, 0x0d, 0x82,
	0x41, 0x0a, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x02, 0x65, 0x6d,
	0x12, 0x4a, 0x0a, 0x05, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x65, 0x78, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x61, 0x74, 0x68, 0x2e, 0x45,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x4b, 0x65, 0x79, 0x42, 0x0e, 0x82, 0x41, 0x0b, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x2d, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x33, 0x0a, 0x02,
	0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x65, 0x78, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x61, 0x70, 0x61, 0x74, 0x68, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x45,
	0x6e, 0x75, 0x6d, 0x42, 0x08, 0x82, 0x41, 0x05, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x52, 0x02, 0x65,
	0x6e, 0x22, 0x4f, 0x0a, 0x13, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x12, 0x38, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0f, 0x82, 0x41,
	0x0c, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x73, 0x74, 0x72, 0x52, 0x03, 0x73,
	0x74, 0x72, 0x22, 0xa9, 0x01, 0x0a, 0x11, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x54, 0x0a, 0x0a, 0x73, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x35, 0x82, 0x41,
	0x32, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x2f, 0x73, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x2d, 0x6b, 0x65, 0x79, 0x7c, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2d, 0x6e, 0x61, 0x6d,
	0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x2d,
	0x6b, 0x65, 0x79, 0x52, 0x09, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x3e,
	0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x65, 0x78, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x61, 0x74, 0x68, 0x2e, 0x45, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xb6,
	0x01, 0x0a, 0x18, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x03, 0x73,
	0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42,
	0x1b, 0x82, 0x41, 0x18, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x2f, 0x61,
	0x6e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x2d, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x03, 0x73, 0x74,
	0x72, 0x12, 0x54, 0x0a, 0x0a, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x78, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61,
	0x70, 0x61, 0x74, 0x68, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x4b,
	0x65, 0x79, 0x42, 0x18, 0x82, 0x41, 0x15, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2d, 0x6e, 0x61, 0x6d,
	0x65, 0x2f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x2d, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x80, 0x01, 0x0a, 0x0d, 0x4e, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x07, 0x6b, 0x65, 0x79,
	0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x20, 0x82, 0x41, 0x1d, 0x2f,
	0x6c, 0x69, 0x73, 0x74, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x2f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x2d,
	0x6c, 0x69, 0x73, 0x74, 0x2f, 0x6b, 0x65, 0x79, 0x2d, 0x6f, 0x6e, 0x65, 0x52, 0x06, 0x6b, 0x65,
	0x79, 0x4f, 0x6e, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x78, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x61,
	0x74, 0x68, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x59, 0x0a, 0x10, 0x4e, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x45,
	0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x1c, 0x82, 0x41, 0x19, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2d, 0x6e, 0x61, 0x6d,
	0x65, 0x2f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x2d, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x73, 0x74, 0x72,
	0x52, 0x03, 0x73, 0x74, 0x72, 0x22, 0xd8, 0x01, 0x0a, 0x16, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4b, 0x65, 0x79,
	0x12, 0x43, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x2d, 0x82, 0x41, 0x2a, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x2d, 0x6c, 0x69, 0x73, 0x74, 0x2f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x7c, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x2d, 0x6c, 0x69, 0x73,
	0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x3f, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x2b, 0x82, 0x41, 0x28, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x2d, 0x6c,
	0x69, 0x73, 0x74, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x7c, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x2d,
	0x6c, 0x69, 0x73, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x6e, 0x61, 0x6d, 0x65,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x78, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x70, 0x61, 0x74, 0x68, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4b, 0x65, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x5e, 0x0a, 0x12, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x1b, 0x82, 0x41,
	0x18, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x2d, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x52, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x22, 0xb1, 0x06, 0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x5d, 0x0a, 0x09, 0x6d, 0x61, 0x70, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x78, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x70, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x61, 0x70, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x42, 0x14, 0x82, 0x41, 0x11, 0x2f, 0x61, 0x6e, 0x2f, 0x69, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x08, 0x6d, 0x61, 0x70, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x6f, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x6f, 0x41, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x02, 0x6b, 0x6d, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x78, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x61,
	0x74, 0x68, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4b, 0x65, 0x79, 0x42, 0x0c, 0x82, 0x41, 0x09, 0x2f, 0x6f, 0x6e, 0x65, 0x7c, 0x2f, 0x74,
	0x77, 0x6f, 0x52, 0x02, 0x6b, 0x6d, 0x12, 0x19, 0x0a, 0x02, 0x6b, 0x65, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x42, 0x09, 0x82, 0x41, 0x06, 0x2f, 0x74, 0x68, 0x72, 0x65, 0x65, 0x52, 0x02, 0x6b,
	0x65, 0x12, 0x35, 0x0a, 0x02, 0x62, 0x6b, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x65, 0x78, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x61, 0x74, 0x68, 0x2e, 0x42, 0x61, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x42, 0x08, 0x82, 0x41, 0x05, 0x2f,
	0x66, 0x6f, 0x75, 0x72, 0x52, 0x02, 0x62, 0x6b, 0x12, 0x38, 0x0a, 0x02, 0x62, 0x6d, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x78, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70,
	0x61, 0x74, 0x68, 0x2e, 0x42, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x42, 0x08, 0x82, 0x41, 0x05, 0x2f, 0x66, 0x69, 0x76, 0x65, 0x52, 0x02,
	0x62, 0x6d, 0x12, 0x59, 0x0a, 0x16, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0c, 0x82, 0x41, 0x09, 0x2f, 0x6f,
	0x6e, 0x65, 0x5b, 0x74, 0x77, 0x6f, 0x5d, 0x52, 0x14, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x64, 0x50, 0x61, 0x74, 0x68, 0x12, 0x3e, 0x0a,
	0x06, 0x62, 0x6b, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x65, 0x78, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x70, 0x61, 0x74, 0x68, 0x2e, 0x42, 0x61, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x54, 0x77, 0x6f, 0x42, 0x07, 0x82,
	0x41, 0x04, 0x2f, 0x73, 0x69, 0x78, 0x52, 0x05, 0x62, 0x6b, 0x54, 0x77, 0x6f, 0x12, 0x79, 0x0a,
	0x22, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x78, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x70, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0e, 0x82, 0x41, 0x0b, 0x2f, 0x73, 0x69, 0x78,
	0x7c, 0x2f, 0x73, 0x65, 0x76, 0x65, 0x6e, 0x52, 0x1f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x04, 0x62, 0x6b, 0x70, 0x6d,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x78, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x70, 0x61, 0x74, 0x68, 0x2e, 0x42, 0x61, 0x64, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x74, 0x68,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x09, 0x82, 0x41, 0x06, 0x2f, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x52, 0x04, 0x62, 0x6b, 0x70, 0x6d, 0x12, 0x3d, 0x0a, 0x04, 0x69, 0x6b, 0x70, 0x6b,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x78, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x70, 0x61, 0x74, 0x68, 0x2e, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4b, 0x65, 0x79,
	0x50, 0x61, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x42, 0x08, 0x82, 0x41, 0x05, 0x2f, 0x6e, 0x69, 0x6e,
	0x65, 0x52, 0x04, 0x69, 0x6b, 0x70, 0x6b, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x61, 0x70, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x36, 0x0a, 0x10, 0x42, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4b, 0x65, 0x79, 0x54, 0x77, 0x6f, 0x12, 0x22, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0x82, 0x41, 0x0d, 0x2f, 0x6f, 0x6e, 0x65, 0x7c, 0x2f,
	0x6f, 0x6e, 0x65, 0x2f, 0x74, 0x77, 0x6f, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x3f, 0x0a, 0x0d,
	0x42, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x2e, 0x0a,
	0x0c, 0x62, 0x61, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x02, 0x42, 0x0c, 0x82, 0x41, 0x09, 0x2f, 0x66, 0x6f, 0x75, 0x72, 0x2f, 0x6b, 0x65,
	0x79, 0x52, 0x0a, 0x62, 0x61, 0x64, 0x4b, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x58, 0x0a,
	0x10, 0x42, 0x61, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a,
	0x82, 0x41, 0x07, 0x2f, 0x6f, 0x6b, 0x2d, 0x6b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x26, 0x0a, 0x08, 0x62, 0x61, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x42, 0x0b, 0x82, 0x41, 0x08, 0x2f, 0x62, 0x61, 0x64, 0x2d, 0x6b, 0x65, 0x79, 0x52, 0x07,
	0x62, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2b, 0x0a, 0x11, 0x42, 0x61, 0x64, 0x4b, 0x65,
	0x79, 0x50, 0x61, 0x74, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0x82, 0x41, 0x01, 0x2f, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x22, 0x33, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4b,
	0x65, 0x79, 0x50, 0x61, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0c, 0x82, 0x41, 0x09, 0x2f, 0x6f, 0x6e, 0x65, 0x5b,
	0x74, 0x77, 0x6f, 0x5d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x2a, 0x7e, 0x0a, 0x0b, 0x45, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x4e, 0x55, 0x4d,
	0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x0b, 0x45, 0x4e, 0x55, 0x4d,
	0x5f, 0x56, 0x41, 0x4c, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x1a, 0x0a, 0x82, 0x41, 0x07, 0x56, 0x41,
	0x4c, 0x5f, 0x4f, 0x4e, 0x45, 0x12, 0x1b, 0x0a, 0x0b, 0x45, 0x4e, 0x55, 0x4d, 0x5f, 0x56, 0x41,
	0x4c, 0x54, 0x57, 0x4f, 0x10, 0x02, 0x1a, 0x0a, 0x82, 0x41, 0x07, 0x56, 0x41, 0x4c, 0x5f, 0x54,
	0x57, 0x4f, 0x12, 0x25, 0x0a, 0x10, 0x45, 0x4e, 0x55, 0x4d, 0x5f, 0x56, 0x41, 0x4c, 0x46, 0x4f,
	0x52, 0x54, 0x59, 0x54, 0x57, 0x4f, 0x10, 0x2a, 0x1a, 0x0f, 0x82, 0x41, 0x0c, 0x56, 0x41, 0x4c,
	0x5f, 0x46, 0x4f, 0x52, 0x54, 0x59, 0x54, 0x57, 0x4f, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2f, 0x79, 0x67, 0x6f, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x61, 0x70,
	0x2f, 0x74, 0x65, 0x73, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x65, 0x78, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x70, 0x61, 0x74, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDescOnce sync.Once
	file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDescData = file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDesc
)

func file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDescGZIP() []byte {
	file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDescOnce.Do(func() {
		file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDescData)
	})
	return file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDescData
}

var file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_goTypes = []interface{}{
	(ExampleEnum)(0),                 // 0: exschemapath.ExampleEnum
	(*Root)(nil),                     // 1: exschemapath.Root
	(*Interface)(nil),                // 2: exschemapath.Interface
	(*System)(nil),                   // 3: exschemapath.System
	(*ExampleMessage)(nil),           // 4: exschemapath.ExampleMessage
	(*ExampleMessageChild)(nil),      // 5: exschemapath.ExampleMessageChild
	(*ExampleMessageKey)(nil),        // 6: exschemapath.ExampleMessageKey
	(*ExampleMessageListMember)(nil), // 7: exschemapath.ExampleMessageListMember
	(*NestedListKey)(nil),            // 8: exschemapath.NestedListKey
	(*NestedListMember)(nil),         // 9: exschemapath.NestedListMember
	(*ExampleMessageMultiKey)(nil),   // 10: exschemapath.ExampleMessageMultiKey
	(*MultiKeyListMember)(nil),       // 11: exschemapath.MultiKeyListMember
	(*InvalidMessage)(nil),           // 12: exschemapath.InvalidMessage
	(*BadMessageKeyTwo)(nil),         // 13: exschemapath.BadMessageKeyTwo
	(*BadMessageKey)(nil),            // 14: exschemapath.BadMessageKey
	(*BadMessageMember)(nil),         // 15: exschemapath.BadMessageMember
	(*BadKeyPathMessage)(nil),        // 16: exschemapath.BadKeyPathMessage
	(*InvalidKeyPathKey)(nil),        // 17: exschemapath.InvalidKeyPathKey
	(*Root_InterfaceKey)(nil),        // 18: exschemapath.Root.InterfaceKey
	nil,                              // 19: exschemapath.InvalidMessage.MapFieldEntry
	(*ywrapper.StringValue)(nil),     // 20: ywrapper.StringValue
	(*ywrapper.BoolValue)(nil),       // 21: ywrapper.BoolValue
	(*ywrapper.BytesValue)(nil),      // 22: ywrapper.BytesValue
	(*ywrapper.Decimal64Value)(nil),  // 23: ywrapper.Decimal64Value
	(*ywrapper.IntValue)(nil),        // 24: ywrapper.IntValue
	(*ywrapper.UintValue)(nil),       // 25: ywrapper.UintValue
}
var file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_depIdxs = []int32{
	3,  // 0: exschemapath.Root.system:type_name -> exschemapath.System
	18, // 1: exschemapath.Root.interface:type_name -> exschemapath.Root.InterfaceKey
	20, // 2: exschemapath.Interface.description:type_name -> ywrapper.StringValue
	20, // 3: exschemapath.System.hostname:type_name -> ywrapper.StringValue
	21, // 4: exschemapath.ExampleMessage.bo:type_name -> ywrapper.BoolValue
	22, // 5: exschemapath.ExampleMessage.by:type_name -> ywrapper.BytesValue
	23, // 6: exschemapath.ExampleMessage.de:type_name -> ywrapper.Decimal64Value
	24, // 7: exschemapath.ExampleMessage.in:type_name -> ywrapper.IntValue
	20, // 8: exschemapath.ExampleMessage.str:type_name -> ywrapper.StringValue
	25, // 9: exschemapath.ExampleMessage.ui:type_name -> ywrapper.UintValue
	5,  // 10: exschemapath.ExampleMessage.ex:type_name -> exschemapath.ExampleMessageChild
	6,  // 11: exschemapath.ExampleMessage.em:type_name -> exschemapath.ExampleMessageKey
	10, // 12: exschemapath.ExampleMessage.multi:type_name -> exschemapath.ExampleMessageMultiKey
	0,  // 13: exschemapath.ExampleMessage.en:type_name -> exschemapath.ExampleEnum
	20, // 14: exschemapath.ExampleMessageChild.str:type_name -> ywrapper.StringValue
	7,  // 15: exschemapath.ExampleMessageKey.member:type_name -> exschemapath.ExampleMessageListMember
	20, // 16: exschemapath.ExampleMessageListMember.str:type_name -> ywrapper.StringValue
	8,  // 17: exschemapath.ExampleMessageListMember.child_list:type_name -> exschemapath.NestedListKey
	9,  // 18: exschemapath.NestedListKey.field:type_name -> exschemapath.NestedListMember
	20, // 19: exschemapath.NestedListMember.str:type_name -> ywrapper.StringValue
	11, // 20: exschemapath.ExampleMessageMultiKey.member:type_name -> exschemapath.MultiKeyListMember
	20, // 21: exschemapath.MultiKeyListMember.child:type_name -> ywrapper.StringValue
	19, // 22: exschemapath.InvalidMessage.map_field:type_name -> exschemapath.InvalidMessage.MapFieldEntry
	6,  // 23: exschemapath.InvalidMessage.km:type_name -> exschemapath.ExampleMessageKey
	14, // 24: exschemapath.InvalidMessage.bk:type_name -> exschemapath.BadMessageKey
	15, // 25: exschemapath.InvalidMessage.bm:type_name -> exschemapath.BadMessageMember
	20, // 26: exschemapath.InvalidMessage.invalid_annotated_path:type_name -> ywrapper.StringValue
	13, // 27: exschemapath.InvalidMessage.bk_two:type_name -> exschemapath.BadMessageKeyTwo
	12, // 28: exschemapath.InvalidMessage.multiple_annotations_for_container:type_name -> exschemapath.InvalidMessage
	16, // 29: exschemapath.InvalidMessage.bkpm:type_name -> exschemapath.BadKeyPathMessage
	17, // 30: exschemapath.InvalidMessage.ikpk:type_name -> exschemapath.InvalidKeyPathKey
	2,  // 31: exschemapath.Root.InterfaceKey.interface:type_name -> exschemapath.Interface
	32, // [32:32] is the sub-list for method output_type
	32, // [32:32] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_init() }
func file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_init() {
	if File_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Root); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*System); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleMessageChild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleMessageKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleMessageListMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NestedListKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NestedListMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExampleMessageMultiKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiKeyListMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BadMessageKeyTwo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BadMessageKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BadMessageMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BadKeyPathMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvalidKeyPathKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Root_InterfaceKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_goTypes,
		DependencyIndexes: file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_depIdxs,
		EnumInfos:         file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_enumTypes,
		MessageInfos:      file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_msgTypes,
	}.Build()
	File_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto = out.File
	file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_rawDesc = nil
	file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_goTypes = nil
	file_github_com_openconfig_ygot_protomap_testdata_exschemapath_exschemapath_proto_depIdxs = nil
}
