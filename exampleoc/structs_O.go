/*
Package exampleoc is a generated package which contains definitions
of structs which represent a YANG schema. The generated schema can be
compressed by a series of transformations (compression was true
in this case).

NOTE WELL: This is an example code file that is distributed with ygot.
It should not be used within your application, as it WILL change,
without warning. Rather, you should generate structs directly from
OpenConfig models using the ygot package.

This package was generated by github.com/openconfig/ygot
using the following YANG input files:
	- public/release/models/network-instance/openconfig-network-instance.yang
	- public/release/models/optical-transport/openconfig-optical-amplifier.yang
	- public/release/models/optical-transport/openconfig-terminal-device.yang
	- public/release/models/optical-transport/openconfig-transport-line-protection.yang
	- public/release/models/platform/openconfig-platform.yang
	- public/release/models/policy/openconfig-routing-policy.yang
	- public/release/models/lacp/openconfig-lacp.yang
	- public/release/models/system/openconfig-system.yang
	- public/release/models/lldp/openconfig-lldp.yang
	- public/release/models/stp/openconfig-spanning-tree.yang
	- public/release/models/interfaces/openconfig-interfaces.yang
	- public/release/models/interfaces/openconfig-if-ip.yang
	- public/release/models/interfaces/openconfig-if-aggregate.yang
	- public/release/models/interfaces/openconfig-if-ethernet.yang
	- public/release/models/interfaces/openconfig-if-ip-ext.yang
Imported modules were sourced from:
	- public/...
	- deps/...
*/
package exampleoc

import (
	"github.com/openconfig/ygot/ygot"
)

// OpticalAmplifier represents the /openconfig-optical-amplifier/optical-amplifier YANG schema element.
type OpticalAmplifier struct {
	ΛMetadata           []ygot.Annotation                               `path:"@" ygotAnnotation:"true"`
	Amplifier           map[string]*OpticalAmplifier_Amplifier          `path:"amplifiers/amplifier" module:"openconfig-optical-amplifier"`
	ΛAmplifier          []ygot.Annotation                               `path:"amplifiers/@amplifier" ygotAnnotation:"true"`
	SupervisoryChannel  map[string]*OpticalAmplifier_SupervisoryChannel `path:"supervisory-channels/supervisory-channel" module:"openconfig-optical-amplifier"`
	ΛSupervisoryChannel []ygot.Annotation                               `path:"supervisory-channels/@supervisory-channel" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpticalAmplifier implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpticalAmplifier) IsYANGGoStruct() {}

// OpticalAmplifier_Amplifier represents the /openconfig-optical-amplifier/optical-amplifier/amplifiers/amplifier YANG schema element.
type OpticalAmplifier_Amplifier struct {
	ΛMetadata          []ygot.Annotation                                   `path:"@" ygotAnnotation:"true"`
	ActualGain         *OpticalAmplifier_Amplifier_ActualGain              `path:"state/actual-gain" module:"openconfig-optical-amplifier"`
	ΛActualGain        []ygot.Annotation                                   `path:"state/@actual-gain" ygotAnnotation:"true"`
	ActualGainTilt     *OpticalAmplifier_Amplifier_ActualGainTilt          `path:"state/actual-gain-tilt" module:"openconfig-optical-amplifier"`
	ΛActualGainTilt    []ygot.Annotation                                   `path:"state/@actual-gain-tilt" ygotAnnotation:"true"`
	AmpMode            E_OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_MODE `path:"config/amp-mode" module:"openconfig-optical-amplifier"`
	ΛAmpMode           []ygot.Annotation                                   `path:"config/@amp-mode" ygotAnnotation:"true"`
	Component          *string                                             `path:"state/component" module:"openconfig-optical-amplifier"`
	ΛComponent         []ygot.Annotation                                   `path:"state/@component" ygotAnnotation:"true"`
	EgressPort         *string                                             `path:"state/egress-port" module:"openconfig-optical-amplifier"`
	ΛEgressPort        []ygot.Annotation                                   `path:"state/@egress-port" ygotAnnotation:"true"`
	Enabled            *bool                                               `path:"config/enabled" module:"openconfig-optical-amplifier"`
	ΛEnabled           []ygot.Annotation                                   `path:"config/@enabled" ygotAnnotation:"true"`
	FiberTypeProfile   E_OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE     `path:"config/fiber-type-profile" module:"openconfig-optical-amplifier"`
	ΛFiberTypeProfile  []ygot.Annotation                                   `path:"config/@fiber-type-profile" ygotAnnotation:"true"`
	GainRange          E_OpenconfigOpticalAmplifier_GAIN_RANGE             `path:"config/gain-range" module:"openconfig-optical-amplifier"`
	ΛGainRange         []ygot.Annotation                                   `path:"config/@gain-range" ygotAnnotation:"true"`
	IngressPort        *string                                             `path:"state/ingress-port" module:"openconfig-optical-amplifier"`
	ΛIngressPort       []ygot.Annotation                                   `path:"state/@ingress-port" ygotAnnotation:"true"`
	InputPowerCBand    *OpticalAmplifier_Amplifier_InputPowerCBand         `path:"state/input-power-c-band" module:"openconfig-optical-amplifier"`
	ΛInputPowerCBand   []ygot.Annotation                                   `path:"state/@input-power-c-band" ygotAnnotation:"true"`
	InputPowerLBand    *OpticalAmplifier_Amplifier_InputPowerLBand         `path:"state/input-power-l-band" module:"openconfig-optical-amplifier"`
	ΛInputPowerLBand   []ygot.Annotation                                   `path:"state/@input-power-l-band" ygotAnnotation:"true"`
	InputPowerTotal    *OpticalAmplifier_Amplifier_InputPowerTotal         `path:"state/input-power-total" module:"openconfig-optical-amplifier"`
	ΛInputPowerTotal   []ygot.Annotation                                   `path:"state/@input-power-total" ygotAnnotation:"true"`
	LaserBiasCurrent   *OpticalAmplifier_Amplifier_LaserBiasCurrent        `path:"state/laser-bias-current" module:"openconfig-optical-amplifier"`
	ΛLaserBiasCurrent  []ygot.Annotation                                   `path:"state/@laser-bias-current" ygotAnnotation:"true"`
	Name               *string                                             `path:"config/name|name" module:"openconfig-optical-amplifier"`
	ΛName              []ygot.Annotation                                   `path:"config/@name|@name" ygotAnnotation:"true"`
	OpticalReturnLoss  *OpticalAmplifier_Amplifier_OpticalReturnLoss       `path:"state/optical-return-loss" module:"openconfig-optical-amplifier"`
	ΛOpticalReturnLoss []ygot.Annotation                                   `path:"state/@optical-return-loss" ygotAnnotation:"true"`
	OutputPowerCBand   *OpticalAmplifier_Amplifier_OutputPowerCBand        `path:"state/output-power-c-band" module:"openconfig-optical-amplifier"`
	ΛOutputPowerCBand  []ygot.Annotation                                   `path:"state/@output-power-c-band" ygotAnnotation:"true"`
	OutputPowerLBand   *OpticalAmplifier_Amplifier_OutputPowerLBand        `path:"state/output-power-l-band" module:"openconfig-optical-amplifier"`
	ΛOutputPowerLBand  []ygot.Annotation                                   `path:"state/@output-power-l-band" ygotAnnotation:"true"`
	OutputPowerTotal   *OpticalAmplifier_Amplifier_OutputPowerTotal        `path:"state/output-power-total" module:"openconfig-optical-amplifier"`
	ΛOutputPowerTotal  []ygot.Annotation                                   `path:"state/@output-power-total" ygotAnnotation:"true"`
	TargetGain         *float64                                            `path:"config/target-gain" module:"openconfig-optical-amplifier"`
	ΛTargetGain        []ygot.Annotation                                   `path:"config/@target-gain" ygotAnnotation:"true"`
	TargetGainTilt     *float64                                            `path:"config/target-gain-tilt" module:"openconfig-optical-amplifier"`
	ΛTargetGainTilt    []ygot.Annotation                                   `path:"config/@target-gain-tilt" ygotAnnotation:"true"`
	TargetOutputPower  *float64                                            `path:"config/target-output-power" module:"openconfig-optical-amplifier"`
	ΛTargetOutputPower []ygot.Annotation                                   `path:"config/@target-output-power" ygotAnnotation:"true"`
	Type               E_OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE `path:"config/type" module:"openconfig-optical-amplifier"`
	ΛType              []ygot.Annotation                                   `path:"config/@type" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpticalAmplifier_Amplifier implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpticalAmplifier_Amplifier) IsYANGGoStruct() {}

// OpticalAmplifier_Amplifier_ActualGain represents the /openconfig-optical-amplifier/optical-amplifier/amplifiers/amplifier/state/actual-gain YANG schema element.
type OpticalAmplifier_Amplifier_ActualGain struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-optical-amplifier"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-optical-amplifier"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Interval  *uint64           `path:"interval" module:"openconfig-optical-amplifier"`
	ΛInterval []ygot.Annotation `path:"@interval" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-optical-amplifier"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-optical-amplifier"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpticalAmplifier_Amplifier_ActualGain implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpticalAmplifier_Amplifier_ActualGain) IsYANGGoStruct() {}

// OpticalAmplifier_Amplifier_ActualGainTilt represents the /openconfig-optical-amplifier/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt YANG schema element.
type OpticalAmplifier_Amplifier_ActualGainTilt struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-optical-amplifier"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-optical-amplifier"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Interval  *uint64           `path:"interval" module:"openconfig-optical-amplifier"`
	ΛInterval []ygot.Annotation `path:"@interval" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-optical-amplifier"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-optical-amplifier"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpticalAmplifier_Amplifier_ActualGainTilt implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpticalAmplifier_Amplifier_ActualGainTilt) IsYANGGoStruct() {}

// OpticalAmplifier_Amplifier_InputPowerCBand represents the /openconfig-optical-amplifier/optical-amplifier/amplifiers/amplifier/state/input-power-c-band YANG schema element.
type OpticalAmplifier_Amplifier_InputPowerCBand struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-optical-amplifier"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-optical-amplifier"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Interval  *uint64           `path:"interval" module:"openconfig-optical-amplifier"`
	ΛInterval []ygot.Annotation `path:"@interval" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-optical-amplifier"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-optical-amplifier"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpticalAmplifier_Amplifier_InputPowerCBand implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpticalAmplifier_Amplifier_InputPowerCBand) IsYANGGoStruct() {}

// OpticalAmplifier_Amplifier_InputPowerLBand represents the /openconfig-optical-amplifier/optical-amplifier/amplifiers/amplifier/state/input-power-l-band YANG schema element.
type OpticalAmplifier_Amplifier_InputPowerLBand struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-optical-amplifier"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-optical-amplifier"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Interval  *uint64           `path:"interval" module:"openconfig-optical-amplifier"`
	ΛInterval []ygot.Annotation `path:"@interval" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-optical-amplifier"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-optical-amplifier"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpticalAmplifier_Amplifier_InputPowerLBand implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpticalAmplifier_Amplifier_InputPowerLBand) IsYANGGoStruct() {}

// OpticalAmplifier_Amplifier_InputPowerTotal represents the /openconfig-optical-amplifier/optical-amplifier/amplifiers/amplifier/state/input-power-total YANG schema element.
type OpticalAmplifier_Amplifier_InputPowerTotal struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-optical-amplifier"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-optical-amplifier"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Interval  *uint64           `path:"interval" module:"openconfig-optical-amplifier"`
	ΛInterval []ygot.Annotation `path:"@interval" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-optical-amplifier"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-optical-amplifier"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpticalAmplifier_Amplifier_InputPowerTotal implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpticalAmplifier_Amplifier_InputPowerTotal) IsYANGGoStruct() {}

// OpticalAmplifier_Amplifier_LaserBiasCurrent represents the /openconfig-optical-amplifier/optical-amplifier/amplifiers/amplifier/state/laser-bias-current YANG schema element.
type OpticalAmplifier_Amplifier_LaserBiasCurrent struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-optical-amplifier"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-optical-amplifier"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Interval  *uint64           `path:"interval" module:"openconfig-optical-amplifier"`
	ΛInterval []ygot.Annotation `path:"@interval" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-optical-amplifier"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-optical-amplifier"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpticalAmplifier_Amplifier_LaserBiasCurrent implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpticalAmplifier_Amplifier_LaserBiasCurrent) IsYANGGoStruct() {}

// OpticalAmplifier_Amplifier_OpticalReturnLoss represents the /openconfig-optical-amplifier/optical-amplifier/amplifiers/amplifier/state/optical-return-loss YANG schema element.
type OpticalAmplifier_Amplifier_OpticalReturnLoss struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-optical-amplifier"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-optical-amplifier"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Interval  *uint64           `path:"interval" module:"openconfig-optical-amplifier"`
	ΛInterval []ygot.Annotation `path:"@interval" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-optical-amplifier"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-optical-amplifier"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpticalAmplifier_Amplifier_OpticalReturnLoss implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpticalAmplifier_Amplifier_OpticalReturnLoss) IsYANGGoStruct() {}

// OpticalAmplifier_Amplifier_OutputPowerCBand represents the /openconfig-optical-amplifier/optical-amplifier/amplifiers/amplifier/state/output-power-c-band YANG schema element.
type OpticalAmplifier_Amplifier_OutputPowerCBand struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-optical-amplifier"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-optical-amplifier"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Interval  *uint64           `path:"interval" module:"openconfig-optical-amplifier"`
	ΛInterval []ygot.Annotation `path:"@interval" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-optical-amplifier"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-optical-amplifier"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpticalAmplifier_Amplifier_OutputPowerCBand implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpticalAmplifier_Amplifier_OutputPowerCBand) IsYANGGoStruct() {}

// OpticalAmplifier_Amplifier_OutputPowerLBand represents the /openconfig-optical-amplifier/optical-amplifier/amplifiers/amplifier/state/output-power-l-band YANG schema element.
type OpticalAmplifier_Amplifier_OutputPowerLBand struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-optical-amplifier"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-optical-amplifier"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Interval  *uint64           `path:"interval" module:"openconfig-optical-amplifier"`
	ΛInterval []ygot.Annotation `path:"@interval" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-optical-amplifier"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-optical-amplifier"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpticalAmplifier_Amplifier_OutputPowerLBand implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpticalAmplifier_Amplifier_OutputPowerLBand) IsYANGGoStruct() {}

// OpticalAmplifier_Amplifier_OutputPowerTotal represents the /openconfig-optical-amplifier/optical-amplifier/amplifiers/amplifier/state/output-power-total YANG schema element.
type OpticalAmplifier_Amplifier_OutputPowerTotal struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-optical-amplifier"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-optical-amplifier"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Interval  *uint64           `path:"interval" module:"openconfig-optical-amplifier"`
	ΛInterval []ygot.Annotation `path:"@interval" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-optical-amplifier"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-optical-amplifier"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpticalAmplifier_Amplifier_OutputPowerTotal implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpticalAmplifier_Amplifier_OutputPowerTotal) IsYANGGoStruct() {}

// OpticalAmplifier_SupervisoryChannel represents the /openconfig-optical-amplifier/optical-amplifier/supervisory-channels/supervisory-channel YANG schema element.
type OpticalAmplifier_SupervisoryChannel struct {
	ΛMetadata         []ygot.Annotation                                     `path:"@" ygotAnnotation:"true"`
	InputPower        *OpticalAmplifier_SupervisoryChannel_InputPower       `path:"state/input-power" module:"openconfig-optical-amplifier"`
	ΛInputPower       []ygot.Annotation                                     `path:"state/@input-power" ygotAnnotation:"true"`
	Interface         *string                                               `path:"config/interface|interface" module:"openconfig-optical-amplifier"`
	ΛInterface        []ygot.Annotation                                     `path:"config/@interface|@interface" ygotAnnotation:"true"`
	LaserBiasCurrent  *OpticalAmplifier_SupervisoryChannel_LaserBiasCurrent `path:"state/laser-bias-current" module:"openconfig-optical-amplifier"`
	ΛLaserBiasCurrent []ygot.Annotation                                     `path:"state/@laser-bias-current" ygotAnnotation:"true"`
	OutputPower       *OpticalAmplifier_SupervisoryChannel_OutputPower      `path:"state/output-power" module:"openconfig-optical-amplifier"`
	ΛOutputPower      []ygot.Annotation                                     `path:"state/@output-power" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpticalAmplifier_SupervisoryChannel implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpticalAmplifier_SupervisoryChannel) IsYANGGoStruct() {}

// OpticalAmplifier_SupervisoryChannel_InputPower represents the /openconfig-optical-amplifier/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power YANG schema element.
type OpticalAmplifier_SupervisoryChannel_InputPower struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-optical-amplifier"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-optical-amplifier"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Interval  *uint64           `path:"interval" module:"openconfig-optical-amplifier"`
	ΛInterval []ygot.Annotation `path:"@interval" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-optical-amplifier"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-optical-amplifier"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpticalAmplifier_SupervisoryChannel_InputPower implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpticalAmplifier_SupervisoryChannel_InputPower) IsYANGGoStruct() {}

// OpticalAmplifier_SupervisoryChannel_LaserBiasCurrent represents the /openconfig-optical-amplifier/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current YANG schema element.
type OpticalAmplifier_SupervisoryChannel_LaserBiasCurrent struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-optical-amplifier"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-optical-amplifier"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Interval  *uint64           `path:"interval" module:"openconfig-optical-amplifier"`
	ΛInterval []ygot.Annotation `path:"@interval" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-optical-amplifier"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-optical-amplifier"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpticalAmplifier_SupervisoryChannel_LaserBiasCurrent implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpticalAmplifier_SupervisoryChannel_LaserBiasCurrent) IsYANGGoStruct() {}

// OpticalAmplifier_SupervisoryChannel_OutputPower represents the /openconfig-optical-amplifier/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power YANG schema element.
type OpticalAmplifier_SupervisoryChannel_OutputPower struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-optical-amplifier"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-optical-amplifier"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Interval  *uint64           `path:"interval" module:"openconfig-optical-amplifier"`
	ΛInterval []ygot.Annotation `path:"@interval" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-optical-amplifier"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-optical-amplifier"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that OpticalAmplifier_SupervisoryChannel_OutputPower implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*OpticalAmplifier_SupervisoryChannel_OutputPower) IsYANGGoStruct() {}
