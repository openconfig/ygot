/*
Package exampleoc is a generated package which contains definitions
of structs which represent a YANG schema. The generated schema can be
compressed by a series of transformations (compression was true
in this case).

NOTE WELL: This is an example code file that is distributed with ygot.
It should not be used within your application, as it WILL change,
without warning. Rather, you should generate structs directly from
OpenConfig models using the ygot package.

This package was generated by github.com/openconfig/ygot
using the following YANG input files:
	- public/release/models/network-instance/openconfig-network-instance.yang
	- public/release/models/optical-transport/openconfig-optical-amplifier.yang
	- public/release/models/optical-transport/openconfig-terminal-device.yang
	- public/release/models/optical-transport/openconfig-transport-line-protection.yang
	- public/release/models/platform/openconfig-platform.yang
	- public/release/models/policy/openconfig-routing-policy.yang
	- public/release/models/lacp/openconfig-lacp.yang
	- public/release/models/system/openconfig-system.yang
	- public/release/models/lldp/openconfig-lldp.yang
	- public/release/models/stp/openconfig-spanning-tree.yang
	- public/release/models/interfaces/openconfig-interfaces.yang
	- public/release/models/interfaces/openconfig-if-ip.yang
	- public/release/models/interfaces/openconfig-if-aggregate.yang
	- public/release/models/interfaces/openconfig-if-ethernet.yang
	- public/release/models/interfaces/openconfig-if-ip-ext.yang
Imported modules were sourced from:
	- public/...
	- deps/...
*/
package exampleoc

import (
	"github.com/openconfig/ygot/ygot"
)

// Interface represents the /openconfig-interfaces/interfaces/interface YANG schema element.
type Interface struct {
	ΛMetadata        []ygot.Annotation                            `path:"@" ygotAnnotation:"true"`
	AdminStatus      E_OpenconfigInterfaces_Interface_AdminStatus `path:"state/admin-status" module:"openconfig-interfaces"`
	ΛAdminStatus     []ygot.Annotation                            `path:"state/@admin-status" ygotAnnotation:"true"`
	Aggregation      *Interface_Aggregation                       `path:"aggregation" module:"openconfig-if-aggregate"`
	ΛAggregation     []ygot.Annotation                            `path:"@aggregation" ygotAnnotation:"true"`
	Counters         *Interface_Counters                          `path:"state/counters" module:"openconfig-interfaces"`
	ΛCounters        []ygot.Annotation                            `path:"state/@counters" ygotAnnotation:"true"`
	Description      *string                                      `path:"config/description" module:"openconfig-interfaces"`
	ΛDescription     []ygot.Annotation                            `path:"config/@description" ygotAnnotation:"true"`
	Enabled          *bool                                        `path:"config/enabled" module:"openconfig-interfaces"`
	ΛEnabled         []ygot.Annotation                            `path:"config/@enabled" ygotAnnotation:"true"`
	Ethernet         *Interface_Ethernet                          `path:"ethernet" module:"openconfig-if-ethernet"`
	ΛEthernet        []ygot.Annotation                            `path:"@ethernet" ygotAnnotation:"true"`
	HardwarePort     *string                                      `path:"state/hardware-port" module:"openconfig-platform-port"`
	ΛHardwarePort    []ygot.Annotation                            `path:"state/@hardware-port" ygotAnnotation:"true"`
	HoldTime         *Interface_HoldTime                          `path:"hold-time" module:"openconfig-interfaces"`
	ΛHoldTime        []ygot.Annotation                            `path:"@hold-time" ygotAnnotation:"true"`
	Ifindex          *uint32                                      `path:"state/ifindex" module:"openconfig-interfaces"`
	ΛIfindex         []ygot.Annotation                            `path:"state/@ifindex" ygotAnnotation:"true"`
	LastChange       *uint64                                      `path:"state/last-change" module:"openconfig-interfaces"`
	ΛLastChange      []ygot.Annotation                            `path:"state/@last-change" ygotAnnotation:"true"`
	LoopbackMode     *bool                                        `path:"config/loopback-mode" module:"openconfig-interfaces"`
	ΛLoopbackMode    []ygot.Annotation                            `path:"config/@loopback-mode" ygotAnnotation:"true"`
	Mtu              *uint16                                      `path:"config/mtu" module:"openconfig-interfaces"`
	ΛMtu             []ygot.Annotation                            `path:"config/@mtu" ygotAnnotation:"true"`
	Name             *string                                      `path:"config/name|name" module:"openconfig-interfaces"`
	ΛName            []ygot.Annotation                            `path:"config/@name|@name" ygotAnnotation:"true"`
	OperStatus       E_OpenconfigInterfaces_Interface_OperStatus  `path:"state/oper-status" module:"openconfig-interfaces"`
	ΛOperStatus      []ygot.Annotation                            `path:"state/@oper-status" ygotAnnotation:"true"`
	PhysicalChannel  []uint16                                     `path:"state/physical-channel" module:"openconfig-platform-transceiver"`
	ΛPhysicalChannel []ygot.Annotation                            `path:"state/@physical-channel" ygotAnnotation:"true"`
	RoutedVlan       *Interface_RoutedVlan                        `path:"routed-vlan" module:"openconfig-vlan"`
	ΛRoutedVlan      []ygot.Annotation                            `path:"@routed-vlan" ygotAnnotation:"true"`
	Sonet            *Interface_Sonet                             `path:"sonet" module:"openconfig-transport-line-common"`
	ΛSonet           []ygot.Annotation                            `path:"@sonet" ygotAnnotation:"true"`
	Subinterface     map[uint32]*Interface_Subinterface           `path:"subinterfaces/subinterface" module:"openconfig-interfaces"`
	ΛSubinterface    []ygot.Annotation                            `path:"subinterfaces/@subinterface" ygotAnnotation:"true"`
	Tpid             E_OpenconfigVlanTypes_TPID_TYPES             `path:"config/tpid" module:"openconfig-vlan"`
	ΛTpid            []ygot.Annotation                            `path:"config/@tpid" ygotAnnotation:"true"`
	Type             E_IETFInterfaces_InterfaceType               `path:"config/type" module:"openconfig-interfaces"`
	ΛType            []ygot.Annotation                            `path:"config/@type" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface) IsYANGGoStruct() {}

// Interface_Aggregation represents the /openconfig-interfaces/interfaces/interface/aggregation YANG schema element.
type Interface_Aggregation struct {
	ΛMetadata     []ygot.Annotation                       `path:"@" ygotAnnotation:"true"`
	LagSpeed      *uint32                                 `path:"state/lag-speed" module:"openconfig-if-aggregate"`
	ΛLagSpeed     []ygot.Annotation                       `path:"state/@lag-speed" ygotAnnotation:"true"`
	LagType       E_OpenconfigIfAggregate_AggregationType `path:"config/lag-type" module:"openconfig-if-aggregate"`
	ΛLagType      []ygot.Annotation                       `path:"config/@lag-type" ygotAnnotation:"true"`
	Member        []string                                `path:"state/member" module:"openconfig-if-aggregate"`
	ΛMember       []ygot.Annotation                       `path:"state/@member" ygotAnnotation:"true"`
	MinLinks      *uint16                                 `path:"config/min-links" module:"openconfig-if-aggregate"`
	ΛMinLinks     []ygot.Annotation                       `path:"config/@min-links" ygotAnnotation:"true"`
	SwitchedVlan  *Interface_Aggregation_SwitchedVlan     `path:"switched-vlan" module:"openconfig-vlan"`
	ΛSwitchedVlan []ygot.Annotation                       `path:"@switched-vlan" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Aggregation implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Aggregation) IsYANGGoStruct() {}

// Interface_Aggregation_SwitchedVlan represents the /openconfig-interfaces/interfaces/interface/aggregation/switched-vlan YANG schema element.
type Interface_Aggregation_SwitchedVlan struct {
	ΛMetadata      []ygot.Annotation                                     `path:"@" ygotAnnotation:"true"`
	AccessVlan     *uint16                                               `path:"config/access-vlan" module:"openconfig-vlan"`
	ΛAccessVlan    []ygot.Annotation                                     `path:"config/@access-vlan" ygotAnnotation:"true"`
	InterfaceMode  E_OpenconfigVlan_VlanModeType                         `path:"config/interface-mode" module:"openconfig-vlan"`
	ΛInterfaceMode []ygot.Annotation                                     `path:"config/@interface-mode" ygotAnnotation:"true"`
	NativeVlan     *uint16                                               `path:"config/native-vlan" module:"openconfig-vlan"`
	ΛNativeVlan    []ygot.Annotation                                     `path:"config/@native-vlan" ygotAnnotation:"true"`
	TrunkVlans     []Interface_Aggregation_SwitchedVlan_TrunkVlans_Union `path:"config/trunk-vlans" module:"openconfig-vlan"`
	ΛTrunkVlans    []ygot.Annotation                                     `path:"config/@trunk-vlans" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Aggregation_SwitchedVlan implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Aggregation_SwitchedVlan) IsYANGGoStruct() {}

// Interface_Counters represents the /openconfig-interfaces/interfaces/interface/state/counters YANG schema element.
type Interface_Counters struct {
	ΛMetadata           []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	CarrierTransitions  *uint64           `path:"carrier-transitions" module:"openconfig-interfaces"`
	ΛCarrierTransitions []ygot.Annotation `path:"@carrier-transitions" ygotAnnotation:"true"`
	InBroadcastPkts     *uint64           `path:"in-broadcast-pkts" module:"openconfig-interfaces"`
	ΛInBroadcastPkts    []ygot.Annotation `path:"@in-broadcast-pkts" ygotAnnotation:"true"`
	InDiscards          *uint64           `path:"in-discards" module:"openconfig-interfaces"`
	ΛInDiscards         []ygot.Annotation `path:"@in-discards" ygotAnnotation:"true"`
	InErrors            *uint64           `path:"in-errors" module:"openconfig-interfaces"`
	ΛInErrors           []ygot.Annotation `path:"@in-errors" ygotAnnotation:"true"`
	InFcsErrors         *uint64           `path:"in-fcs-errors" module:"openconfig-interfaces"`
	ΛInFcsErrors        []ygot.Annotation `path:"@in-fcs-errors" ygotAnnotation:"true"`
	InMulticastPkts     *uint64           `path:"in-multicast-pkts" module:"openconfig-interfaces"`
	ΛInMulticastPkts    []ygot.Annotation `path:"@in-multicast-pkts" ygotAnnotation:"true"`
	InOctets            *uint64           `path:"in-octets" module:"openconfig-interfaces"`
	ΛInOctets           []ygot.Annotation `path:"@in-octets" ygotAnnotation:"true"`
	InUnicastPkts       *uint64           `path:"in-unicast-pkts" module:"openconfig-interfaces"`
	ΛInUnicastPkts      []ygot.Annotation `path:"@in-unicast-pkts" ygotAnnotation:"true"`
	InUnknownProtos     *uint64           `path:"in-unknown-protos" module:"openconfig-interfaces"`
	ΛInUnknownProtos    []ygot.Annotation `path:"@in-unknown-protos" ygotAnnotation:"true"`
	LastClear           *uint64           `path:"last-clear" module:"openconfig-interfaces"`
	ΛLastClear          []ygot.Annotation `path:"@last-clear" ygotAnnotation:"true"`
	OutBroadcastPkts    *uint64           `path:"out-broadcast-pkts" module:"openconfig-interfaces"`
	ΛOutBroadcastPkts   []ygot.Annotation `path:"@out-broadcast-pkts" ygotAnnotation:"true"`
	OutDiscards         *uint64           `path:"out-discards" module:"openconfig-interfaces"`
	ΛOutDiscards        []ygot.Annotation `path:"@out-discards" ygotAnnotation:"true"`
	OutErrors           *uint64           `path:"out-errors" module:"openconfig-interfaces"`
	ΛOutErrors          []ygot.Annotation `path:"@out-errors" ygotAnnotation:"true"`
	OutMulticastPkts    *uint64           `path:"out-multicast-pkts" module:"openconfig-interfaces"`
	ΛOutMulticastPkts   []ygot.Annotation `path:"@out-multicast-pkts" ygotAnnotation:"true"`
	OutOctets           *uint64           `path:"out-octets" module:"openconfig-interfaces"`
	ΛOutOctets          []ygot.Annotation `path:"@out-octets" ygotAnnotation:"true"`
	OutUnicastPkts      *uint64           `path:"out-unicast-pkts" module:"openconfig-interfaces"`
	ΛOutUnicastPkts     []ygot.Annotation `path:"@out-unicast-pkts" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Counters implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Counters) IsYANGGoStruct() {}

// Interface_Ethernet represents the /openconfig-interfaces/interfaces/interface/ethernet YANG schema element.
type Interface_Ethernet struct {
	ΛMetadata             []ygot.Annotation                                    `path:"@" ygotAnnotation:"true"`
	AggregateId           *string                                              `path:"config/aggregate-id" module:"openconfig-if-aggregate"`
	ΛAggregateId          []ygot.Annotation                                    `path:"config/@aggregate-id" ygotAnnotation:"true"`
	AutoNegotiate         *bool                                                `path:"config/auto-negotiate" module:"openconfig-if-ethernet"`
	ΛAutoNegotiate        []ygot.Annotation                                    `path:"config/@auto-negotiate" ygotAnnotation:"true"`
	Counters              *Interface_Ethernet_Counters                         `path:"state/counters" module:"openconfig-if-ethernet"`
	ΛCounters             []ygot.Annotation                                    `path:"state/@counters" ygotAnnotation:"true"`
	DuplexMode            E_OpenconfigIfEthernet_Ethernet_DuplexMode           `path:"config/duplex-mode" module:"openconfig-if-ethernet"`
	ΛDuplexMode           []ygot.Annotation                                    `path:"config/@duplex-mode" ygotAnnotation:"true"`
	EnableFlowControl     *bool                                                `path:"config/enable-flow-control" module:"openconfig-if-ethernet"`
	ΛEnableFlowControl    []ygot.Annotation                                    `path:"config/@enable-flow-control" ygotAnnotation:"true"`
	HwMacAddress          *string                                              `path:"state/hw-mac-address" module:"openconfig-if-ethernet"`
	ΛHwMacAddress         []ygot.Annotation                                    `path:"state/@hw-mac-address" ygotAnnotation:"true"`
	MacAddress            *string                                              `path:"config/mac-address" module:"openconfig-if-ethernet"`
	ΛMacAddress           []ygot.Annotation                                    `path:"config/@mac-address" ygotAnnotation:"true"`
	NegotiatedDuplexMode  E_OpenconfigIfEthernet_Ethernet_NegotiatedDuplexMode `path:"state/negotiated-duplex-mode" module:"openconfig-if-ethernet"`
	ΛNegotiatedDuplexMode []ygot.Annotation                                    `path:"state/@negotiated-duplex-mode" ygotAnnotation:"true"`
	NegotiatedPortSpeed   E_OpenconfigIfEthernet_ETHERNET_SPEED                `path:"state/negotiated-port-speed" module:"openconfig-if-ethernet"`
	ΛNegotiatedPortSpeed  []ygot.Annotation                                    `path:"state/@negotiated-port-speed" ygotAnnotation:"true"`
	PortSpeed             E_OpenconfigIfEthernet_ETHERNET_SPEED                `path:"config/port-speed" module:"openconfig-if-ethernet"`
	ΛPortSpeed            []ygot.Annotation                                    `path:"config/@port-speed" ygotAnnotation:"true"`
	SwitchedVlan          *Interface_Ethernet_SwitchedVlan                     `path:"switched-vlan" module:"openconfig-vlan"`
	ΛSwitchedVlan         []ygot.Annotation                                    `path:"@switched-vlan" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Ethernet implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Ethernet) IsYANGGoStruct() {}

// Interface_Ethernet_Counters represents the /openconfig-interfaces/interfaces/interface/ethernet/state/counters YANG schema element.
type Interface_Ethernet_Counters struct {
	ΛMetadata            []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	In_8021QFrames       *uint64           `path:"in-8021q-frames" module:"openconfig-if-ethernet"`
	ΛIn_8021QFrames      []ygot.Annotation `path:"@in-8021q-frames" ygotAnnotation:"true"`
	InCrcErrors          *uint64           `path:"in-crc-errors" module:"openconfig-if-ethernet"`
	ΛInCrcErrors         []ygot.Annotation `path:"@in-crc-errors" ygotAnnotation:"true"`
	InFragmentFrames     *uint64           `path:"in-fragment-frames" module:"openconfig-if-ethernet"`
	ΛInFragmentFrames    []ygot.Annotation `path:"@in-fragment-frames" ygotAnnotation:"true"`
	InJabberFrames       *uint64           `path:"in-jabber-frames" module:"openconfig-if-ethernet"`
	ΛInJabberFrames      []ygot.Annotation `path:"@in-jabber-frames" ygotAnnotation:"true"`
	InMacControlFrames   *uint64           `path:"in-mac-control-frames" module:"openconfig-if-ethernet"`
	ΛInMacControlFrames  []ygot.Annotation `path:"@in-mac-control-frames" ygotAnnotation:"true"`
	InMacPauseFrames     *uint64           `path:"in-mac-pause-frames" module:"openconfig-if-ethernet"`
	ΛInMacPauseFrames    []ygot.Annotation `path:"@in-mac-pause-frames" ygotAnnotation:"true"`
	InOversizeFrames     *uint64           `path:"in-oversize-frames" module:"openconfig-if-ethernet"`
	ΛInOversizeFrames    []ygot.Annotation `path:"@in-oversize-frames" ygotAnnotation:"true"`
	Out_8021QFrames      *uint64           `path:"out-8021q-frames" module:"openconfig-if-ethernet"`
	ΛOut_8021QFrames     []ygot.Annotation `path:"@out-8021q-frames" ygotAnnotation:"true"`
	OutMacControlFrames  *uint64           `path:"out-mac-control-frames" module:"openconfig-if-ethernet"`
	ΛOutMacControlFrames []ygot.Annotation `path:"@out-mac-control-frames" ygotAnnotation:"true"`
	OutMacPauseFrames    *uint64           `path:"out-mac-pause-frames" module:"openconfig-if-ethernet"`
	ΛOutMacPauseFrames   []ygot.Annotation `path:"@out-mac-pause-frames" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Ethernet_Counters implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Ethernet_Counters) IsYANGGoStruct() {}

// Interface_Ethernet_SwitchedVlan represents the /openconfig-interfaces/interfaces/interface/ethernet/switched-vlan YANG schema element.
type Interface_Ethernet_SwitchedVlan struct {
	ΛMetadata      []ygot.Annotation                                  `path:"@" ygotAnnotation:"true"`
	AccessVlan     *uint16                                            `path:"config/access-vlan" module:"openconfig-vlan"`
	ΛAccessVlan    []ygot.Annotation                                  `path:"config/@access-vlan" ygotAnnotation:"true"`
	InterfaceMode  E_OpenconfigVlan_VlanModeType                      `path:"config/interface-mode" module:"openconfig-vlan"`
	ΛInterfaceMode []ygot.Annotation                                  `path:"config/@interface-mode" ygotAnnotation:"true"`
	NativeVlan     *uint16                                            `path:"config/native-vlan" module:"openconfig-vlan"`
	ΛNativeVlan    []ygot.Annotation                                  `path:"config/@native-vlan" ygotAnnotation:"true"`
	TrunkVlans     []Interface_Ethernet_SwitchedVlan_TrunkVlans_Union `path:"config/trunk-vlans" module:"openconfig-vlan"`
	ΛTrunkVlans    []ygot.Annotation                                  `path:"config/@trunk-vlans" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Ethernet_SwitchedVlan implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Ethernet_SwitchedVlan) IsYANGGoStruct() {}

// Interface_HoldTime represents the /openconfig-interfaces/interfaces/interface/hold-time YANG schema element.
type Interface_HoldTime struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Down      *uint32           `path:"config/down" module:"openconfig-interfaces"`
	ΛDown     []ygot.Annotation `path:"config/@down" ygotAnnotation:"true"`
	Up        *uint32           `path:"config/up" module:"openconfig-interfaces"`
	ΛUp       []ygot.Annotation `path:"config/@up" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_HoldTime implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_HoldTime) IsYANGGoStruct() {}

// Interface_RoutedVlan represents the /openconfig-interfaces/interfaces/interface/routed-vlan YANG schema element.
type Interface_RoutedVlan struct {
	ΛMetadata []ygot.Annotation               `path:"@" ygotAnnotation:"true"`
	Ipv4      *Interface_RoutedVlan_Ipv4      `path:"ipv4" module:"openconfig-if-ip"`
	ΛIpv4     []ygot.Annotation               `path:"@ipv4" ygotAnnotation:"true"`
	Ipv6      *Interface_RoutedVlan_Ipv6      `path:"ipv6" module:"openconfig-if-ip"`
	ΛIpv6     []ygot.Annotation               `path:"@ipv6" ygotAnnotation:"true"`
	Vlan      Interface_RoutedVlan_Vlan_Union `path:"config/vlan" module:"openconfig-vlan"`
	ΛVlan     []ygot.Annotation               `path:"config/@vlan" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_RoutedVlan implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_RoutedVlan) IsYANGGoStruct() {}

// Interface_RoutedVlan_Ipv4 represents the /openconfig-interfaces/interfaces/interface/routed-vlan/ipv4 YANG schema element.
type Interface_RoutedVlan_Ipv4 struct {
	ΛMetadata   []ygot.Annotation                              `path:"@" ygotAnnotation:"true"`
	Address     map[string]*Interface_RoutedVlan_Ipv4_Address  `path:"addresses/address" module:"openconfig-if-ip"`
	ΛAddress    []ygot.Annotation                              `path:"addresses/@address" ygotAnnotation:"true"`
	Counters    *Interface_RoutedVlan_Ipv4_Counters            `path:"state/counters" module:"openconfig-if-ip"`
	ΛCounters   []ygot.Annotation                              `path:"state/@counters" ygotAnnotation:"true"`
	DhcpClient  *bool                                          `path:"config/dhcp-client" module:"openconfig-if-ip"`
	ΛDhcpClient []ygot.Annotation                              `path:"config/@dhcp-client" ygotAnnotation:"true"`
	Enabled     *bool                                          `path:"config/enabled" module:"openconfig-if-ip"`
	ΛEnabled    []ygot.Annotation                              `path:"config/@enabled" ygotAnnotation:"true"`
	Mtu         *uint16                                        `path:"config/mtu" module:"openconfig-if-ip"`
	ΛMtu        []ygot.Annotation                              `path:"config/@mtu" ygotAnnotation:"true"`
	Neighbor    map[string]*Interface_RoutedVlan_Ipv4_Neighbor `path:"neighbors/neighbor" module:"openconfig-if-ip"`
	ΛNeighbor   []ygot.Annotation                              `path:"neighbors/@neighbor" ygotAnnotation:"true"`
	ProxyArp    *Interface_RoutedVlan_Ipv4_ProxyArp            `path:"proxy-arp" module:"openconfig-if-ip"`
	ΛProxyArp   []ygot.Annotation                              `path:"@proxy-arp" ygotAnnotation:"true"`
	Unnumbered  *Interface_RoutedVlan_Ipv4_Unnumbered          `path:"unnumbered" module:"openconfig-if-ip"`
	ΛUnnumbered []ygot.Annotation                              `path:"@unnumbered" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_RoutedVlan_Ipv4 implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_RoutedVlan_Ipv4) IsYANGGoStruct() {}

// Interface_RoutedVlan_Ipv4_Address represents the /openconfig-interfaces/interfaces/interface/routed-vlan/ipv4/addresses/address YANG schema element.
type Interface_RoutedVlan_Ipv4_Address struct {
	ΛMetadata     []ygot.Annotation                                      `path:"@" ygotAnnotation:"true"`
	Ip            *string                                                `path:"config/ip|ip" module:"openconfig-if-ip"`
	ΛIp           []ygot.Annotation                                      `path:"config/@ip|@ip" ygotAnnotation:"true"`
	Origin        E_OpenconfigIfIp_IpAddressOrigin                       `path:"state/origin" module:"openconfig-if-ip"`
	ΛOrigin       []ygot.Annotation                                      `path:"state/@origin" ygotAnnotation:"true"`
	PrefixLength  *uint8                                                 `path:"config/prefix-length" module:"openconfig-if-ip"`
	ΛPrefixLength []ygot.Annotation                                      `path:"config/@prefix-length" ygotAnnotation:"true"`
	VrrpGroup     map[uint8]*Interface_RoutedVlan_Ipv4_Address_VrrpGroup `path:"vrrp/vrrp-group" module:"openconfig-if-ip"`
	ΛVrrpGroup    []ygot.Annotation                                      `path:"vrrp/@vrrp-group" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_RoutedVlan_Ipv4_Address implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_RoutedVlan_Ipv4_Address) IsYANGGoStruct() {}

// Interface_RoutedVlan_Ipv4_Address_VrrpGroup represents the /openconfig-interfaces/interfaces/interface/routed-vlan/ipv4/addresses/address/vrrp/vrrp-group YANG schema element.
type Interface_RoutedVlan_Ipv4_Address_VrrpGroup struct {
	ΛMetadata              []ygot.Annotation                                              `path:"@" ygotAnnotation:"true"`
	AcceptMode             *bool                                                          `path:"config/accept-mode" module:"openconfig-if-ip"`
	ΛAcceptMode            []ygot.Annotation                                              `path:"config/@accept-mode" ygotAnnotation:"true"`
	AdvertisementInterval  *uint16                                                        `path:"config/advertisement-interval" module:"openconfig-if-ip"`
	ΛAdvertisementInterval []ygot.Annotation                                              `path:"config/@advertisement-interval" ygotAnnotation:"true"`
	CurrentPriority        *uint8                                                         `path:"state/current-priority" module:"openconfig-if-ip"`
	ΛCurrentPriority       []ygot.Annotation                                              `path:"state/@current-priority" ygotAnnotation:"true"`
	InterfaceTracking      *Interface_RoutedVlan_Ipv4_Address_VrrpGroup_InterfaceTracking `path:"interface-tracking" module:"openconfig-if-ip"`
	ΛInterfaceTracking     []ygot.Annotation                                              `path:"@interface-tracking" ygotAnnotation:"true"`
	Preempt                *bool                                                          `path:"config/preempt" module:"openconfig-if-ip"`
	ΛPreempt               []ygot.Annotation                                              `path:"config/@preempt" ygotAnnotation:"true"`
	PreemptDelay           *uint16                                                        `path:"config/preempt-delay" module:"openconfig-if-ip"`
	ΛPreemptDelay          []ygot.Annotation                                              `path:"config/@preempt-delay" ygotAnnotation:"true"`
	Priority               *uint8                                                         `path:"config/priority" module:"openconfig-if-ip"`
	ΛPriority              []ygot.Annotation                                              `path:"config/@priority" ygotAnnotation:"true"`
	VirtualAddress         []string                                                       `path:"config/virtual-address" module:"openconfig-if-ip"`
	ΛVirtualAddress        []ygot.Annotation                                              `path:"config/@virtual-address" ygotAnnotation:"true"`
	VirtualRouterId        *uint8                                                         `path:"config/virtual-router-id|virtual-router-id" module:"openconfig-if-ip"`
	ΛVirtualRouterId       []ygot.Annotation                                              `path:"config/@virtual-router-id|@virtual-router-id" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_RoutedVlan_Ipv4_Address_VrrpGroup implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_RoutedVlan_Ipv4_Address_VrrpGroup) IsYANGGoStruct() {}

// Interface_RoutedVlan_Ipv4_Address_VrrpGroup_InterfaceTracking represents the /openconfig-interfaces/interfaces/interface/routed-vlan/ipv4/addresses/address/vrrp/vrrp-group/interface-tracking YANG schema element.
type Interface_RoutedVlan_Ipv4_Address_VrrpGroup_InterfaceTracking struct {
	ΛMetadata          []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	PriorityDecrement  *uint8            `path:"config/priority-decrement" module:"openconfig-if-ip"`
	ΛPriorityDecrement []ygot.Annotation `path:"config/@priority-decrement" ygotAnnotation:"true"`
	TrackInterface     []string          `path:"config/track-interface" module:"openconfig-if-ip"`
	ΛTrackInterface    []ygot.Annotation `path:"config/@track-interface" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_RoutedVlan_Ipv4_Address_VrrpGroup_InterfaceTracking implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_RoutedVlan_Ipv4_Address_VrrpGroup_InterfaceTracking) IsYANGGoStruct() {}

// Interface_RoutedVlan_Ipv4_Counters represents the /openconfig-interfaces/interfaces/interface/routed-vlan/ipv4/state/counters YANG schema element.
type Interface_RoutedVlan_Ipv4_Counters struct {
	ΛMetadata           []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	InDiscardedPkts     *uint64           `path:"in-discarded-pkts" module:"openconfig-if-ip"`
	ΛInDiscardedPkts    []ygot.Annotation `path:"@in-discarded-pkts" ygotAnnotation:"true"`
	InErrorPkts         *uint64           `path:"in-error-pkts" module:"openconfig-if-ip"`
	ΛInErrorPkts        []ygot.Annotation `path:"@in-error-pkts" ygotAnnotation:"true"`
	InForwardedOctets   *uint64           `path:"in-forwarded-octets" module:"openconfig-if-ip"`
	ΛInForwardedOctets  []ygot.Annotation `path:"@in-forwarded-octets" ygotAnnotation:"true"`
	InForwardedPkts     *uint64           `path:"in-forwarded-pkts" module:"openconfig-if-ip"`
	ΛInForwardedPkts    []ygot.Annotation `path:"@in-forwarded-pkts" ygotAnnotation:"true"`
	InOctets            *uint64           `path:"in-octets" module:"openconfig-if-ip"`
	ΛInOctets           []ygot.Annotation `path:"@in-octets" ygotAnnotation:"true"`
	InPkts              *uint64           `path:"in-pkts" module:"openconfig-if-ip"`
	ΛInPkts             []ygot.Annotation `path:"@in-pkts" ygotAnnotation:"true"`
	OutDiscardedPkts    *uint64           `path:"out-discarded-pkts" module:"openconfig-if-ip"`
	ΛOutDiscardedPkts   []ygot.Annotation `path:"@out-discarded-pkts" ygotAnnotation:"true"`
	OutErrorPkts        *uint64           `path:"out-error-pkts" module:"openconfig-if-ip"`
	ΛOutErrorPkts       []ygot.Annotation `path:"@out-error-pkts" ygotAnnotation:"true"`
	OutForwardedOctets  *uint64           `path:"out-forwarded-octets" module:"openconfig-if-ip"`
	ΛOutForwardedOctets []ygot.Annotation `path:"@out-forwarded-octets" ygotAnnotation:"true"`
	OutForwardedPkts    *uint64           `path:"out-forwarded-pkts" module:"openconfig-if-ip"`
	ΛOutForwardedPkts   []ygot.Annotation `path:"@out-forwarded-pkts" ygotAnnotation:"true"`
	OutOctets           *uint64           `path:"out-octets" module:"openconfig-if-ip"`
	ΛOutOctets          []ygot.Annotation `path:"@out-octets" ygotAnnotation:"true"`
	OutPkts             *uint64           `path:"out-pkts" module:"openconfig-if-ip"`
	ΛOutPkts            []ygot.Annotation `path:"@out-pkts" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_RoutedVlan_Ipv4_Counters implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_RoutedVlan_Ipv4_Counters) IsYANGGoStruct() {}

// Interface_RoutedVlan_Ipv4_Neighbor represents the /openconfig-interfaces/interfaces/interface/routed-vlan/ipv4/neighbors/neighbor YANG schema element.
type Interface_RoutedVlan_Ipv4_Neighbor struct {
	ΛMetadata         []ygot.Annotation               `path:"@" ygotAnnotation:"true"`
	Ip                *string                         `path:"config/ip|ip" module:"openconfig-if-ip"`
	ΛIp               []ygot.Annotation               `path:"config/@ip|@ip" ygotAnnotation:"true"`
	LinkLayerAddress  *string                         `path:"config/link-layer-address" module:"openconfig-if-ip"`
	ΛLinkLayerAddress []ygot.Annotation               `path:"config/@link-layer-address" ygotAnnotation:"true"`
	Origin            E_OpenconfigIfIp_NeighborOrigin `path:"state/origin" module:"openconfig-if-ip"`
	ΛOrigin           []ygot.Annotation               `path:"state/@origin" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_RoutedVlan_Ipv4_Neighbor implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_RoutedVlan_Ipv4_Neighbor) IsYANGGoStruct() {}

// Interface_RoutedVlan_Ipv4_ProxyArp represents the /openconfig-interfaces/interfaces/interface/routed-vlan/ipv4/proxy-arp YANG schema element.
type Interface_RoutedVlan_Ipv4_ProxyArp struct {
	ΛMetadata []ygot.Annotation              `path:"@" ygotAnnotation:"true"`
	Mode      E_OpenconfigIfIp_ProxyArp_Mode `path:"config/mode" module:"openconfig-if-ip"`
	ΛMode     []ygot.Annotation              `path:"config/@mode" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_RoutedVlan_Ipv4_ProxyArp implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_RoutedVlan_Ipv4_ProxyArp) IsYANGGoStruct() {}

// Interface_RoutedVlan_Ipv4_Unnumbered represents the /openconfig-interfaces/interfaces/interface/routed-vlan/ipv4/unnumbered YANG schema element.
type Interface_RoutedVlan_Ipv4_Unnumbered struct {
	ΛMetadata     []ygot.Annotation                                  `path:"@" ygotAnnotation:"true"`
	Enabled       *bool                                              `path:"config/enabled" module:"openconfig-if-ip"`
	ΛEnabled      []ygot.Annotation                                  `path:"config/@enabled" ygotAnnotation:"true"`
	InterfaceRef  *Interface_RoutedVlan_Ipv4_Unnumbered_InterfaceRef `path:"interface-ref" module:"openconfig-if-ip"`
	ΛInterfaceRef []ygot.Annotation                                  `path:"@interface-ref" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_RoutedVlan_Ipv4_Unnumbered implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_RoutedVlan_Ipv4_Unnumbered) IsYANGGoStruct() {}

// Interface_RoutedVlan_Ipv4_Unnumbered_InterfaceRef represents the /openconfig-interfaces/interfaces/interface/routed-vlan/ipv4/unnumbered/interface-ref YANG schema element.
type Interface_RoutedVlan_Ipv4_Unnumbered_InterfaceRef struct {
	ΛMetadata     []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Interface     *string           `path:"config/interface" module:"openconfig-if-ip"`
	ΛInterface    []ygot.Annotation `path:"config/@interface" ygotAnnotation:"true"`
	Subinterface  *uint32           `path:"config/subinterface" module:"openconfig-if-ip"`
	ΛSubinterface []ygot.Annotation `path:"config/@subinterface" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_RoutedVlan_Ipv4_Unnumbered_InterfaceRef implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_RoutedVlan_Ipv4_Unnumbered_InterfaceRef) IsYANGGoStruct() {}

// Interface_RoutedVlan_Ipv6 represents the /openconfig-interfaces/interfaces/interface/routed-vlan/ipv6 YANG schema element.
type Interface_RoutedVlan_Ipv6 struct {
	ΛMetadata               []ygot.Annotation                              `path:"@" ygotAnnotation:"true"`
	Address                 map[string]*Interface_RoutedVlan_Ipv6_Address  `path:"addresses/address" module:"openconfig-if-ip"`
	ΛAddress                []ygot.Annotation                              `path:"addresses/@address" ygotAnnotation:"true"`
	Counters                *Interface_RoutedVlan_Ipv6_Counters            `path:"state/counters" module:"openconfig-if-ip"`
	ΛCounters               []ygot.Annotation                              `path:"state/@counters" ygotAnnotation:"true"`
	DhcpClient              *bool                                          `path:"config/dhcp-client" module:"openconfig-if-ip"`
	ΛDhcpClient             []ygot.Annotation                              `path:"config/@dhcp-client" ygotAnnotation:"true"`
	DupAddrDetectTransmits  *uint32                                        `path:"config/dup-addr-detect-transmits" module:"openconfig-if-ip"`
	ΛDupAddrDetectTransmits []ygot.Annotation                              `path:"config/@dup-addr-detect-transmits" ygotAnnotation:"true"`
	Enabled                 *bool                                          `path:"config/enabled" module:"openconfig-if-ip"`
	ΛEnabled                []ygot.Annotation                              `path:"config/@enabled" ygotAnnotation:"true"`
	Mtu                     *uint32                                        `path:"config/mtu" module:"openconfig-if-ip"`
	ΛMtu                    []ygot.Annotation                              `path:"config/@mtu" ygotAnnotation:"true"`
	Neighbor                map[string]*Interface_RoutedVlan_Ipv6_Neighbor `path:"neighbors/neighbor" module:"openconfig-if-ip"`
	ΛNeighbor               []ygot.Annotation                              `path:"neighbors/@neighbor" ygotAnnotation:"true"`
	RouterAdvertisement     *Interface_RoutedVlan_Ipv6_RouterAdvertisement `path:"router-advertisement" module:"openconfig-if-ip"`
	ΛRouterAdvertisement    []ygot.Annotation                              `path:"@router-advertisement" ygotAnnotation:"true"`
	Unnumbered              *Interface_RoutedVlan_Ipv6_Unnumbered          `path:"unnumbered" module:"openconfig-if-ip"`
	ΛUnnumbered             []ygot.Annotation                              `path:"@unnumbered" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_RoutedVlan_Ipv6 implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_RoutedVlan_Ipv6) IsYANGGoStruct() {}

// Interface_RoutedVlan_Ipv6_Address represents the /openconfig-interfaces/interfaces/interface/routed-vlan/ipv6/addresses/address YANG schema element.
type Interface_RoutedVlan_Ipv6_Address struct {
	ΛMetadata     []ygot.Annotation                                      `path:"@" ygotAnnotation:"true"`
	Ip            *string                                                `path:"config/ip|ip" module:"openconfig-if-ip"`
	ΛIp           []ygot.Annotation                                      `path:"config/@ip|@ip" ygotAnnotation:"true"`
	Origin        E_OpenconfigIfIp_IpAddressOrigin                       `path:"state/origin" module:"openconfig-if-ip"`
	ΛOrigin       []ygot.Annotation                                      `path:"state/@origin" ygotAnnotation:"true"`
	PrefixLength  *uint8                                                 `path:"config/prefix-length" module:"openconfig-if-ip"`
	ΛPrefixLength []ygot.Annotation                                      `path:"config/@prefix-length" ygotAnnotation:"true"`
	Status        E_OpenconfigIfIp_Address_Status                        `path:"state/status" module:"openconfig-if-ip"`
	ΛStatus       []ygot.Annotation                                      `path:"state/@status" ygotAnnotation:"true"`
	VrrpGroup     map[uint8]*Interface_RoutedVlan_Ipv6_Address_VrrpGroup `path:"vrrp/vrrp-group" module:"openconfig-if-ip"`
	ΛVrrpGroup    []ygot.Annotation                                      `path:"vrrp/@vrrp-group" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_RoutedVlan_Ipv6_Address implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_RoutedVlan_Ipv6_Address) IsYANGGoStruct() {}

// Interface_RoutedVlan_Ipv6_Address_VrrpGroup represents the /openconfig-interfaces/interfaces/interface/routed-vlan/ipv6/addresses/address/vrrp/vrrp-group YANG schema element.
type Interface_RoutedVlan_Ipv6_Address_VrrpGroup struct {
	ΛMetadata              []ygot.Annotation                                              `path:"@" ygotAnnotation:"true"`
	AcceptMode             *bool                                                          `path:"config/accept-mode" module:"openconfig-if-ip"`
	ΛAcceptMode            []ygot.Annotation                                              `path:"config/@accept-mode" ygotAnnotation:"true"`
	AdvertisementInterval  *uint16                                                        `path:"config/advertisement-interval" module:"openconfig-if-ip"`
	ΛAdvertisementInterval []ygot.Annotation                                              `path:"config/@advertisement-interval" ygotAnnotation:"true"`
	CurrentPriority        *uint8                                                         `path:"state/current-priority" module:"openconfig-if-ip"`
	ΛCurrentPriority       []ygot.Annotation                                              `path:"state/@current-priority" ygotAnnotation:"true"`
	InterfaceTracking      *Interface_RoutedVlan_Ipv6_Address_VrrpGroup_InterfaceTracking `path:"interface-tracking" module:"openconfig-if-ip"`
	ΛInterfaceTracking     []ygot.Annotation                                              `path:"@interface-tracking" ygotAnnotation:"true"`
	Preempt                *bool                                                          `path:"config/preempt" module:"openconfig-if-ip"`
	ΛPreempt               []ygot.Annotation                                              `path:"config/@preempt" ygotAnnotation:"true"`
	PreemptDelay           *uint16                                                        `path:"config/preempt-delay" module:"openconfig-if-ip"`
	ΛPreemptDelay          []ygot.Annotation                                              `path:"config/@preempt-delay" ygotAnnotation:"true"`
	Priority               *uint8                                                         `path:"config/priority" module:"openconfig-if-ip"`
	ΛPriority              []ygot.Annotation                                              `path:"config/@priority" ygotAnnotation:"true"`
	VirtualAddress         []string                                                       `path:"config/virtual-address" module:"openconfig-if-ip"`
	ΛVirtualAddress        []ygot.Annotation                                              `path:"config/@virtual-address" ygotAnnotation:"true"`
	VirtualLinkLocal       *string                                                        `path:"config/virtual-link-local" module:"openconfig-if-ip"`
	ΛVirtualLinkLocal      []ygot.Annotation                                              `path:"config/@virtual-link-local" ygotAnnotation:"true"`
	VirtualRouterId        *uint8                                                         `path:"config/virtual-router-id|virtual-router-id" module:"openconfig-if-ip"`
	ΛVirtualRouterId       []ygot.Annotation                                              `path:"config/@virtual-router-id|@virtual-router-id" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_RoutedVlan_Ipv6_Address_VrrpGroup implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_RoutedVlan_Ipv6_Address_VrrpGroup) IsYANGGoStruct() {}

// Interface_RoutedVlan_Ipv6_Address_VrrpGroup_InterfaceTracking represents the /openconfig-interfaces/interfaces/interface/routed-vlan/ipv6/addresses/address/vrrp/vrrp-group/interface-tracking YANG schema element.
type Interface_RoutedVlan_Ipv6_Address_VrrpGroup_InterfaceTracking struct {
	ΛMetadata          []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	PriorityDecrement  *uint8            `path:"config/priority-decrement" module:"openconfig-if-ip"`
	ΛPriorityDecrement []ygot.Annotation `path:"config/@priority-decrement" ygotAnnotation:"true"`
	TrackInterface     []string          `path:"config/track-interface" module:"openconfig-if-ip"`
	ΛTrackInterface    []ygot.Annotation `path:"config/@track-interface" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_RoutedVlan_Ipv6_Address_VrrpGroup_InterfaceTracking implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_RoutedVlan_Ipv6_Address_VrrpGroup_InterfaceTracking) IsYANGGoStruct() {}

// Interface_RoutedVlan_Ipv6_Counters represents the /openconfig-interfaces/interfaces/interface/routed-vlan/ipv6/state/counters YANG schema element.
type Interface_RoutedVlan_Ipv6_Counters struct {
	ΛMetadata           []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	InDiscardedPkts     *uint64           `path:"in-discarded-pkts" module:"openconfig-if-ip"`
	ΛInDiscardedPkts    []ygot.Annotation `path:"@in-discarded-pkts" ygotAnnotation:"true"`
	InErrorPkts         *uint64           `path:"in-error-pkts" module:"openconfig-if-ip"`
	ΛInErrorPkts        []ygot.Annotation `path:"@in-error-pkts" ygotAnnotation:"true"`
	InForwardedOctets   *uint64           `path:"in-forwarded-octets" module:"openconfig-if-ip"`
	ΛInForwardedOctets  []ygot.Annotation `path:"@in-forwarded-octets" ygotAnnotation:"true"`
	InForwardedPkts     *uint64           `path:"in-forwarded-pkts" module:"openconfig-if-ip"`
	ΛInForwardedPkts    []ygot.Annotation `path:"@in-forwarded-pkts" ygotAnnotation:"true"`
	InOctets            *uint64           `path:"in-octets" module:"openconfig-if-ip"`
	ΛInOctets           []ygot.Annotation `path:"@in-octets" ygotAnnotation:"true"`
	InPkts              *uint64           `path:"in-pkts" module:"openconfig-if-ip"`
	ΛInPkts             []ygot.Annotation `path:"@in-pkts" ygotAnnotation:"true"`
	OutDiscardedPkts    *uint64           `path:"out-discarded-pkts" module:"openconfig-if-ip"`
	ΛOutDiscardedPkts   []ygot.Annotation `path:"@out-discarded-pkts" ygotAnnotation:"true"`
	OutErrorPkts        *uint64           `path:"out-error-pkts" module:"openconfig-if-ip"`
	ΛOutErrorPkts       []ygot.Annotation `path:"@out-error-pkts" ygotAnnotation:"true"`
	OutForwardedOctets  *uint64           `path:"out-forwarded-octets" module:"openconfig-if-ip"`
	ΛOutForwardedOctets []ygot.Annotation `path:"@out-forwarded-octets" ygotAnnotation:"true"`
	OutForwardedPkts    *uint64           `path:"out-forwarded-pkts" module:"openconfig-if-ip"`
	ΛOutForwardedPkts   []ygot.Annotation `path:"@out-forwarded-pkts" ygotAnnotation:"true"`
	OutOctets           *uint64           `path:"out-octets" module:"openconfig-if-ip"`
	ΛOutOctets          []ygot.Annotation `path:"@out-octets" ygotAnnotation:"true"`
	OutPkts             *uint64           `path:"out-pkts" module:"openconfig-if-ip"`
	ΛOutPkts            []ygot.Annotation `path:"@out-pkts" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_RoutedVlan_Ipv6_Counters implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_RoutedVlan_Ipv6_Counters) IsYANGGoStruct() {}

// Interface_RoutedVlan_Ipv6_Neighbor represents the /openconfig-interfaces/interfaces/interface/routed-vlan/ipv6/neighbors/neighbor YANG schema element.
type Interface_RoutedVlan_Ipv6_Neighbor struct {
	ΛMetadata         []ygot.Annotation                       `path:"@" ygotAnnotation:"true"`
	Ip                *string                                 `path:"config/ip|ip" module:"openconfig-if-ip"`
	ΛIp               []ygot.Annotation                       `path:"config/@ip|@ip" ygotAnnotation:"true"`
	IsRouter          YANGEmpty                               `path:"state/is-router" module:"openconfig-if-ip"`
	ΛIsRouter         []ygot.Annotation                       `path:"state/@is-router" ygotAnnotation:"true"`
	LinkLayerAddress  *string                                 `path:"config/link-layer-address" module:"openconfig-if-ip"`
	ΛLinkLayerAddress []ygot.Annotation                       `path:"config/@link-layer-address" ygotAnnotation:"true"`
	NeighborState     E_OpenconfigIfIp_Neighbor_NeighborState `path:"state/neighbor-state" module:"openconfig-if-ip"`
	ΛNeighborState    []ygot.Annotation                       `path:"state/@neighbor-state" ygotAnnotation:"true"`
	Origin            E_OpenconfigIfIp_NeighborOrigin         `path:"state/origin" module:"openconfig-if-ip"`
	ΛOrigin           []ygot.Annotation                       `path:"state/@origin" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_RoutedVlan_Ipv6_Neighbor implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_RoutedVlan_Ipv6_Neighbor) IsYANGGoStruct() {}

// Interface_RoutedVlan_Ipv6_RouterAdvertisement represents the /openconfig-interfaces/interfaces/interface/routed-vlan/ipv6/router-advertisement YANG schema element.
type Interface_RoutedVlan_Ipv6_RouterAdvertisement struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Interval  *uint32           `path:"config/interval" module:"openconfig-if-ip"`
	ΛInterval []ygot.Annotation `path:"config/@interval" ygotAnnotation:"true"`
	Lifetime  *uint32           `path:"config/lifetime" module:"openconfig-if-ip"`
	ΛLifetime []ygot.Annotation `path:"config/@lifetime" ygotAnnotation:"true"`
	Suppress  *bool             `path:"config/suppress" module:"openconfig-if-ip"`
	ΛSuppress []ygot.Annotation `path:"config/@suppress" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_RoutedVlan_Ipv6_RouterAdvertisement implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_RoutedVlan_Ipv6_RouterAdvertisement) IsYANGGoStruct() {}

// Interface_RoutedVlan_Ipv6_Unnumbered represents the /openconfig-interfaces/interfaces/interface/routed-vlan/ipv6/unnumbered YANG schema element.
type Interface_RoutedVlan_Ipv6_Unnumbered struct {
	ΛMetadata     []ygot.Annotation                                  `path:"@" ygotAnnotation:"true"`
	Enabled       *bool                                              `path:"config/enabled" module:"openconfig-if-ip"`
	ΛEnabled      []ygot.Annotation                                  `path:"config/@enabled" ygotAnnotation:"true"`
	InterfaceRef  *Interface_RoutedVlan_Ipv6_Unnumbered_InterfaceRef `path:"interface-ref" module:"openconfig-if-ip"`
	ΛInterfaceRef []ygot.Annotation                                  `path:"@interface-ref" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_RoutedVlan_Ipv6_Unnumbered implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_RoutedVlan_Ipv6_Unnumbered) IsYANGGoStruct() {}

// Interface_RoutedVlan_Ipv6_Unnumbered_InterfaceRef represents the /openconfig-interfaces/interfaces/interface/routed-vlan/ipv6/unnumbered/interface-ref YANG schema element.
type Interface_RoutedVlan_Ipv6_Unnumbered_InterfaceRef struct {
	ΛMetadata     []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Interface     *string           `path:"config/interface" module:"openconfig-if-ip"`
	ΛInterface    []ygot.Annotation `path:"config/@interface" ygotAnnotation:"true"`
	Subinterface  *uint32           `path:"config/subinterface" module:"openconfig-if-ip"`
	ΛSubinterface []ygot.Annotation `path:"config/@subinterface" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_RoutedVlan_Ipv6_Unnumbered_InterfaceRef implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_RoutedVlan_Ipv6_Unnumbered_InterfaceRef) IsYANGGoStruct() {}

// Interface_Sonet represents the /openconfig-interfaces/interfaces/interface/sonet YANG schema element.
type Interface_Sonet struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Sonet implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Sonet) IsYANGGoStruct() {}

// Interface_Subinterface represents the /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface YANG schema element.
type Interface_Subinterface struct {
	ΛMetadata    []ygot.Annotation                            `path:"@" ygotAnnotation:"true"`
	AdminStatus  E_OpenconfigInterfaces_Interface_AdminStatus `path:"state/admin-status" module:"openconfig-interfaces"`
	ΛAdminStatus []ygot.Annotation                            `path:"state/@admin-status" ygotAnnotation:"true"`
	Counters     *Interface_Subinterface_Counters             `path:"state/counters" module:"openconfig-interfaces"`
	ΛCounters    []ygot.Annotation                            `path:"state/@counters" ygotAnnotation:"true"`
	Description  *string                                      `path:"config/description" module:"openconfig-interfaces"`
	ΛDescription []ygot.Annotation                            `path:"config/@description" ygotAnnotation:"true"`
	Enabled      *bool                                        `path:"config/enabled" module:"openconfig-interfaces"`
	ΛEnabled     []ygot.Annotation                            `path:"config/@enabled" ygotAnnotation:"true"`
	Ifindex      *uint32                                      `path:"state/ifindex" module:"openconfig-interfaces"`
	ΛIfindex     []ygot.Annotation                            `path:"state/@ifindex" ygotAnnotation:"true"`
	Index        *uint32                                      `path:"config/index|index" module:"openconfig-interfaces"`
	ΛIndex       []ygot.Annotation                            `path:"config/@index|@index" ygotAnnotation:"true"`
	Ipv4         *Interface_Subinterface_Ipv4                 `path:"ipv4" module:"openconfig-if-ip"`
	ΛIpv4        []ygot.Annotation                            `path:"@ipv4" ygotAnnotation:"true"`
	Ipv6         *Interface_Subinterface_Ipv6                 `path:"ipv6" module:"openconfig-if-ip"`
	ΛIpv6        []ygot.Annotation                            `path:"@ipv6" ygotAnnotation:"true"`
	LastChange   *uint64                                      `path:"state/last-change" module:"openconfig-interfaces"`
	ΛLastChange  []ygot.Annotation                            `path:"state/@last-change" ygotAnnotation:"true"`
	Name         *string                                      `path:"state/name" module:"openconfig-interfaces"`
	ΛName        []ygot.Annotation                            `path:"state/@name" ygotAnnotation:"true"`
	OperStatus   E_OpenconfigInterfaces_Interface_OperStatus  `path:"state/oper-status" module:"openconfig-interfaces"`
	ΛOperStatus  []ygot.Annotation                            `path:"state/@oper-status" ygotAnnotation:"true"`
	Vlan         *Interface_Subinterface_Vlan                 `path:"vlan" module:"openconfig-vlan"`
	ΛVlan        []ygot.Annotation                            `path:"@vlan" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Subinterface implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Subinterface) IsYANGGoStruct() {}

// Interface_Subinterface_Counters represents the /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/state/counters YANG schema element.
type Interface_Subinterface_Counters struct {
	ΛMetadata           []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	CarrierTransitions  *uint64           `path:"carrier-transitions" module:"openconfig-interfaces"`
	ΛCarrierTransitions []ygot.Annotation `path:"@carrier-transitions" ygotAnnotation:"true"`
	InBroadcastPkts     *uint64           `path:"in-broadcast-pkts" module:"openconfig-interfaces"`
	ΛInBroadcastPkts    []ygot.Annotation `path:"@in-broadcast-pkts" ygotAnnotation:"true"`
	InDiscards          *uint64           `path:"in-discards" module:"openconfig-interfaces"`
	ΛInDiscards         []ygot.Annotation `path:"@in-discards" ygotAnnotation:"true"`
	InErrors            *uint64           `path:"in-errors" module:"openconfig-interfaces"`
	ΛInErrors           []ygot.Annotation `path:"@in-errors" ygotAnnotation:"true"`
	InFcsErrors         *uint64           `path:"in-fcs-errors" module:"openconfig-interfaces"`
	ΛInFcsErrors        []ygot.Annotation `path:"@in-fcs-errors" ygotAnnotation:"true"`
	InMulticastPkts     *uint64           `path:"in-multicast-pkts" module:"openconfig-interfaces"`
	ΛInMulticastPkts    []ygot.Annotation `path:"@in-multicast-pkts" ygotAnnotation:"true"`
	InOctets            *uint64           `path:"in-octets" module:"openconfig-interfaces"`
	ΛInOctets           []ygot.Annotation `path:"@in-octets" ygotAnnotation:"true"`
	InUnicastPkts       *uint64           `path:"in-unicast-pkts" module:"openconfig-interfaces"`
	ΛInUnicastPkts      []ygot.Annotation `path:"@in-unicast-pkts" ygotAnnotation:"true"`
	InUnknownProtos     *uint64           `path:"in-unknown-protos" module:"openconfig-interfaces"`
	ΛInUnknownProtos    []ygot.Annotation `path:"@in-unknown-protos" ygotAnnotation:"true"`
	LastClear           *uint64           `path:"last-clear" module:"openconfig-interfaces"`
	ΛLastClear          []ygot.Annotation `path:"@last-clear" ygotAnnotation:"true"`
	OutBroadcastPkts    *uint64           `path:"out-broadcast-pkts" module:"openconfig-interfaces"`
	ΛOutBroadcastPkts   []ygot.Annotation `path:"@out-broadcast-pkts" ygotAnnotation:"true"`
	OutDiscards         *uint64           `path:"out-discards" module:"openconfig-interfaces"`
	ΛOutDiscards        []ygot.Annotation `path:"@out-discards" ygotAnnotation:"true"`
	OutErrors           *uint64           `path:"out-errors" module:"openconfig-interfaces"`
	ΛOutErrors          []ygot.Annotation `path:"@out-errors" ygotAnnotation:"true"`
	OutMulticastPkts    *uint64           `path:"out-multicast-pkts" module:"openconfig-interfaces"`
	ΛOutMulticastPkts   []ygot.Annotation `path:"@out-multicast-pkts" ygotAnnotation:"true"`
	OutOctets           *uint64           `path:"out-octets" module:"openconfig-interfaces"`
	ΛOutOctets          []ygot.Annotation `path:"@out-octets" ygotAnnotation:"true"`
	OutUnicastPkts      *uint64           `path:"out-unicast-pkts" module:"openconfig-interfaces"`
	ΛOutUnicastPkts     []ygot.Annotation `path:"@out-unicast-pkts" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Subinterface_Counters implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Subinterface_Counters) IsYANGGoStruct() {}

// Interface_Subinterface_Ipv4 represents the /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/ipv4 YANG schema element.
type Interface_Subinterface_Ipv4 struct {
	ΛMetadata   []ygot.Annotation                                `path:"@" ygotAnnotation:"true"`
	Address     map[string]*Interface_Subinterface_Ipv4_Address  `path:"addresses/address" module:"openconfig-if-ip"`
	ΛAddress    []ygot.Annotation                                `path:"addresses/@address" ygotAnnotation:"true"`
	Counters    *Interface_Subinterface_Ipv4_Counters            `path:"state/counters" module:"openconfig-if-ip"`
	ΛCounters   []ygot.Annotation                                `path:"state/@counters" ygotAnnotation:"true"`
	DhcpClient  *bool                                            `path:"config/dhcp-client" module:"openconfig-if-ip"`
	ΛDhcpClient []ygot.Annotation                                `path:"config/@dhcp-client" ygotAnnotation:"true"`
	Enabled     *bool                                            `path:"config/enabled" module:"openconfig-if-ip"`
	ΛEnabled    []ygot.Annotation                                `path:"config/@enabled" ygotAnnotation:"true"`
	Mtu         *uint16                                          `path:"config/mtu" module:"openconfig-if-ip"`
	ΛMtu        []ygot.Annotation                                `path:"config/@mtu" ygotAnnotation:"true"`
	Neighbor    map[string]*Interface_Subinterface_Ipv4_Neighbor `path:"neighbors/neighbor" module:"openconfig-if-ip"`
	ΛNeighbor   []ygot.Annotation                                `path:"neighbors/@neighbor" ygotAnnotation:"true"`
	ProxyArp    *Interface_Subinterface_Ipv4_ProxyArp            `path:"proxy-arp" module:"openconfig-if-ip"`
	ΛProxyArp   []ygot.Annotation                                `path:"@proxy-arp" ygotAnnotation:"true"`
	Unnumbered  *Interface_Subinterface_Ipv4_Unnumbered          `path:"unnumbered" module:"openconfig-if-ip"`
	ΛUnnumbered []ygot.Annotation                                `path:"@unnumbered" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Subinterface_Ipv4 implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Subinterface_Ipv4) IsYANGGoStruct() {}

// Interface_Subinterface_Ipv4_Address represents the /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/ipv4/addresses/address YANG schema element.
type Interface_Subinterface_Ipv4_Address struct {
	ΛMetadata     []ygot.Annotation                                        `path:"@" ygotAnnotation:"true"`
	Ip            *string                                                  `path:"config/ip|ip" module:"openconfig-if-ip"`
	ΛIp           []ygot.Annotation                                        `path:"config/@ip|@ip" ygotAnnotation:"true"`
	Origin        E_OpenconfigIfIp_IpAddressOrigin                         `path:"state/origin" module:"openconfig-if-ip"`
	ΛOrigin       []ygot.Annotation                                        `path:"state/@origin" ygotAnnotation:"true"`
	PrefixLength  *uint8                                                   `path:"config/prefix-length" module:"openconfig-if-ip"`
	ΛPrefixLength []ygot.Annotation                                        `path:"config/@prefix-length" ygotAnnotation:"true"`
	VrrpGroup     map[uint8]*Interface_Subinterface_Ipv4_Address_VrrpGroup `path:"vrrp/vrrp-group" module:"openconfig-if-ip"`
	ΛVrrpGroup    []ygot.Annotation                                        `path:"vrrp/@vrrp-group" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Subinterface_Ipv4_Address implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Subinterface_Ipv4_Address) IsYANGGoStruct() {}

// Interface_Subinterface_Ipv4_Address_VrrpGroup represents the /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/ipv4/addresses/address/vrrp/vrrp-group YANG schema element.
type Interface_Subinterface_Ipv4_Address_VrrpGroup struct {
	ΛMetadata              []ygot.Annotation                                                `path:"@" ygotAnnotation:"true"`
	AcceptMode             *bool                                                            `path:"config/accept-mode" module:"openconfig-if-ip"`
	ΛAcceptMode            []ygot.Annotation                                                `path:"config/@accept-mode" ygotAnnotation:"true"`
	AdvertisementInterval  *uint16                                                          `path:"config/advertisement-interval" module:"openconfig-if-ip"`
	ΛAdvertisementInterval []ygot.Annotation                                                `path:"config/@advertisement-interval" ygotAnnotation:"true"`
	CurrentPriority        *uint8                                                           `path:"state/current-priority" module:"openconfig-if-ip"`
	ΛCurrentPriority       []ygot.Annotation                                                `path:"state/@current-priority" ygotAnnotation:"true"`
	InterfaceTracking      *Interface_Subinterface_Ipv4_Address_VrrpGroup_InterfaceTracking `path:"interface-tracking" module:"openconfig-if-ip"`
	ΛInterfaceTracking     []ygot.Annotation                                                `path:"@interface-tracking" ygotAnnotation:"true"`
	Preempt                *bool                                                            `path:"config/preempt" module:"openconfig-if-ip"`
	ΛPreempt               []ygot.Annotation                                                `path:"config/@preempt" ygotAnnotation:"true"`
	PreemptDelay           *uint16                                                          `path:"config/preempt-delay" module:"openconfig-if-ip"`
	ΛPreemptDelay          []ygot.Annotation                                                `path:"config/@preempt-delay" ygotAnnotation:"true"`
	Priority               *uint8                                                           `path:"config/priority" module:"openconfig-if-ip"`
	ΛPriority              []ygot.Annotation                                                `path:"config/@priority" ygotAnnotation:"true"`
	VirtualAddress         []string                                                         `path:"config/virtual-address" module:"openconfig-if-ip"`
	ΛVirtualAddress        []ygot.Annotation                                                `path:"config/@virtual-address" ygotAnnotation:"true"`
	VirtualRouterId        *uint8                                                           `path:"config/virtual-router-id|virtual-router-id" module:"openconfig-if-ip"`
	ΛVirtualRouterId       []ygot.Annotation                                                `path:"config/@virtual-router-id|@virtual-router-id" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Subinterface_Ipv4_Address_VrrpGroup implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Subinterface_Ipv4_Address_VrrpGroup) IsYANGGoStruct() {}

// Interface_Subinterface_Ipv4_Address_VrrpGroup_InterfaceTracking represents the /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/ipv4/addresses/address/vrrp/vrrp-group/interface-tracking YANG schema element.
type Interface_Subinterface_Ipv4_Address_VrrpGroup_InterfaceTracking struct {
	ΛMetadata          []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	PriorityDecrement  *uint8            `path:"config/priority-decrement" module:"openconfig-if-ip"`
	ΛPriorityDecrement []ygot.Annotation `path:"config/@priority-decrement" ygotAnnotation:"true"`
	TrackInterface     []string          `path:"config/track-interface" module:"openconfig-if-ip"`
	ΛTrackInterface    []ygot.Annotation `path:"config/@track-interface" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Subinterface_Ipv4_Address_VrrpGroup_InterfaceTracking implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Subinterface_Ipv4_Address_VrrpGroup_InterfaceTracking) IsYANGGoStruct() {}

// Interface_Subinterface_Ipv4_Counters represents the /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/ipv4/state/counters YANG schema element.
type Interface_Subinterface_Ipv4_Counters struct {
	ΛMetadata           []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	InDiscardedPkts     *uint64           `path:"in-discarded-pkts" module:"openconfig-if-ip"`
	ΛInDiscardedPkts    []ygot.Annotation `path:"@in-discarded-pkts" ygotAnnotation:"true"`
	InErrorPkts         *uint64           `path:"in-error-pkts" module:"openconfig-if-ip"`
	ΛInErrorPkts        []ygot.Annotation `path:"@in-error-pkts" ygotAnnotation:"true"`
	InForwardedOctets   *uint64           `path:"in-forwarded-octets" module:"openconfig-if-ip"`
	ΛInForwardedOctets  []ygot.Annotation `path:"@in-forwarded-octets" ygotAnnotation:"true"`
	InForwardedPkts     *uint64           `path:"in-forwarded-pkts" module:"openconfig-if-ip"`
	ΛInForwardedPkts    []ygot.Annotation `path:"@in-forwarded-pkts" ygotAnnotation:"true"`
	InOctets            *uint64           `path:"in-octets" module:"openconfig-if-ip"`
	ΛInOctets           []ygot.Annotation `path:"@in-octets" ygotAnnotation:"true"`
	InPkts              *uint64           `path:"in-pkts" module:"openconfig-if-ip"`
	ΛInPkts             []ygot.Annotation `path:"@in-pkts" ygotAnnotation:"true"`
	OutDiscardedPkts    *uint64           `path:"out-discarded-pkts" module:"openconfig-if-ip"`
	ΛOutDiscardedPkts   []ygot.Annotation `path:"@out-discarded-pkts" ygotAnnotation:"true"`
	OutErrorPkts        *uint64           `path:"out-error-pkts" module:"openconfig-if-ip"`
	ΛOutErrorPkts       []ygot.Annotation `path:"@out-error-pkts" ygotAnnotation:"true"`
	OutForwardedOctets  *uint64           `path:"out-forwarded-octets" module:"openconfig-if-ip"`
	ΛOutForwardedOctets []ygot.Annotation `path:"@out-forwarded-octets" ygotAnnotation:"true"`
	OutForwardedPkts    *uint64           `path:"out-forwarded-pkts" module:"openconfig-if-ip"`
	ΛOutForwardedPkts   []ygot.Annotation `path:"@out-forwarded-pkts" ygotAnnotation:"true"`
	OutOctets           *uint64           `path:"out-octets" module:"openconfig-if-ip"`
	ΛOutOctets          []ygot.Annotation `path:"@out-octets" ygotAnnotation:"true"`
	OutPkts             *uint64           `path:"out-pkts" module:"openconfig-if-ip"`
	ΛOutPkts            []ygot.Annotation `path:"@out-pkts" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Subinterface_Ipv4_Counters implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Subinterface_Ipv4_Counters) IsYANGGoStruct() {}

// Interface_Subinterface_Ipv4_Neighbor represents the /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/ipv4/neighbors/neighbor YANG schema element.
type Interface_Subinterface_Ipv4_Neighbor struct {
	ΛMetadata         []ygot.Annotation               `path:"@" ygotAnnotation:"true"`
	Ip                *string                         `path:"config/ip|ip" module:"openconfig-if-ip"`
	ΛIp               []ygot.Annotation               `path:"config/@ip|@ip" ygotAnnotation:"true"`
	LinkLayerAddress  *string                         `path:"config/link-layer-address" module:"openconfig-if-ip"`
	ΛLinkLayerAddress []ygot.Annotation               `path:"config/@link-layer-address" ygotAnnotation:"true"`
	Origin            E_OpenconfigIfIp_NeighborOrigin `path:"state/origin" module:"openconfig-if-ip"`
	ΛOrigin           []ygot.Annotation               `path:"state/@origin" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Subinterface_Ipv4_Neighbor implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Subinterface_Ipv4_Neighbor) IsYANGGoStruct() {}

// Interface_Subinterface_Ipv4_ProxyArp represents the /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/ipv4/proxy-arp YANG schema element.
type Interface_Subinterface_Ipv4_ProxyArp struct {
	ΛMetadata []ygot.Annotation              `path:"@" ygotAnnotation:"true"`
	Mode      E_OpenconfigIfIp_ProxyArp_Mode `path:"config/mode" module:"openconfig-if-ip"`
	ΛMode     []ygot.Annotation              `path:"config/@mode" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Subinterface_Ipv4_ProxyArp implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Subinterface_Ipv4_ProxyArp) IsYANGGoStruct() {}

// Interface_Subinterface_Ipv4_Unnumbered represents the /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/ipv4/unnumbered YANG schema element.
type Interface_Subinterface_Ipv4_Unnumbered struct {
	ΛMetadata     []ygot.Annotation                                    `path:"@" ygotAnnotation:"true"`
	Enabled       *bool                                                `path:"config/enabled" module:"openconfig-if-ip"`
	ΛEnabled      []ygot.Annotation                                    `path:"config/@enabled" ygotAnnotation:"true"`
	InterfaceRef  *Interface_Subinterface_Ipv4_Unnumbered_InterfaceRef `path:"interface-ref" module:"openconfig-if-ip"`
	ΛInterfaceRef []ygot.Annotation                                    `path:"@interface-ref" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Subinterface_Ipv4_Unnumbered implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Subinterface_Ipv4_Unnumbered) IsYANGGoStruct() {}

// Interface_Subinterface_Ipv4_Unnumbered_InterfaceRef represents the /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/ipv4/unnumbered/interface-ref YANG schema element.
type Interface_Subinterface_Ipv4_Unnumbered_InterfaceRef struct {
	ΛMetadata     []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Interface     *string           `path:"config/interface" module:"openconfig-if-ip"`
	ΛInterface    []ygot.Annotation `path:"config/@interface" ygotAnnotation:"true"`
	Subinterface  *uint32           `path:"config/subinterface" module:"openconfig-if-ip"`
	ΛSubinterface []ygot.Annotation `path:"config/@subinterface" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Subinterface_Ipv4_Unnumbered_InterfaceRef implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Subinterface_Ipv4_Unnumbered_InterfaceRef) IsYANGGoStruct() {}

// Interface_Subinterface_Ipv6 represents the /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/ipv6 YANG schema element.
type Interface_Subinterface_Ipv6 struct {
	ΛMetadata               []ygot.Annotation                                `path:"@" ygotAnnotation:"true"`
	Address                 map[string]*Interface_Subinterface_Ipv6_Address  `path:"addresses/address" module:"openconfig-if-ip"`
	ΛAddress                []ygot.Annotation                                `path:"addresses/@address" ygotAnnotation:"true"`
	Autoconf                *Interface_Subinterface_Ipv6_Autoconf            `path:"autoconf" module:"openconfig-if-ip-ext"`
	ΛAutoconf               []ygot.Annotation                                `path:"@autoconf" ygotAnnotation:"true"`
	Counters                *Interface_Subinterface_Ipv6_Counters            `path:"state/counters" module:"openconfig-if-ip"`
	ΛCounters               []ygot.Annotation                                `path:"state/@counters" ygotAnnotation:"true"`
	DhcpClient              *bool                                            `path:"config/dhcp-client" module:"openconfig-if-ip"`
	ΛDhcpClient             []ygot.Annotation                                `path:"config/@dhcp-client" ygotAnnotation:"true"`
	DupAddrDetectTransmits  *uint32                                          `path:"config/dup-addr-detect-transmits" module:"openconfig-if-ip"`
	ΛDupAddrDetectTransmits []ygot.Annotation                                `path:"config/@dup-addr-detect-transmits" ygotAnnotation:"true"`
	Enabled                 *bool                                            `path:"config/enabled" module:"openconfig-if-ip"`
	ΛEnabled                []ygot.Annotation                                `path:"config/@enabled" ygotAnnotation:"true"`
	Mtu                     *uint32                                          `path:"config/mtu" module:"openconfig-if-ip"`
	ΛMtu                    []ygot.Annotation                                `path:"config/@mtu" ygotAnnotation:"true"`
	Neighbor                map[string]*Interface_Subinterface_Ipv6_Neighbor `path:"neighbors/neighbor" module:"openconfig-if-ip"`
	ΛNeighbor               []ygot.Annotation                                `path:"neighbors/@neighbor" ygotAnnotation:"true"`
	RouterAdvertisement     *Interface_Subinterface_Ipv6_RouterAdvertisement `path:"router-advertisement" module:"openconfig-if-ip"`
	ΛRouterAdvertisement    []ygot.Annotation                                `path:"@router-advertisement" ygotAnnotation:"true"`
	Unnumbered              *Interface_Subinterface_Ipv6_Unnumbered          `path:"unnumbered" module:"openconfig-if-ip"`
	ΛUnnumbered             []ygot.Annotation                                `path:"@unnumbered" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Subinterface_Ipv6 implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Subinterface_Ipv6) IsYANGGoStruct() {}

// Interface_Subinterface_Ipv6_Address represents the /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/ipv6/addresses/address YANG schema element.
type Interface_Subinterface_Ipv6_Address struct {
	ΛMetadata     []ygot.Annotation                                        `path:"@" ygotAnnotation:"true"`
	Ip            *string                                                  `path:"config/ip|ip" module:"openconfig-if-ip"`
	ΛIp           []ygot.Annotation                                        `path:"config/@ip|@ip" ygotAnnotation:"true"`
	Origin        E_OpenconfigIfIp_IpAddressOrigin                         `path:"state/origin" module:"openconfig-if-ip"`
	ΛOrigin       []ygot.Annotation                                        `path:"state/@origin" ygotAnnotation:"true"`
	PrefixLength  *uint8                                                   `path:"config/prefix-length" module:"openconfig-if-ip"`
	ΛPrefixLength []ygot.Annotation                                        `path:"config/@prefix-length" ygotAnnotation:"true"`
	Status        E_OpenconfigIfIp_Address_Status                          `path:"state/status" module:"openconfig-if-ip"`
	ΛStatus       []ygot.Annotation                                        `path:"state/@status" ygotAnnotation:"true"`
	VrrpGroup     map[uint8]*Interface_Subinterface_Ipv6_Address_VrrpGroup `path:"vrrp/vrrp-group" module:"openconfig-if-ip"`
	ΛVrrpGroup    []ygot.Annotation                                        `path:"vrrp/@vrrp-group" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Subinterface_Ipv6_Address implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Subinterface_Ipv6_Address) IsYANGGoStruct() {}

// Interface_Subinterface_Ipv6_Address_VrrpGroup represents the /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/ipv6/addresses/address/vrrp/vrrp-group YANG schema element.
type Interface_Subinterface_Ipv6_Address_VrrpGroup struct {
	ΛMetadata              []ygot.Annotation                                                `path:"@" ygotAnnotation:"true"`
	AcceptMode             *bool                                                            `path:"config/accept-mode" module:"openconfig-if-ip"`
	ΛAcceptMode            []ygot.Annotation                                                `path:"config/@accept-mode" ygotAnnotation:"true"`
	AdvertisementInterval  *uint16                                                          `path:"config/advertisement-interval" module:"openconfig-if-ip"`
	ΛAdvertisementInterval []ygot.Annotation                                                `path:"config/@advertisement-interval" ygotAnnotation:"true"`
	CurrentPriority        *uint8                                                           `path:"state/current-priority" module:"openconfig-if-ip"`
	ΛCurrentPriority       []ygot.Annotation                                                `path:"state/@current-priority" ygotAnnotation:"true"`
	InterfaceTracking      *Interface_Subinterface_Ipv6_Address_VrrpGroup_InterfaceTracking `path:"interface-tracking" module:"openconfig-if-ip"`
	ΛInterfaceTracking     []ygot.Annotation                                                `path:"@interface-tracking" ygotAnnotation:"true"`
	Preempt                *bool                                                            `path:"config/preempt" module:"openconfig-if-ip"`
	ΛPreempt               []ygot.Annotation                                                `path:"config/@preempt" ygotAnnotation:"true"`
	PreemptDelay           *uint16                                                          `path:"config/preempt-delay" module:"openconfig-if-ip"`
	ΛPreemptDelay          []ygot.Annotation                                                `path:"config/@preempt-delay" ygotAnnotation:"true"`
	Priority               *uint8                                                           `path:"config/priority" module:"openconfig-if-ip"`
	ΛPriority              []ygot.Annotation                                                `path:"config/@priority" ygotAnnotation:"true"`
	VirtualAddress         []string                                                         `path:"config/virtual-address" module:"openconfig-if-ip"`
	ΛVirtualAddress        []ygot.Annotation                                                `path:"config/@virtual-address" ygotAnnotation:"true"`
	VirtualLinkLocal       *string                                                          `path:"config/virtual-link-local" module:"openconfig-if-ip"`
	ΛVirtualLinkLocal      []ygot.Annotation                                                `path:"config/@virtual-link-local" ygotAnnotation:"true"`
	VirtualRouterId        *uint8                                                           `path:"config/virtual-router-id|virtual-router-id" module:"openconfig-if-ip"`
	ΛVirtualRouterId       []ygot.Annotation                                                `path:"config/@virtual-router-id|@virtual-router-id" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Subinterface_Ipv6_Address_VrrpGroup implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Subinterface_Ipv6_Address_VrrpGroup) IsYANGGoStruct() {}

// Interface_Subinterface_Ipv6_Address_VrrpGroup_InterfaceTracking represents the /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/ipv6/addresses/address/vrrp/vrrp-group/interface-tracking YANG schema element.
type Interface_Subinterface_Ipv6_Address_VrrpGroup_InterfaceTracking struct {
	ΛMetadata          []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	PriorityDecrement  *uint8            `path:"config/priority-decrement" module:"openconfig-if-ip"`
	ΛPriorityDecrement []ygot.Annotation `path:"config/@priority-decrement" ygotAnnotation:"true"`
	TrackInterface     []string          `path:"config/track-interface" module:"openconfig-if-ip"`
	ΛTrackInterface    []ygot.Annotation `path:"config/@track-interface" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Subinterface_Ipv6_Address_VrrpGroup_InterfaceTracking implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Subinterface_Ipv6_Address_VrrpGroup_InterfaceTracking) IsYANGGoStruct() {}

// Interface_Subinterface_Ipv6_Autoconf represents the /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/ipv6/autoconf YANG schema element.
type Interface_Subinterface_Ipv6_Autoconf struct {
	ΛMetadata                   []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	CreateGlobalAddresses       *bool             `path:"config/create-global-addresses" module:"openconfig-if-ip-ext"`
	ΛCreateGlobalAddresses      []ygot.Annotation `path:"config/@create-global-addresses" ygotAnnotation:"true"`
	CreateTemporaryAddresses    *bool             `path:"config/create-temporary-addresses" module:"openconfig-if-ip-ext"`
	ΛCreateTemporaryAddresses   []ygot.Annotation `path:"config/@create-temporary-addresses" ygotAnnotation:"true"`
	TemporaryPreferredLifetime  *uint32           `path:"config/temporary-preferred-lifetime" module:"openconfig-if-ip-ext"`
	ΛTemporaryPreferredLifetime []ygot.Annotation `path:"config/@temporary-preferred-lifetime" ygotAnnotation:"true"`
	TemporaryValidLifetime      *uint32           `path:"config/temporary-valid-lifetime" module:"openconfig-if-ip-ext"`
	ΛTemporaryValidLifetime     []ygot.Annotation `path:"config/@temporary-valid-lifetime" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Subinterface_Ipv6_Autoconf implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Subinterface_Ipv6_Autoconf) IsYANGGoStruct() {}

// Interface_Subinterface_Ipv6_Counters represents the /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/ipv6/state/counters YANG schema element.
type Interface_Subinterface_Ipv6_Counters struct {
	ΛMetadata           []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	InDiscardedPkts     *uint64           `path:"in-discarded-pkts" module:"openconfig-if-ip"`
	ΛInDiscardedPkts    []ygot.Annotation `path:"@in-discarded-pkts" ygotAnnotation:"true"`
	InErrorPkts         *uint64           `path:"in-error-pkts" module:"openconfig-if-ip"`
	ΛInErrorPkts        []ygot.Annotation `path:"@in-error-pkts" ygotAnnotation:"true"`
	InForwardedOctets   *uint64           `path:"in-forwarded-octets" module:"openconfig-if-ip"`
	ΛInForwardedOctets  []ygot.Annotation `path:"@in-forwarded-octets" ygotAnnotation:"true"`
	InForwardedPkts     *uint64           `path:"in-forwarded-pkts" module:"openconfig-if-ip"`
	ΛInForwardedPkts    []ygot.Annotation `path:"@in-forwarded-pkts" ygotAnnotation:"true"`
	InOctets            *uint64           `path:"in-octets" module:"openconfig-if-ip"`
	ΛInOctets           []ygot.Annotation `path:"@in-octets" ygotAnnotation:"true"`
	InPkts              *uint64           `path:"in-pkts" module:"openconfig-if-ip"`
	ΛInPkts             []ygot.Annotation `path:"@in-pkts" ygotAnnotation:"true"`
	OutDiscardedPkts    *uint64           `path:"out-discarded-pkts" module:"openconfig-if-ip"`
	ΛOutDiscardedPkts   []ygot.Annotation `path:"@out-discarded-pkts" ygotAnnotation:"true"`
	OutErrorPkts        *uint64           `path:"out-error-pkts" module:"openconfig-if-ip"`
	ΛOutErrorPkts       []ygot.Annotation `path:"@out-error-pkts" ygotAnnotation:"true"`
	OutForwardedOctets  *uint64           `path:"out-forwarded-octets" module:"openconfig-if-ip"`
	ΛOutForwardedOctets []ygot.Annotation `path:"@out-forwarded-octets" ygotAnnotation:"true"`
	OutForwardedPkts    *uint64           `path:"out-forwarded-pkts" module:"openconfig-if-ip"`
	ΛOutForwardedPkts   []ygot.Annotation `path:"@out-forwarded-pkts" ygotAnnotation:"true"`
	OutOctets           *uint64           `path:"out-octets" module:"openconfig-if-ip"`
	ΛOutOctets          []ygot.Annotation `path:"@out-octets" ygotAnnotation:"true"`
	OutPkts             *uint64           `path:"out-pkts" module:"openconfig-if-ip"`
	ΛOutPkts            []ygot.Annotation `path:"@out-pkts" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Subinterface_Ipv6_Counters implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Subinterface_Ipv6_Counters) IsYANGGoStruct() {}

// Interface_Subinterface_Ipv6_Neighbor represents the /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/ipv6/neighbors/neighbor YANG schema element.
type Interface_Subinterface_Ipv6_Neighbor struct {
	ΛMetadata         []ygot.Annotation                       `path:"@" ygotAnnotation:"true"`
	Ip                *string                                 `path:"config/ip|ip" module:"openconfig-if-ip"`
	ΛIp               []ygot.Annotation                       `path:"config/@ip|@ip" ygotAnnotation:"true"`
	IsRouter          YANGEmpty                               `path:"state/is-router" module:"openconfig-if-ip"`
	ΛIsRouter         []ygot.Annotation                       `path:"state/@is-router" ygotAnnotation:"true"`
	LinkLayerAddress  *string                                 `path:"config/link-layer-address" module:"openconfig-if-ip"`
	ΛLinkLayerAddress []ygot.Annotation                       `path:"config/@link-layer-address" ygotAnnotation:"true"`
	NeighborState     E_OpenconfigIfIp_Neighbor_NeighborState `path:"state/neighbor-state" module:"openconfig-if-ip"`
	ΛNeighborState    []ygot.Annotation                       `path:"state/@neighbor-state" ygotAnnotation:"true"`
	Origin            E_OpenconfigIfIp_NeighborOrigin         `path:"state/origin" module:"openconfig-if-ip"`
	ΛOrigin           []ygot.Annotation                       `path:"state/@origin" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Subinterface_Ipv6_Neighbor implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Subinterface_Ipv6_Neighbor) IsYANGGoStruct() {}

// Interface_Subinterface_Ipv6_RouterAdvertisement represents the /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/ipv6/router-advertisement YANG schema element.
type Interface_Subinterface_Ipv6_RouterAdvertisement struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Interval  *uint32           `path:"config/interval" module:"openconfig-if-ip"`
	ΛInterval []ygot.Annotation `path:"config/@interval" ygotAnnotation:"true"`
	Lifetime  *uint32           `path:"config/lifetime" module:"openconfig-if-ip"`
	ΛLifetime []ygot.Annotation `path:"config/@lifetime" ygotAnnotation:"true"`
	Suppress  *bool             `path:"config/suppress" module:"openconfig-if-ip"`
	ΛSuppress []ygot.Annotation `path:"config/@suppress" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Subinterface_Ipv6_RouterAdvertisement implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Subinterface_Ipv6_RouterAdvertisement) IsYANGGoStruct() {}

// Interface_Subinterface_Ipv6_Unnumbered represents the /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/ipv6/unnumbered YANG schema element.
type Interface_Subinterface_Ipv6_Unnumbered struct {
	ΛMetadata     []ygot.Annotation                                    `path:"@" ygotAnnotation:"true"`
	Enabled       *bool                                                `path:"config/enabled" module:"openconfig-if-ip"`
	ΛEnabled      []ygot.Annotation                                    `path:"config/@enabled" ygotAnnotation:"true"`
	InterfaceRef  *Interface_Subinterface_Ipv6_Unnumbered_InterfaceRef `path:"interface-ref" module:"openconfig-if-ip"`
	ΛInterfaceRef []ygot.Annotation                                    `path:"@interface-ref" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Subinterface_Ipv6_Unnumbered implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Subinterface_Ipv6_Unnumbered) IsYANGGoStruct() {}

// Interface_Subinterface_Ipv6_Unnumbered_InterfaceRef represents the /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/ipv6/unnumbered/interface-ref YANG schema element.
type Interface_Subinterface_Ipv6_Unnumbered_InterfaceRef struct {
	ΛMetadata     []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Interface     *string           `path:"config/interface" module:"openconfig-if-ip"`
	ΛInterface    []ygot.Annotation `path:"config/@interface" ygotAnnotation:"true"`
	Subinterface  *uint32           `path:"config/subinterface" module:"openconfig-if-ip"`
	ΛSubinterface []ygot.Annotation `path:"config/@subinterface" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Subinterface_Ipv6_Unnumbered_InterfaceRef implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Subinterface_Ipv6_Unnumbered_InterfaceRef) IsYANGGoStruct() {}

// Interface_Subinterface_Vlan represents the /openconfig-interfaces/interfaces/interface/subinterfaces/subinterface/vlan YANG schema element.
type Interface_Subinterface_Vlan struct {
	ΛMetadata []ygot.Annotation                        `path:"@" ygotAnnotation:"true"`
	VlanId    Interface_Subinterface_Vlan_VlanId_Union `path:"config/vlan-id" module:"openconfig-vlan"`
	ΛVlanId   []ygot.Annotation                        `path:"config/@vlan-id" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Interface_Subinterface_Vlan implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Interface_Subinterface_Vlan) IsYANGGoStruct() {}
