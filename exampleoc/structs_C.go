/*
Package exampleoc is a generated package which contains definitions
of structs which represent a YANG schema. The generated schema can be
compressed by a series of transformations (compression was true
in this case).

NOTE WELL: This is an example code file that is distributed with ygot.
It should not be used within your application, as it WILL change,
without warning. Rather, you should generate structs directly from
OpenConfig models using the ygot package.

This package was generated by github.com/openconfig/ygot
using the following YANG input files:
	- public/release/models/network-instance/openconfig-network-instance.yang
	- public/release/models/optical-transport/openconfig-optical-amplifier.yang
	- public/release/models/optical-transport/openconfig-terminal-device.yang
	- public/release/models/optical-transport/openconfig-transport-line-protection.yang
	- public/release/models/platform/openconfig-platform.yang
	- public/release/models/policy/openconfig-routing-policy.yang
	- public/release/models/lacp/openconfig-lacp.yang
	- public/release/models/system/openconfig-system.yang
	- public/release/models/lldp/openconfig-lldp.yang
	- public/release/models/stp/openconfig-spanning-tree.yang
	- public/release/models/interfaces/openconfig-interfaces.yang
	- public/release/models/interfaces/openconfig-if-ip.yang
	- public/release/models/interfaces/openconfig-if-aggregate.yang
	- public/release/models/interfaces/openconfig-if-ethernet.yang
	- public/release/models/interfaces/openconfig-if-ip-ext.yang
Imported modules were sourced from:
	- public/...
	- deps/...
*/
package exampleoc

import (
	"github.com/openconfig/ygot/ygot"
)

// Component represents the /openconfig-platform/components/component YANG schema element.
type Component struct {
	ΛMetadata          []ygot.Annotation                               `path:"@" ygotAnnotation:"true"`
	AllocatedPower     *uint32                                         `path:"state/allocated-power" module:"openconfig-platform"`
	ΛAllocatedPower    []ygot.Annotation                               `path:"state/@allocated-power" ygotAnnotation:"true"`
	Backplane          *Component_Backplane                            `path:"backplane" module:"openconfig-platform"`
	ΛBackplane         []ygot.Annotation                               `path:"@backplane" ygotAnnotation:"true"`
	Chassis            *Component_Chassis                              `path:"chassis" module:"openconfig-platform"`
	ΛChassis           []ygot.Annotation                               `path:"@chassis" ygotAnnotation:"true"`
	Cpu                *Component_Cpu                                  `path:"cpu" module:"openconfig-platform"`
	ΛCpu               []ygot.Annotation                               `path:"@cpu" ygotAnnotation:"true"`
	Description        *string                                         `path:"state/description" module:"openconfig-platform"`
	ΛDescription       []ygot.Annotation                               `path:"state/@description" ygotAnnotation:"true"`
	EquipmentFailure   *bool                                           `path:"state/equipment-failure" module:"openconfig-alarms"`
	ΛEquipmentFailure  []ygot.Annotation                               `path:"state/@equipment-failure" ygotAnnotation:"true"`
	EquipmentMismatch  *bool                                           `path:"state/equipment-mismatch" module:"openconfig-alarms"`
	ΛEquipmentMismatch []ygot.Annotation                               `path:"state/@equipment-mismatch" ygotAnnotation:"true"`
	Fabric             *Component_Fabric                               `path:"fabric" module:"openconfig-platform"`
	ΛFabric            []ygot.Annotation                               `path:"@fabric" ygotAnnotation:"true"`
	Fan                *Component_Fan                                  `path:"fan" module:"openconfig-platform"`
	ΛFan               []ygot.Annotation                               `path:"@fan" ygotAnnotation:"true"`
	FirmwareVersion    *string                                         `path:"state/firmware-version" module:"openconfig-platform"`
	ΛFirmwareVersion   []ygot.Annotation                               `path:"state/@firmware-version" ygotAnnotation:"true"`
	HardwareVersion    *string                                         `path:"state/hardware-version" module:"openconfig-platform"`
	ΛHardwareVersion   []ygot.Annotation                               `path:"state/@hardware-version" ygotAnnotation:"true"`
	Id                 *string                                         `path:"state/id" module:"openconfig-platform"`
	ΛId                []ygot.Annotation                               `path:"state/@id" ygotAnnotation:"true"`
	IntegratedCircuit  *Component_IntegratedCircuit                    `path:"integrated-circuit" module:"openconfig-platform"`
	ΛIntegratedCircuit []ygot.Annotation                               `path:"@integrated-circuit" ygotAnnotation:"true"`
	Memory             *Component_Memory                               `path:"state/memory" module:"openconfig-platform"`
	ΛMemory            []ygot.Annotation                               `path:"state/@memory" ygotAnnotation:"true"`
	MfgName            *string                                         `path:"state/mfg-name" module:"openconfig-platform"`
	ΛMfgName           []ygot.Annotation                               `path:"state/@mfg-name" ygotAnnotation:"true"`
	Name               *string                                         `path:"config/name|name" module:"openconfig-platform"`
	ΛName              []ygot.Annotation                               `path:"config/@name|@name" ygotAnnotation:"true"`
	OperStatus         E_OpenconfigPlatformTypes_COMPONENT_OPER_STATUS `path:"state/oper-status" module:"openconfig-platform"`
	ΛOperStatus        []ygot.Annotation                               `path:"state/@oper-status" ygotAnnotation:"true"`
	OpticalChannel     *Component_OpticalChannel                       `path:"optical-channel" module:"openconfig-terminal-device"`
	ΛOpticalChannel    []ygot.Annotation                               `path:"@optical-channel" ygotAnnotation:"true"`
	OpticalPort        *Component_OpticalPort                          `path:"optical-port" module:"openconfig-transport-line-common"`
	ΛOpticalPort       []ygot.Annotation                               `path:"@optical-port" ygotAnnotation:"true"`
	PartNo             *string                                         `path:"state/part-no" module:"openconfig-platform"`
	ΛPartNo            []ygot.Annotation                               `path:"state/@part-no" ygotAnnotation:"true"`
	Port               *Component_Port                                 `path:"port" module:"openconfig-platform"`
	ΛPort              []ygot.Annotation                               `path:"@port" ygotAnnotation:"true"`
	PowerSupply        *Component_PowerSupply                          `path:"power-supply" module:"openconfig-platform"`
	ΛPowerSupply       []ygot.Annotation                               `path:"@power-supply" ygotAnnotation:"true"`
	Property           map[string]*Component_Property                  `path:"properties/property" module:"openconfig-platform"`
	ΛProperty          []ygot.Annotation                               `path:"properties/@property" ygotAnnotation:"true"`
	SerialNo           *string                                         `path:"state/serial-no" module:"openconfig-platform"`
	ΛSerialNo          []ygot.Annotation                               `path:"state/@serial-no" ygotAnnotation:"true"`
	SoftwareVersion    *string                                         `path:"state/software-version" module:"openconfig-platform"`
	ΛSoftwareVersion   []ygot.Annotation                               `path:"state/@software-version" ygotAnnotation:"true"`
	Storage            *Component_Storage                              `path:"storage" module:"openconfig-platform"`
	ΛStorage           []ygot.Annotation                               `path:"@storage" ygotAnnotation:"true"`
	Subcomponent       map[string]*Component_Subcomponent              `path:"subcomponents/subcomponent" module:"openconfig-platform"`
	ΛSubcomponent      []ygot.Annotation                               `path:"subcomponents/@subcomponent" ygotAnnotation:"true"`
	Temperature        *Component_Temperature                          `path:"state/temperature" module:"openconfig-platform"`
	ΛTemperature       []ygot.Annotation                               `path:"state/@temperature" ygotAnnotation:"true"`
	Transceiver        *Component_Transceiver                          `path:"transceiver" module:"openconfig-platform-transceiver"`
	ΛTransceiver       []ygot.Annotation                               `path:"@transceiver" ygotAnnotation:"true"`
	Type               Component_Type_Union                            `path:"state/type" module:"openconfig-platform"`
	ΛType              []ygot.Annotation                               `path:"state/@type" ygotAnnotation:"true"`
	UsedPower          *uint32                                         `path:"state/used-power" module:"openconfig-platform"`
	ΛUsedPower         []ygot.Annotation                               `path:"state/@used-power" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component) IsYANGGoStruct() {}

// Component_Backplane represents the /openconfig-platform/components/component/backplane YANG schema element.
type Component_Backplane struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_Backplane implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Backplane) IsYANGGoStruct() {}

// Component_Chassis represents the /openconfig-platform/components/component/chassis YANG schema element.
type Component_Chassis struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_Chassis implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Chassis) IsYANGGoStruct() {}

// Component_Cpu represents the /openconfig-platform/components/component/cpu YANG schema element.
type Component_Cpu struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_Cpu implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Cpu) IsYANGGoStruct() {}

// Component_Fabric represents the /openconfig-platform/components/component/fabric YANG schema element.
type Component_Fabric struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_Fabric implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Fabric) IsYANGGoStruct() {}

// Component_Fan represents the /openconfig-platform/components/component/fan YANG schema element.
type Component_Fan struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_Fan implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Fan) IsYANGGoStruct() {}

// Component_IntegratedCircuit represents the /openconfig-platform/components/component/integrated-circuit YANG schema element.
type Component_IntegratedCircuit struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_IntegratedCircuit implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_IntegratedCircuit) IsYANGGoStruct() {}

// Component_Memory represents the /openconfig-platform/components/component/state/memory YANG schema element.
type Component_Memory struct {
	ΛMetadata  []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Available  *uint64           `path:"available" module:"openconfig-platform"`
	ΛAvailable []ygot.Annotation `path:"@available" ygotAnnotation:"true"`
	Utilized   *uint64           `path:"utilized" module:"openconfig-platform"`
	ΛUtilized  []ygot.Annotation `path:"@utilized" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_Memory implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Memory) IsYANGGoStruct() {}

// Component_OpticalChannel represents the /openconfig-platform/components/component/optical-channel YANG schema element.
type Component_OpticalChannel struct {
	ΛMetadata                              []ygot.Annotation                                               `path:"@" ygotAnnotation:"true"`
	ChromaticDispersion                    *Component_OpticalChannel_ChromaticDispersion                   `path:"state/chromatic-dispersion" module:"openconfig-terminal-device"`
	ΛChromaticDispersion                   []ygot.Annotation                                               `path:"state/@chromatic-dispersion" ygotAnnotation:"true"`
	Frequency                              *uint64                                                         `path:"config/frequency" module:"openconfig-terminal-device"`
	ΛFrequency                             []ygot.Annotation                                               `path:"config/@frequency" ygotAnnotation:"true"`
	GroupId                                *uint32                                                         `path:"state/group-id" module:"openconfig-terminal-device"`
	ΛGroupId                               []ygot.Annotation                                               `path:"state/@group-id" ygotAnnotation:"true"`
	InputPower                             *Component_OpticalChannel_InputPower                            `path:"state/input-power" module:"openconfig-terminal-device"`
	ΛInputPower                            []ygot.Annotation                                               `path:"state/@input-power" ygotAnnotation:"true"`
	LaserBiasCurrent                       *Component_OpticalChannel_LaserBiasCurrent                      `path:"state/laser-bias-current" module:"openconfig-terminal-device"`
	ΛLaserBiasCurrent                      []ygot.Annotation                                               `path:"state/@laser-bias-current" ygotAnnotation:"true"`
	LinePort                               *string                                                         `path:"config/line-port" module:"openconfig-terminal-device"`
	ΛLinePort                              []ygot.Annotation                                               `path:"config/@line-port" ygotAnnotation:"true"`
	OperationalMode                        *uint16                                                         `path:"config/operational-mode" module:"openconfig-terminal-device"`
	ΛOperationalMode                       []ygot.Annotation                                               `path:"config/@operational-mode" ygotAnnotation:"true"`
	OutputPower                            *Component_OpticalChannel_OutputPower                           `path:"state/output-power" module:"openconfig-terminal-device"`
	ΛOutputPower                           []ygot.Annotation                                               `path:"state/@output-power" ygotAnnotation:"true"`
	PolarizationDependentLoss              *Component_OpticalChannel_PolarizationDependentLoss             `path:"state/polarization-dependent-loss" module:"openconfig-terminal-device"`
	ΛPolarizationDependentLoss             []ygot.Annotation                                               `path:"state/@polarization-dependent-loss" ygotAnnotation:"true"`
	PolarizationModeDispersion             *Component_OpticalChannel_PolarizationModeDispersion            `path:"state/polarization-mode-dispersion" module:"openconfig-terminal-device"`
	ΛPolarizationModeDispersion            []ygot.Annotation                                               `path:"state/@polarization-mode-dispersion" ygotAnnotation:"true"`
	SecondOrderPolarizationModeDispersion  *Component_OpticalChannel_SecondOrderPolarizationModeDispersion `path:"state/second-order-polarization-mode-dispersion" module:"openconfig-terminal-device"`
	ΛSecondOrderPolarizationModeDispersion []ygot.Annotation                                               `path:"state/@second-order-polarization-mode-dispersion" ygotAnnotation:"true"`
	TargetOutputPower                      *float64                                                        `path:"config/target-output-power" module:"openconfig-terminal-device"`
	ΛTargetOutputPower                     []ygot.Annotation                                               `path:"config/@target-output-power" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_OpticalChannel implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_OpticalChannel) IsYANGGoStruct() {}

// Component_OpticalChannel_ChromaticDispersion represents the /openconfig-platform/components/component/optical-channel/state/chromatic-dispersion YANG schema element.
type Component_OpticalChannel_ChromaticDispersion struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-terminal-device"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-terminal-device"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-terminal-device"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-terminal-device"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_OpticalChannel_ChromaticDispersion implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_OpticalChannel_ChromaticDispersion) IsYANGGoStruct() {}

// Component_OpticalChannel_InputPower represents the /openconfig-platform/components/component/optical-channel/state/input-power YANG schema element.
type Component_OpticalChannel_InputPower struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-terminal-device"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-terminal-device"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Interval  *uint64           `path:"interval" module:"openconfig-terminal-device"`
	ΛInterval []ygot.Annotation `path:"@interval" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-terminal-device"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-terminal-device"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_OpticalChannel_InputPower implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_OpticalChannel_InputPower) IsYANGGoStruct() {}

// Component_OpticalChannel_LaserBiasCurrent represents the /openconfig-platform/components/component/optical-channel/state/laser-bias-current YANG schema element.
type Component_OpticalChannel_LaserBiasCurrent struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-terminal-device"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-terminal-device"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Interval  *uint64           `path:"interval" module:"openconfig-terminal-device"`
	ΛInterval []ygot.Annotation `path:"@interval" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-terminal-device"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-terminal-device"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_OpticalChannel_LaserBiasCurrent implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_OpticalChannel_LaserBiasCurrent) IsYANGGoStruct() {}

// Component_OpticalChannel_OutputPower represents the /openconfig-platform/components/component/optical-channel/state/output-power YANG schema element.
type Component_OpticalChannel_OutputPower struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-terminal-device"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-terminal-device"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Interval  *uint64           `path:"interval" module:"openconfig-terminal-device"`
	ΛInterval []ygot.Annotation `path:"@interval" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-terminal-device"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-terminal-device"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_OpticalChannel_OutputPower implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_OpticalChannel_OutputPower) IsYANGGoStruct() {}

// Component_OpticalChannel_PolarizationDependentLoss represents the /openconfig-platform/components/component/optical-channel/state/polarization-dependent-loss YANG schema element.
type Component_OpticalChannel_PolarizationDependentLoss struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-terminal-device"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-terminal-device"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Interval  *uint64           `path:"interval" module:"openconfig-terminal-device"`
	ΛInterval []ygot.Annotation `path:"@interval" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-terminal-device"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-terminal-device"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_OpticalChannel_PolarizationDependentLoss implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_OpticalChannel_PolarizationDependentLoss) IsYANGGoStruct() {}

// Component_OpticalChannel_PolarizationModeDispersion represents the /openconfig-platform/components/component/optical-channel/state/polarization-mode-dispersion YANG schema element.
type Component_OpticalChannel_PolarizationModeDispersion struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-terminal-device"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-terminal-device"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-terminal-device"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-terminal-device"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_OpticalChannel_PolarizationModeDispersion implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_OpticalChannel_PolarizationModeDispersion) IsYANGGoStruct() {}

// Component_OpticalChannel_SecondOrderPolarizationModeDispersion represents the /openconfig-platform/components/component/optical-channel/state/second-order-polarization-mode-dispersion YANG schema element.
type Component_OpticalChannel_SecondOrderPolarizationModeDispersion struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-terminal-device"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-terminal-device"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-terminal-device"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-terminal-device"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_OpticalChannel_SecondOrderPolarizationModeDispersion implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_OpticalChannel_SecondOrderPolarizationModeDispersion) IsYANGGoStruct() {}

// Component_OpticalPort represents the /openconfig-platform/components/component/optical-port YANG schema element.
type Component_OpticalPort struct {
	ΛMetadata        []ygot.Annotation                                      `path:"@" ygotAnnotation:"true"`
	AdminState       E_OpenconfigTransportLineCommon_AdminStateType         `path:"config/admin-state" module:"openconfig-transport-line-common"`
	ΛAdminState      []ygot.Annotation                                      `path:"config/@admin-state" ygotAnnotation:"true"`
	InputPower       *Component_OpticalPort_InputPower                      `path:"state/input-power" module:"openconfig-transport-line-common"`
	ΛInputPower      []ygot.Annotation                                      `path:"state/@input-power" ygotAnnotation:"true"`
	OpticalPortType  E_OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE `path:"state/optical-port-type" module:"openconfig-transport-line-common"`
	ΛOpticalPortType []ygot.Annotation                                      `path:"state/@optical-port-type" ygotAnnotation:"true"`
	OutputPower      *Component_OpticalPort_OutputPower                     `path:"state/output-power" module:"openconfig-transport-line-common"`
	ΛOutputPower     []ygot.Annotation                                      `path:"state/@output-power" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_OpticalPort implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_OpticalPort) IsYANGGoStruct() {}

// Component_OpticalPort_InputPower represents the /openconfig-platform/components/component/optical-port/state/input-power YANG schema element.
type Component_OpticalPort_InputPower struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-transport-line-common"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-transport-line-common"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Interval  *uint64           `path:"interval" module:"openconfig-transport-line-common"`
	ΛInterval []ygot.Annotation `path:"@interval" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-transport-line-common"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-transport-line-common"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_OpticalPort_InputPower implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_OpticalPort_InputPower) IsYANGGoStruct() {}

// Component_OpticalPort_OutputPower represents the /openconfig-platform/components/component/optical-port/state/output-power YANG schema element.
type Component_OpticalPort_OutputPower struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-transport-line-common"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-transport-line-common"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Interval  *uint64           `path:"interval" module:"openconfig-transport-line-common"`
	ΛInterval []ygot.Annotation `path:"@interval" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-transport-line-common"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-transport-line-common"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_OpticalPort_OutputPower implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_OpticalPort_OutputPower) IsYANGGoStruct() {}

// Component_Port represents the /openconfig-platform/components/component/port YANG schema element.
type Component_Port struct {
	ΛMetadata     []ygot.Annotation            `path:"@" ygotAnnotation:"true"`
	BreakoutMode  *Component_Port_BreakoutMode `path:"breakout-mode" module:"openconfig-platform-port"`
	ΛBreakoutMode []ygot.Annotation            `path:"@breakout-mode" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_Port implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Port) IsYANGGoStruct() {}

// Component_Port_BreakoutMode represents the /openconfig-platform/components/component/port/breakout-mode YANG schema element.
type Component_Port_BreakoutMode struct {
	ΛMetadata     []ygot.Annotation                     `path:"@" ygotAnnotation:"true"`
	ChannelSpeed  E_OpenconfigIfEthernet_ETHERNET_SPEED `path:"config/channel-speed" module:"openconfig-platform-port"`
	ΛChannelSpeed []ygot.Annotation                     `path:"config/@channel-speed" ygotAnnotation:"true"`
	NumChannels   *uint8                                `path:"config/num-channels" module:"openconfig-platform-port"`
	ΛNumChannels  []ygot.Annotation                     `path:"config/@num-channels" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_Port_BreakoutMode implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Port_BreakoutMode) IsYANGGoStruct() {}

// Component_PowerSupply represents the /openconfig-platform/components/component/power-supply YANG schema element.
type Component_PowerSupply struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_PowerSupply implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_PowerSupply) IsYANGGoStruct() {}

// Component_Property represents the /openconfig-platform/components/component/properties/property YANG schema element.
type Component_Property struct {
	ΛMetadata     []ygot.Annotation              `path:"@" ygotAnnotation:"true"`
	Configurable  *bool                          `path:"state/configurable" module:"openconfig-platform"`
	ΛConfigurable []ygot.Annotation              `path:"state/@configurable" ygotAnnotation:"true"`
	Name          *string                        `path:"config/name|name" module:"openconfig-platform"`
	ΛName         []ygot.Annotation              `path:"config/@name|@name" ygotAnnotation:"true"`
	Value         Component_Property_Value_Union `path:"config/value" module:"openconfig-platform"`
	ΛValue        []ygot.Annotation              `path:"config/@value" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_Property implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Property) IsYANGGoStruct() {}

// Component_Storage represents the /openconfig-platform/components/component/storage YANG schema element.
type Component_Storage struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_Storage implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Storage) IsYANGGoStruct() {}

// Component_Subcomponent represents the /openconfig-platform/components/component/subcomponents/subcomponent YANG schema element.
type Component_Subcomponent struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Name      *string           `path:"config/name|name" module:"openconfig-platform"`
	ΛName     []ygot.Annotation `path:"config/@name|@name" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_Subcomponent implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Subcomponent) IsYANGGoStruct() {}

// Component_Temperature represents the /openconfig-platform/components/component/state/temperature YANG schema element.
type Component_Temperature struct {
	ΛMetadata       []ygot.Annotation                                `path:"@" ygotAnnotation:"true"`
	AlarmSeverity   E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY `path:"alarm-severity" module:"openconfig-platform"`
	ΛAlarmSeverity  []ygot.Annotation                                `path:"@alarm-severity" ygotAnnotation:"true"`
	AlarmStatus     *bool                                            `path:"alarm-status" module:"openconfig-platform"`
	ΛAlarmStatus    []ygot.Annotation                                `path:"@alarm-status" ygotAnnotation:"true"`
	AlarmThreshold  *uint32                                          `path:"alarm-threshold" module:"openconfig-platform"`
	ΛAlarmThreshold []ygot.Annotation                                `path:"@alarm-threshold" ygotAnnotation:"true"`
	Avg             *float64                                         `path:"avg" module:"openconfig-platform"`
	ΛAvg            []ygot.Annotation                                `path:"@avg" ygotAnnotation:"true"`
	Instant         *float64                                         `path:"instant" module:"openconfig-platform"`
	ΛInstant        []ygot.Annotation                                `path:"@instant" ygotAnnotation:"true"`
	Interval        *uint64                                          `path:"interval" module:"openconfig-platform"`
	ΛInterval       []ygot.Annotation                                `path:"@interval" ygotAnnotation:"true"`
	Max             *float64                                         `path:"max" module:"openconfig-platform"`
	ΛMax            []ygot.Annotation                                `path:"@max" ygotAnnotation:"true"`
	Min             *float64                                         `path:"min" module:"openconfig-platform"`
	ΛMin            []ygot.Annotation                                `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_Temperature implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Temperature) IsYANGGoStruct() {}

// Component_Transceiver represents the /openconfig-platform/components/component/transceiver YANG schema element.
type Component_Transceiver struct {
	ΛMetadata               []ygot.Annotation                                       `path:"@" ygotAnnotation:"true"`
	Channel                 map[uint16]*Component_Transceiver_Channel               `path:"physical-channels/channel" module:"openconfig-platform-transceiver"`
	ΛChannel                []ygot.Annotation                                       `path:"physical-channels/@channel" ygotAnnotation:"true"`
	ConnectorType           E_OpenconfigTransportTypes_FIBER_CONNECTOR_TYPE         `path:"state/connector-type" module:"openconfig-platform-transceiver"`
	ΛConnectorType          []ygot.Annotation                                       `path:"state/@connector-type" ygotAnnotation:"true"`
	DateCode                *string                                                 `path:"state/date-code" module:"openconfig-platform-transceiver"`
	ΛDateCode               []ygot.Annotation                                       `path:"state/@date-code" ygotAnnotation:"true"`
	Enabled                 *bool                                                   `path:"config/enabled" module:"openconfig-platform-transceiver"`
	ΛEnabled                []ygot.Annotation                                       `path:"config/@enabled" ygotAnnotation:"true"`
	EthernetPmd             E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE            `path:"state/ethernet-pmd" module:"openconfig-platform-transceiver"`
	ΛEthernetPmd            []ygot.Annotation                                       `path:"state/@ethernet-pmd" ygotAnnotation:"true"`
	EthernetPmdPreconf      E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE            `path:"config/ethernet-pmd-preconf" module:"openconfig-platform-transceiver"`
	ΛEthernetPmdPreconf     []ygot.Annotation                                       `path:"config/@ethernet-pmd-preconf" ygotAnnotation:"true"`
	FaultCondition          *bool                                                   `path:"state/fault-condition" module:"openconfig-platform-transceiver"`
	ΛFaultCondition         []ygot.Annotation                                       `path:"state/@fault-condition" ygotAnnotation:"true"`
	FormFactor              E_OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE `path:"state/form-factor" module:"openconfig-platform-transceiver"`
	ΛFormFactor             []ygot.Annotation                                       `path:"state/@form-factor" ygotAnnotation:"true"`
	FormFactorPreconf       E_OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE `path:"config/form-factor-preconf" module:"openconfig-platform-transceiver"`
	ΛFormFactorPreconf      []ygot.Annotation                                       `path:"config/@form-factor-preconf" ygotAnnotation:"true"`
	InputPower              *Component_Transceiver_InputPower                       `path:"state/input-power" module:"openconfig-platform-transceiver"`
	ΛInputPower             []ygot.Annotation                                       `path:"state/@input-power" ygotAnnotation:"true"`
	InternalTemp            *int16                                                  `path:"state/internal-temp" module:"openconfig-platform-transceiver"`
	ΛInternalTemp           []ygot.Annotation                                       `path:"state/@internal-temp" ygotAnnotation:"true"`
	LaserBiasCurrent        *Component_Transceiver_LaserBiasCurrent                 `path:"state/laser-bias-current" module:"openconfig-platform-transceiver"`
	ΛLaserBiasCurrent       []ygot.Annotation                                       `path:"state/@laser-bias-current" ygotAnnotation:"true"`
	OtnComplianceCode       E_OpenconfigTransportTypes_OTN_APPLICATION_CODE         `path:"state/otn-compliance-code" module:"openconfig-platform-transceiver"`
	ΛOtnComplianceCode      []ygot.Annotation                                       `path:"state/@otn-compliance-code" ygotAnnotation:"true"`
	OutputPower             *Component_Transceiver_OutputPower                      `path:"state/output-power" module:"openconfig-platform-transceiver"`
	ΛOutputPower            []ygot.Annotation                                       `path:"state/@output-power" ygotAnnotation:"true"`
	Present                 E_OpenconfigPlatformTransceiver_Transceiver_Present     `path:"state/present" module:"openconfig-platform-transceiver"`
	ΛPresent                []ygot.Annotation                                       `path:"state/@present" ygotAnnotation:"true"`
	SerialNo                *string                                                 `path:"state/serial-no" module:"openconfig-platform-transceiver"`
	ΛSerialNo               []ygot.Annotation                                       `path:"state/@serial-no" ygotAnnotation:"true"`
	SonetSdhComplianceCode  E_OpenconfigTransportTypes_SONET_APPLICATION_CODE       `path:"state/sonet-sdh-compliance-code" module:"openconfig-platform-transceiver"`
	ΛSonetSdhComplianceCode []ygot.Annotation                                       `path:"state/@sonet-sdh-compliance-code" ygotAnnotation:"true"`
	Vendor                  *string                                                 `path:"state/vendor" module:"openconfig-platform-transceiver"`
	ΛVendor                 []ygot.Annotation                                       `path:"state/@vendor" ygotAnnotation:"true"`
	VendorPart              *string                                                 `path:"state/vendor-part" module:"openconfig-platform-transceiver"`
	ΛVendorPart             []ygot.Annotation                                       `path:"state/@vendor-part" ygotAnnotation:"true"`
	VendorRev               *string                                                 `path:"state/vendor-rev" module:"openconfig-platform-transceiver"`
	ΛVendorRev              []ygot.Annotation                                       `path:"state/@vendor-rev" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_Transceiver implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Transceiver) IsYANGGoStruct() {}

// Component_Transceiver_Channel represents the /openconfig-platform/components/component/transceiver/physical-channels/channel YANG schema element.
type Component_Transceiver_Channel struct {
	ΛMetadata          []ygot.Annotation                               `path:"@" ygotAnnotation:"true"`
	Description        *string                                         `path:"config/description" module:"openconfig-platform-transceiver"`
	ΛDescription       []ygot.Annotation                               `path:"config/@description" ygotAnnotation:"true"`
	Index              *uint16                                         `path:"config/index|index" module:"openconfig-platform-transceiver"`
	ΛIndex             []ygot.Annotation                               `path:"config/@index|@index" ygotAnnotation:"true"`
	InputPower         *Component_Transceiver_Channel_InputPower       `path:"state/input-power" module:"openconfig-platform-transceiver"`
	ΛInputPower        []ygot.Annotation                               `path:"state/@input-power" ygotAnnotation:"true"`
	LaserBiasCurrent   *Component_Transceiver_Channel_LaserBiasCurrent `path:"state/laser-bias-current" module:"openconfig-platform-transceiver"`
	ΛLaserBiasCurrent  []ygot.Annotation                               `path:"state/@laser-bias-current" ygotAnnotation:"true"`
	OutputFrequency    *uint64                                         `path:"state/output-frequency" module:"openconfig-platform-transceiver"`
	ΛOutputFrequency   []ygot.Annotation                               `path:"state/@output-frequency" ygotAnnotation:"true"`
	OutputPower        *Component_Transceiver_Channel_OutputPower      `path:"state/output-power" module:"openconfig-platform-transceiver"`
	ΛOutputPower       []ygot.Annotation                               `path:"state/@output-power" ygotAnnotation:"true"`
	TargetOutputPower  *float64                                        `path:"config/target-output-power" module:"openconfig-platform-transceiver"`
	ΛTargetOutputPower []ygot.Annotation                               `path:"config/@target-output-power" ygotAnnotation:"true"`
	TxLaser            *bool                                           `path:"config/tx-laser" module:"openconfig-platform-transceiver"`
	ΛTxLaser           []ygot.Annotation                               `path:"config/@tx-laser" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_Transceiver_Channel implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Transceiver_Channel) IsYANGGoStruct() {}

// Component_Transceiver_Channel_InputPower represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/input-power YANG schema element.
type Component_Transceiver_Channel_InputPower struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-platform-transceiver"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-platform-transceiver"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Interval  *uint64           `path:"interval" module:"openconfig-platform-transceiver"`
	ΛInterval []ygot.Annotation `path:"@interval" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-platform-transceiver"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-platform-transceiver"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_Transceiver_Channel_InputPower implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Transceiver_Channel_InputPower) IsYANGGoStruct() {}

// Component_Transceiver_Channel_LaserBiasCurrent represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/laser-bias-current YANG schema element.
type Component_Transceiver_Channel_LaserBiasCurrent struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-platform-transceiver"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-platform-transceiver"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Interval  *uint64           `path:"interval" module:"openconfig-platform-transceiver"`
	ΛInterval []ygot.Annotation `path:"@interval" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-platform-transceiver"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-platform-transceiver"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_Transceiver_Channel_LaserBiasCurrent implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Transceiver_Channel_LaserBiasCurrent) IsYANGGoStruct() {}

// Component_Transceiver_Channel_OutputPower represents the /openconfig-platform/components/component/transceiver/physical-channels/channel/state/output-power YANG schema element.
type Component_Transceiver_Channel_OutputPower struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-platform-transceiver"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-platform-transceiver"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Interval  *uint64           `path:"interval" module:"openconfig-platform-transceiver"`
	ΛInterval []ygot.Annotation `path:"@interval" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-platform-transceiver"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-platform-transceiver"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_Transceiver_Channel_OutputPower implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Transceiver_Channel_OutputPower) IsYANGGoStruct() {}

// Component_Transceiver_InputPower represents the /openconfig-platform/components/component/transceiver/state/input-power YANG schema element.
type Component_Transceiver_InputPower struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-platform-transceiver"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-platform-transceiver"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Interval  *uint64           `path:"interval" module:"openconfig-platform-transceiver"`
	ΛInterval []ygot.Annotation `path:"@interval" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-platform-transceiver"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-platform-transceiver"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_Transceiver_InputPower implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Transceiver_InputPower) IsYANGGoStruct() {}

// Component_Transceiver_LaserBiasCurrent represents the /openconfig-platform/components/component/transceiver/state/laser-bias-current YANG schema element.
type Component_Transceiver_LaserBiasCurrent struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-platform-transceiver"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-platform-transceiver"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Interval  *uint64           `path:"interval" module:"openconfig-platform-transceiver"`
	ΛInterval []ygot.Annotation `path:"@interval" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-platform-transceiver"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-platform-transceiver"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_Transceiver_LaserBiasCurrent implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Transceiver_LaserBiasCurrent) IsYANGGoStruct() {}

// Component_Transceiver_OutputPower represents the /openconfig-platform/components/component/transceiver/state/output-power YANG schema element.
type Component_Transceiver_OutputPower struct {
	ΛMetadata []ygot.Annotation `path:"@" ygotAnnotation:"true"`
	Avg       *float64          `path:"avg" module:"openconfig-platform-transceiver"`
	ΛAvg      []ygot.Annotation `path:"@avg" ygotAnnotation:"true"`
	Instant   *float64          `path:"instant" module:"openconfig-platform-transceiver"`
	ΛInstant  []ygot.Annotation `path:"@instant" ygotAnnotation:"true"`
	Interval  *uint64           `path:"interval" module:"openconfig-platform-transceiver"`
	ΛInterval []ygot.Annotation `path:"@interval" ygotAnnotation:"true"`
	Max       *float64          `path:"max" module:"openconfig-platform-transceiver"`
	ΛMax      []ygot.Annotation `path:"@max" ygotAnnotation:"true"`
	Min       *float64          `path:"min" module:"openconfig-platform-transceiver"`
	ΛMin      []ygot.Annotation `path:"@min" ygotAnnotation:"true"`
}

// IsYANGGoStruct ensures that Component_Transceiver_OutputPower implements the yang.GoStruct
// interface. This allows functions that need to handle this struct to
// identify it as being generated by ygen.
func (*Component_Transceiver_OutputPower) IsYANGGoStruct() {}
