/*
Package exampleoc is a generated package which contains definitions
of structs which represent a YANG schema. The generated schema can be
compressed by a series of transformations (compression was true
in this case).

NOTE WELL: This is an example code file that is distributed with ygot.
It should not be used within your application, as it WILL change,
without warning. Rather, you should generate structs directly from
OpenConfig models using the ygot package.

This package was generated by github.com/openconfig/ygot
using the following YANG input files:
	- public/release/models/network-instance/openconfig-network-instance.yang
	- public/release/models/optical-transport/openconfig-optical-amplifier.yang
	- public/release/models/optical-transport/openconfig-terminal-device.yang
	- public/release/models/optical-transport/openconfig-transport-line-protection.yang
	- public/release/models/platform/openconfig-platform.yang
	- public/release/models/policy/openconfig-routing-policy.yang
	- public/release/models/lacp/openconfig-lacp.yang
	- public/release/models/system/openconfig-system.yang
	- public/release/models/lldp/openconfig-lldp.yang
	- public/release/models/stp/openconfig-spanning-tree.yang
	- public/release/models/interfaces/openconfig-interfaces.yang
	- public/release/models/interfaces/openconfig-if-ip.yang
	- public/release/models/interfaces/openconfig-if-aggregate.yang
	- public/release/models/interfaces/openconfig-if-ethernet.yang
	- public/release/models/interfaces/openconfig-if-ip-ext.yang
Imported modules were sourced from:
	- public/...
	- deps/...
*/
package exampleoc

import (
	"github.com/openconfig/ygot/ygot"
)

// E_IETFInterfaces_InterfaceType is a derived int64 type which is used to represent
// the enumerated node IETFInterfaces_InterfaceType. An additional value named
// IETFInterfaces_InterfaceType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_IETFInterfaces_InterfaceType int64

// IsYANGGoEnum ensures that IETFInterfaces_InterfaceType implements the yang.GoEnum
// interface. This ensures that IETFInterfaces_InterfaceType can be identified as a
// mapped type for a YANG enumeration.
func (E_IETFInterfaces_InterfaceType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  IETFInterfaces_InterfaceType.
func (E_IETFInterfaces_InterfaceType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// IETFInterfaces_InterfaceType_UNSET corresponds to the value UNSET of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_UNSET E_IETFInterfaces_InterfaceType = 0
	// IETFInterfaces_InterfaceType_a12MppSwitch corresponds to the value a12MppSwitch of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_a12MppSwitch E_IETFInterfaces_InterfaceType = 1
	// IETFInterfaces_InterfaceType_aal2 corresponds to the value aal2 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aal2 E_IETFInterfaces_InterfaceType = 2
	// IETFInterfaces_InterfaceType_aal5 corresponds to the value aal5 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aal5 E_IETFInterfaces_InterfaceType = 3
	// IETFInterfaces_InterfaceType_actelisMetaLOOP corresponds to the value actelisMetaLOOP of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_actelisMetaLOOP E_IETFInterfaces_InterfaceType = 4
	// IETFInterfaces_InterfaceType_adsl corresponds to the value adsl of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_adsl E_IETFInterfaces_InterfaceType = 5
	// IETFInterfaces_InterfaceType_adsl2 corresponds to the value adsl2 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_adsl2 E_IETFInterfaces_InterfaceType = 6
	// IETFInterfaces_InterfaceType_adsl2plus corresponds to the value adsl2plus of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_adsl2plus E_IETFInterfaces_InterfaceType = 7
	// IETFInterfaces_InterfaceType_aflane8023 corresponds to the value aflane8023 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aflane8023 E_IETFInterfaces_InterfaceType = 8
	// IETFInterfaces_InterfaceType_aflane8025 corresponds to the value aflane8025 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aflane8025 E_IETFInterfaces_InterfaceType = 9
	// IETFInterfaces_InterfaceType_aluELP corresponds to the value aluELP of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aluELP E_IETFInterfaces_InterfaceType = 10
	// IETFInterfaces_InterfaceType_aluEpon corresponds to the value aluEpon of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aluEpon E_IETFInterfaces_InterfaceType = 11
	// IETFInterfaces_InterfaceType_aluEponLogicalLink corresponds to the value aluEponLogicalLink of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aluEponLogicalLink E_IETFInterfaces_InterfaceType = 12
	// IETFInterfaces_InterfaceType_aluEponOnu corresponds to the value aluEponOnu of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aluEponOnu E_IETFInterfaces_InterfaceType = 13
	// IETFInterfaces_InterfaceType_aluEponPhysicalUni corresponds to the value aluEponPhysicalUni of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aluEponPhysicalUni E_IETFInterfaces_InterfaceType = 14
	// IETFInterfaces_InterfaceType_aluGponOnu corresponds to the value aluGponOnu of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aluGponOnu E_IETFInterfaces_InterfaceType = 15
	// IETFInterfaces_InterfaceType_aluGponPhysicalUni corresponds to the value aluGponPhysicalUni of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aluGponPhysicalUni E_IETFInterfaces_InterfaceType = 16
	// IETFInterfaces_InterfaceType_arap corresponds to the value arap of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_arap E_IETFInterfaces_InterfaceType = 17
	// IETFInterfaces_InterfaceType_arcnet corresponds to the value arcnet of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_arcnet E_IETFInterfaces_InterfaceType = 18
	// IETFInterfaces_InterfaceType_arcnetPlus corresponds to the value arcnetPlus of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_arcnetPlus E_IETFInterfaces_InterfaceType = 19
	// IETFInterfaces_InterfaceType_async corresponds to the value async of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_async E_IETFInterfaces_InterfaceType = 20
	// IETFInterfaces_InterfaceType_atm corresponds to the value atm of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atm E_IETFInterfaces_InterfaceType = 21
	// IETFInterfaces_InterfaceType_atmDxi corresponds to the value atmDxi of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmDxi E_IETFInterfaces_InterfaceType = 22
	// IETFInterfaces_InterfaceType_atmFuni corresponds to the value atmFuni of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmFuni E_IETFInterfaces_InterfaceType = 23
	// IETFInterfaces_InterfaceType_atmIma corresponds to the value atmIma of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmIma E_IETFInterfaces_InterfaceType = 24
	// IETFInterfaces_InterfaceType_atmLogical corresponds to the value atmLogical of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmLogical E_IETFInterfaces_InterfaceType = 25
	// IETFInterfaces_InterfaceType_atmRadio corresponds to the value atmRadio of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmRadio E_IETFInterfaces_InterfaceType = 26
	// IETFInterfaces_InterfaceType_atmSubInterface corresponds to the value atmSubInterface of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmSubInterface E_IETFInterfaces_InterfaceType = 27
	// IETFInterfaces_InterfaceType_atmVciEndPt corresponds to the value atmVciEndPt of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmVciEndPt E_IETFInterfaces_InterfaceType = 28
	// IETFInterfaces_InterfaceType_atmVirtual corresponds to the value atmVirtual of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmVirtual E_IETFInterfaces_InterfaceType = 29
	// IETFInterfaces_InterfaceType_atmbond corresponds to the value atmbond of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_atmbond E_IETFInterfaces_InterfaceType = 30
	// IETFInterfaces_InterfaceType_aviciOpticalEther corresponds to the value aviciOpticalEther of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_aviciOpticalEther E_IETFInterfaces_InterfaceType = 31
	// IETFInterfaces_InterfaceType_basicISDN corresponds to the value basicISDN of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_basicISDN E_IETFInterfaces_InterfaceType = 32
	// IETFInterfaces_InterfaceType_bgppolicyaccounting corresponds to the value bgppolicyaccounting of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_bgppolicyaccounting E_IETFInterfaces_InterfaceType = 33
	// IETFInterfaces_InterfaceType_bits corresponds to the value bits of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_bits E_IETFInterfaces_InterfaceType = 34
	// IETFInterfaces_InterfaceType_bridge corresponds to the value bridge of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_bridge E_IETFInterfaces_InterfaceType = 35
	// IETFInterfaces_InterfaceType_bsc corresponds to the value bsc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_bsc E_IETFInterfaces_InterfaceType = 36
	// IETFInterfaces_InterfaceType_cableDownstreamRfPort corresponds to the value cableDownstreamRfPort of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_cableDownstreamRfPort E_IETFInterfaces_InterfaceType = 37
	// IETFInterfaces_InterfaceType_capwapDot11Bss corresponds to the value capwapDot11Bss of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_capwapDot11Bss E_IETFInterfaces_InterfaceType = 38
	// IETFInterfaces_InterfaceType_capwapDot11Profile corresponds to the value capwapDot11Profile of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_capwapDot11Profile E_IETFInterfaces_InterfaceType = 39
	// IETFInterfaces_InterfaceType_capwapWtpVirtualRadio corresponds to the value capwapWtpVirtualRadio of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_capwapWtpVirtualRadio E_IETFInterfaces_InterfaceType = 40
	// IETFInterfaces_InterfaceType_cblVectaStar corresponds to the value cblVectaStar of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_cblVectaStar E_IETFInterfaces_InterfaceType = 41
	// IETFInterfaces_InterfaceType_cctEmul corresponds to the value cctEmul of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_cctEmul E_IETFInterfaces_InterfaceType = 42
	// IETFInterfaces_InterfaceType_ces corresponds to the value ces of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ces E_IETFInterfaces_InterfaceType = 43
	// IETFInterfaces_InterfaceType_channel corresponds to the value channel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_channel E_IETFInterfaces_InterfaceType = 44
	// IETFInterfaces_InterfaceType_ciscoISLvlan corresponds to the value ciscoISLvlan of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ciscoISLvlan E_IETFInterfaces_InterfaceType = 45
	// IETFInterfaces_InterfaceType_cnr corresponds to the value cnr of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_cnr E_IETFInterfaces_InterfaceType = 46
	// IETFInterfaces_InterfaceType_coffee corresponds to the value coffee of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_coffee E_IETFInterfaces_InterfaceType = 47
	// IETFInterfaces_InterfaceType_compositeLink corresponds to the value compositeLink of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_compositeLink E_IETFInterfaces_InterfaceType = 48
	// IETFInterfaces_InterfaceType_dcn corresponds to the value dcn of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dcn E_IETFInterfaces_InterfaceType = 49
	// IETFInterfaces_InterfaceType_ddnX25 corresponds to the value ddnX25 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ddnX25 E_IETFInterfaces_InterfaceType = 50
	// IETFInterfaces_InterfaceType_digitalPowerline corresponds to the value digitalPowerline of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_digitalPowerline E_IETFInterfaces_InterfaceType = 51
	// IETFInterfaces_InterfaceType_digitalWrapperOverheadChannel corresponds to the value digitalWrapperOverheadChannel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_digitalWrapperOverheadChannel E_IETFInterfaces_InterfaceType = 52
	// IETFInterfaces_InterfaceType_dlsw corresponds to the value dlsw of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dlsw E_IETFInterfaces_InterfaceType = 53
	// IETFInterfaces_InterfaceType_docsCableDownstream corresponds to the value docsCableDownstream of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableDownstream E_IETFInterfaces_InterfaceType = 54
	// IETFInterfaces_InterfaceType_docsCableMCmtsDownstream corresponds to the value docsCableMCmtsDownstream of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableMCmtsDownstream E_IETFInterfaces_InterfaceType = 55
	// IETFInterfaces_InterfaceType_docsCableMaclayer corresponds to the value docsCableMaclayer of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableMaclayer E_IETFInterfaces_InterfaceType = 56
	// IETFInterfaces_InterfaceType_docsCableUpstream corresponds to the value docsCableUpstream of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableUpstream E_IETFInterfaces_InterfaceType = 57
	// IETFInterfaces_InterfaceType_docsCableUpstreamChannel corresponds to the value docsCableUpstreamChannel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableUpstreamChannel E_IETFInterfaces_InterfaceType = 58
	// IETFInterfaces_InterfaceType_docsCableUpstreamRfPort corresponds to the value docsCableUpstreamRfPort of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_docsCableUpstreamRfPort E_IETFInterfaces_InterfaceType = 59
	// IETFInterfaces_InterfaceType_ds0 corresponds to the value ds0 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ds0 E_IETFInterfaces_InterfaceType = 60
	// IETFInterfaces_InterfaceType_ds0Bundle corresponds to the value ds0Bundle of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ds0Bundle E_IETFInterfaces_InterfaceType = 61
	// IETFInterfaces_InterfaceType_ds1 corresponds to the value ds1 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ds1 E_IETFInterfaces_InterfaceType = 62
	// IETFInterfaces_InterfaceType_ds1FDL corresponds to the value ds1FDL of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ds1FDL E_IETFInterfaces_InterfaceType = 63
	// IETFInterfaces_InterfaceType_ds3 corresponds to the value ds3 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ds3 E_IETFInterfaces_InterfaceType = 64
	// IETFInterfaces_InterfaceType_dtm corresponds to the value dtm of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dtm E_IETFInterfaces_InterfaceType = 65
	// IETFInterfaces_InterfaceType_dvbAsiIn corresponds to the value dvbAsiIn of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dvbAsiIn E_IETFInterfaces_InterfaceType = 66
	// IETFInterfaces_InterfaceType_dvbAsiOut corresponds to the value dvbAsiOut of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dvbAsiOut E_IETFInterfaces_InterfaceType = 67
	// IETFInterfaces_InterfaceType_dvbRccDownstream corresponds to the value dvbRccDownstream of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dvbRccDownstream E_IETFInterfaces_InterfaceType = 68
	// IETFInterfaces_InterfaceType_dvbRccMacLayer corresponds to the value dvbRccMacLayer of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dvbRccMacLayer E_IETFInterfaces_InterfaceType = 69
	// IETFInterfaces_InterfaceType_dvbRccUpstream corresponds to the value dvbRccUpstream of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dvbRccUpstream E_IETFInterfaces_InterfaceType = 70
	// IETFInterfaces_InterfaceType_dvbRcsMacLayer corresponds to the value dvbRcsMacLayer of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dvbRcsMacLayer E_IETFInterfaces_InterfaceType = 71
	// IETFInterfaces_InterfaceType_dvbRcsTdma corresponds to the value dvbRcsTdma of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dvbRcsTdma E_IETFInterfaces_InterfaceType = 72
	// IETFInterfaces_InterfaceType_dvbTdm corresponds to the value dvbTdm of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_dvbTdm E_IETFInterfaces_InterfaceType = 73
	// IETFInterfaces_InterfaceType_e1 corresponds to the value e1 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_e1 E_IETFInterfaces_InterfaceType = 74
	// IETFInterfaces_InterfaceType_econet corresponds to the value econet of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_econet E_IETFInterfaces_InterfaceType = 75
	// IETFInterfaces_InterfaceType_eon corresponds to the value eon of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_eon E_IETFInterfaces_InterfaceType = 76
	// IETFInterfaces_InterfaceType_eplrs corresponds to the value eplrs of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_eplrs E_IETFInterfaces_InterfaceType = 77
	// IETFInterfaces_InterfaceType_escon corresponds to the value escon of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_escon E_IETFInterfaces_InterfaceType = 78
	// IETFInterfaces_InterfaceType_ethernet3Mbit corresponds to the value ethernet3Mbit of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ethernet3Mbit E_IETFInterfaces_InterfaceType = 79
	// IETFInterfaces_InterfaceType_ethernetCsmacd corresponds to the value ethernetCsmacd of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ethernetCsmacd E_IETFInterfaces_InterfaceType = 80
	// IETFInterfaces_InterfaceType_fast corresponds to the value fast of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_fast E_IETFInterfaces_InterfaceType = 81
	// IETFInterfaces_InterfaceType_fastEther corresponds to the value fastEther of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_fastEther E_IETFInterfaces_InterfaceType = 82
	// IETFInterfaces_InterfaceType_fastEtherFX corresponds to the value fastEtherFX of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_fastEtherFX E_IETFInterfaces_InterfaceType = 83
	// IETFInterfaces_InterfaceType_fcipLink corresponds to the value fcipLink of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_fcipLink E_IETFInterfaces_InterfaceType = 84
	// IETFInterfaces_InterfaceType_fddi corresponds to the value fddi of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_fddi E_IETFInterfaces_InterfaceType = 85
	// IETFInterfaces_InterfaceType_fibreChannel corresponds to the value fibreChannel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_fibreChannel E_IETFInterfaces_InterfaceType = 86
	// IETFInterfaces_InterfaceType_frDlciEndPt corresponds to the value frDlciEndPt of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_frDlciEndPt E_IETFInterfaces_InterfaceType = 87
	// IETFInterfaces_InterfaceType_frForward corresponds to the value frForward of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_frForward E_IETFInterfaces_InterfaceType = 88
	// IETFInterfaces_InterfaceType_frameRelay corresponds to the value frameRelay of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_frameRelay E_IETFInterfaces_InterfaceType = 89
	// IETFInterfaces_InterfaceType_frameRelayInterconnect corresponds to the value frameRelayInterconnect of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_frameRelayInterconnect E_IETFInterfaces_InterfaceType = 90
	// IETFInterfaces_InterfaceType_frameRelayMPI corresponds to the value frameRelayMPI of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_frameRelayMPI E_IETFInterfaces_InterfaceType = 91
	// IETFInterfaces_InterfaceType_frameRelayService corresponds to the value frameRelayService of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_frameRelayService E_IETFInterfaces_InterfaceType = 92
	// IETFInterfaces_InterfaceType_frf16MfrBundle corresponds to the value frf16MfrBundle of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_frf16MfrBundle E_IETFInterfaces_InterfaceType = 93
	// IETFInterfaces_InterfaceType_g703at2mb corresponds to the value g703at2mb of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_g703at2mb E_IETFInterfaces_InterfaceType = 94
	// IETFInterfaces_InterfaceType_g703at64k corresponds to the value g703at64k of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_g703at64k E_IETFInterfaces_InterfaceType = 95
	// IETFInterfaces_InterfaceType_g9981 corresponds to the value g9981 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_g9981 E_IETFInterfaces_InterfaceType = 96
	// IETFInterfaces_InterfaceType_g9982 corresponds to the value g9982 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_g9982 E_IETFInterfaces_InterfaceType = 97
	// IETFInterfaces_InterfaceType_g9983 corresponds to the value g9983 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_g9983 E_IETFInterfaces_InterfaceType = 98
	// IETFInterfaces_InterfaceType_gfp corresponds to the value gfp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_gfp E_IETFInterfaces_InterfaceType = 99
	// IETFInterfaces_InterfaceType_gigabitEthernet corresponds to the value gigabitEthernet of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_gigabitEthernet E_IETFInterfaces_InterfaceType = 100
	// IETFInterfaces_InterfaceType_gpon corresponds to the value gpon of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_gpon E_IETFInterfaces_InterfaceType = 101
	// IETFInterfaces_InterfaceType_gr303IDT corresponds to the value gr303IDT of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_gr303IDT E_IETFInterfaces_InterfaceType = 102
	// IETFInterfaces_InterfaceType_gr303RDT corresponds to the value gr303RDT of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_gr303RDT E_IETFInterfaces_InterfaceType = 103
	// IETFInterfaces_InterfaceType_gtp corresponds to the value gtp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_gtp E_IETFInterfaces_InterfaceType = 104
	// IETFInterfaces_InterfaceType_h323Gatekeeper corresponds to the value h323Gatekeeper of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_h323Gatekeeper E_IETFInterfaces_InterfaceType = 105
	// IETFInterfaces_InterfaceType_h323Proxy corresponds to the value h323Proxy of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_h323Proxy E_IETFInterfaces_InterfaceType = 106
	// IETFInterfaces_InterfaceType_hdh1822 corresponds to the value hdh1822 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hdh1822 E_IETFInterfaces_InterfaceType = 107
	// IETFInterfaces_InterfaceType_hdlc corresponds to the value hdlc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hdlc E_IETFInterfaces_InterfaceType = 108
	// IETFInterfaces_InterfaceType_hdsl2 corresponds to the value hdsl2 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hdsl2 E_IETFInterfaces_InterfaceType = 109
	// IETFInterfaces_InterfaceType_hiperlan2 corresponds to the value hiperlan2 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hiperlan2 E_IETFInterfaces_InterfaceType = 110
	// IETFInterfaces_InterfaceType_hippi corresponds to the value hippi of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hippi E_IETFInterfaces_InterfaceType = 111
	// IETFInterfaces_InterfaceType_hippiInterface corresponds to the value hippiInterface of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hippiInterface E_IETFInterfaces_InterfaceType = 112
	// IETFInterfaces_InterfaceType_homepna corresponds to the value homepna of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_homepna E_IETFInterfaces_InterfaceType = 113
	// IETFInterfaces_InterfaceType_hostPad corresponds to the value hostPad of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hostPad E_IETFInterfaces_InterfaceType = 114
	// IETFInterfaces_InterfaceType_hssi corresponds to the value hssi of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hssi E_IETFInterfaces_InterfaceType = 115
	// IETFInterfaces_InterfaceType_hyperchannel corresponds to the value hyperchannel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_hyperchannel E_IETFInterfaces_InterfaceType = 116
	// IETFInterfaces_InterfaceType_iana_interface_type corresponds to the value iana_interface_type of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iana_interface_type E_IETFInterfaces_InterfaceType = 117
	// IETFInterfaces_InterfaceType_ibm370parChan corresponds to the value ibm370parChan of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ibm370parChan E_IETFInterfaces_InterfaceType = 118
	// IETFInterfaces_InterfaceType_idsl corresponds to the value idsl of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_idsl E_IETFInterfaces_InterfaceType = 119
	// IETFInterfaces_InterfaceType_ieee1394 corresponds to the value ieee1394 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ieee1394 E_IETFInterfaces_InterfaceType = 120
	// IETFInterfaces_InterfaceType_ieee80211 corresponds to the value ieee80211 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ieee80211 E_IETFInterfaces_InterfaceType = 121
	// IETFInterfaces_InterfaceType_ieee80212 corresponds to the value ieee80212 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ieee80212 E_IETFInterfaces_InterfaceType = 122
	// IETFInterfaces_InterfaceType_ieee802154 corresponds to the value ieee802154 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ieee802154 E_IETFInterfaces_InterfaceType = 123
	// IETFInterfaces_InterfaceType_ieee80216WMAN corresponds to the value ieee80216WMAN of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ieee80216WMAN E_IETFInterfaces_InterfaceType = 124
	// IETFInterfaces_InterfaceType_ieee8023adLag corresponds to the value ieee8023adLag of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ieee8023adLag E_IETFInterfaces_InterfaceType = 125
	// IETFInterfaces_InterfaceType_if_gsn corresponds to the value if_gsn of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_if_gsn E_IETFInterfaces_InterfaceType = 126
	// IETFInterfaces_InterfaceType_ifPwType corresponds to the value ifPwType of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ifPwType E_IETFInterfaces_InterfaceType = 127
	// IETFInterfaces_InterfaceType_ifVfiType corresponds to the value ifVfiType of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ifVfiType E_IETFInterfaces_InterfaceType = 128
	// IETFInterfaces_InterfaceType_ilan corresponds to the value ilan of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ilan E_IETFInterfaces_InterfaceType = 129
	// IETFInterfaces_InterfaceType_imt corresponds to the value imt of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_imt E_IETFInterfaces_InterfaceType = 130
	// IETFInterfaces_InterfaceType_infiniband corresponds to the value infiniband of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_infiniband E_IETFInterfaces_InterfaceType = 131
	// IETFInterfaces_InterfaceType_interleave corresponds to the value interleave of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_interleave E_IETFInterfaces_InterfaceType = 132
	// IETFInterfaces_InterfaceType_ip corresponds to the value ip of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ip E_IETFInterfaces_InterfaceType = 133
	// IETFInterfaces_InterfaceType_ipForward corresponds to the value ipForward of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ipForward E_IETFInterfaces_InterfaceType = 134
	// IETFInterfaces_InterfaceType_ipOverAtm corresponds to the value ipOverAtm of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ipOverAtm E_IETFInterfaces_InterfaceType = 135
	// IETFInterfaces_InterfaceType_ipOverCdlc corresponds to the value ipOverCdlc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ipOverCdlc E_IETFInterfaces_InterfaceType = 136
	// IETFInterfaces_InterfaceType_ipOverClaw corresponds to the value ipOverClaw of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ipOverClaw E_IETFInterfaces_InterfaceType = 137
	// IETFInterfaces_InterfaceType_ipSwitch corresponds to the value ipSwitch of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ipSwitch E_IETFInterfaces_InterfaceType = 138
	// IETFInterfaces_InterfaceType_isdn corresponds to the value isdn of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_isdn E_IETFInterfaces_InterfaceType = 139
	// IETFInterfaces_InterfaceType_isdns corresponds to the value isdns of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_isdns E_IETFInterfaces_InterfaceType = 140
	// IETFInterfaces_InterfaceType_isdnu corresponds to the value isdnu of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_isdnu E_IETFInterfaces_InterfaceType = 141
	// IETFInterfaces_InterfaceType_iso88022llc corresponds to the value iso88022llc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iso88022llc E_IETFInterfaces_InterfaceType = 142
	// IETFInterfaces_InterfaceType_iso88023Csmacd corresponds to the value iso88023Csmacd of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iso88023Csmacd E_IETFInterfaces_InterfaceType = 143
	// IETFInterfaces_InterfaceType_iso88024TokenBus corresponds to the value iso88024TokenBus of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iso88024TokenBus E_IETFInterfaces_InterfaceType = 144
	// IETFInterfaces_InterfaceType_iso88025CRFPInt corresponds to the value iso88025CRFPInt of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iso88025CRFPInt E_IETFInterfaces_InterfaceType = 145
	// IETFInterfaces_InterfaceType_iso88025Dtr corresponds to the value iso88025Dtr of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iso88025Dtr E_IETFInterfaces_InterfaceType = 146
	// IETFInterfaces_InterfaceType_iso88025Fiber corresponds to the value iso88025Fiber of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iso88025Fiber E_IETFInterfaces_InterfaceType = 147
	// IETFInterfaces_InterfaceType_iso88025TokenRing corresponds to the value iso88025TokenRing of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iso88025TokenRing E_IETFInterfaces_InterfaceType = 148
	// IETFInterfaces_InterfaceType_iso88026Man corresponds to the value iso88026Man of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_iso88026Man E_IETFInterfaces_InterfaceType = 149
	// IETFInterfaces_InterfaceType_isup corresponds to the value isup of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_isup E_IETFInterfaces_InterfaceType = 150
	// IETFInterfaces_InterfaceType_l2vlan corresponds to the value l2vlan of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_l2vlan E_IETFInterfaces_InterfaceType = 151
	// IETFInterfaces_InterfaceType_l3ipvlan corresponds to the value l3ipvlan of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_l3ipvlan E_IETFInterfaces_InterfaceType = 152
	// IETFInterfaces_InterfaceType_l3ipxvlan corresponds to the value l3ipxvlan of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_l3ipxvlan E_IETFInterfaces_InterfaceType = 153
	// IETFInterfaces_InterfaceType_lapb corresponds to the value lapb of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_lapb E_IETFInterfaces_InterfaceType = 154
	// IETFInterfaces_InterfaceType_lapd corresponds to the value lapd of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_lapd E_IETFInterfaces_InterfaceType = 155
	// IETFInterfaces_InterfaceType_lapf corresponds to the value lapf of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_lapf E_IETFInterfaces_InterfaceType = 156
	// IETFInterfaces_InterfaceType_linegroup corresponds to the value linegroup of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_linegroup E_IETFInterfaces_InterfaceType = 157
	// IETFInterfaces_InterfaceType_lmp corresponds to the value lmp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_lmp E_IETFInterfaces_InterfaceType = 158
	// IETFInterfaces_InterfaceType_localTalk corresponds to the value localTalk of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_localTalk E_IETFInterfaces_InterfaceType = 159
	// IETFInterfaces_InterfaceType_macSecControlledIF corresponds to the value macSecControlledIF of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_macSecControlledIF E_IETFInterfaces_InterfaceType = 160
	// IETFInterfaces_InterfaceType_macSecUncontrolledIF corresponds to the value macSecUncontrolledIF of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_macSecUncontrolledIF E_IETFInterfaces_InterfaceType = 161
	// IETFInterfaces_InterfaceType_mediaMailOverIp corresponds to the value mediaMailOverIp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_mediaMailOverIp E_IETFInterfaces_InterfaceType = 162
	// IETFInterfaces_InterfaceType_mfSigLink corresponds to the value mfSigLink of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_mfSigLink E_IETFInterfaces_InterfaceType = 163
	// IETFInterfaces_InterfaceType_miox25 corresponds to the value miox25 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_miox25 E_IETFInterfaces_InterfaceType = 164
	// IETFInterfaces_InterfaceType_mocaVersion1 corresponds to the value mocaVersion1 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_mocaVersion1 E_IETFInterfaces_InterfaceType = 165
	// IETFInterfaces_InterfaceType_modem corresponds to the value modem of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_modem E_IETFInterfaces_InterfaceType = 166
	// IETFInterfaces_InterfaceType_mpc corresponds to the value mpc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_mpc E_IETFInterfaces_InterfaceType = 167
	// IETFInterfaces_InterfaceType_mpegTransport corresponds to the value mpegTransport of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_mpegTransport E_IETFInterfaces_InterfaceType = 168
	// IETFInterfaces_InterfaceType_mpls corresponds to the value mpls of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_mpls E_IETFInterfaces_InterfaceType = 169
	// IETFInterfaces_InterfaceType_mplsTunnel corresponds to the value mplsTunnel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_mplsTunnel E_IETFInterfaces_InterfaceType = 170
	// IETFInterfaces_InterfaceType_msdsl corresponds to the value msdsl of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_msdsl E_IETFInterfaces_InterfaceType = 171
	// IETFInterfaces_InterfaceType_mvl corresponds to the value mvl of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_mvl E_IETFInterfaces_InterfaceType = 172
	// IETFInterfaces_InterfaceType_myrinet corresponds to the value myrinet of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_myrinet E_IETFInterfaces_InterfaceType = 173
	// IETFInterfaces_InterfaceType_nfas corresponds to the value nfas of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_nfas E_IETFInterfaces_InterfaceType = 174
	// IETFInterfaces_InterfaceType_nsip corresponds to the value nsip of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_nsip E_IETFInterfaces_InterfaceType = 175
	// IETFInterfaces_InterfaceType_opticalChannel corresponds to the value opticalChannel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_opticalChannel E_IETFInterfaces_InterfaceType = 176
	// IETFInterfaces_InterfaceType_opticalChannelGroup corresponds to the value opticalChannelGroup of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_opticalChannelGroup E_IETFInterfaces_InterfaceType = 177
	// IETFInterfaces_InterfaceType_opticalTransport corresponds to the value opticalTransport of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_opticalTransport E_IETFInterfaces_InterfaceType = 178
	// IETFInterfaces_InterfaceType_other corresponds to the value other of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_other E_IETFInterfaces_InterfaceType = 179
	// IETFInterfaces_InterfaceType_otnOdu corresponds to the value otnOdu of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_otnOdu E_IETFInterfaces_InterfaceType = 180
	// IETFInterfaces_InterfaceType_otnOtu corresponds to the value otnOtu of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_otnOtu E_IETFInterfaces_InterfaceType = 181
	// IETFInterfaces_InterfaceType_para corresponds to the value para of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_para E_IETFInterfaces_InterfaceType = 182
	// IETFInterfaces_InterfaceType_pdnEtherLoop1 corresponds to the value pdnEtherLoop1 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_pdnEtherLoop1 E_IETFInterfaces_InterfaceType = 183
	// IETFInterfaces_InterfaceType_pdnEtherLoop2 corresponds to the value pdnEtherLoop2 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_pdnEtherLoop2 E_IETFInterfaces_InterfaceType = 184
	// IETFInterfaces_InterfaceType_pip corresponds to the value pip of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_pip E_IETFInterfaces_InterfaceType = 185
	// IETFInterfaces_InterfaceType_plc corresponds to the value plc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_plc E_IETFInterfaces_InterfaceType = 186
	// IETFInterfaces_InterfaceType_pon155 corresponds to the value pon155 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_pon155 E_IETFInterfaces_InterfaceType = 187
	// IETFInterfaces_InterfaceType_pon622 corresponds to the value pon622 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_pon622 E_IETFInterfaces_InterfaceType = 188
	// IETFInterfaces_InterfaceType_pos corresponds to the value pos of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_pos E_IETFInterfaces_InterfaceType = 189
	// IETFInterfaces_InterfaceType_ppp corresponds to the value ppp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ppp E_IETFInterfaces_InterfaceType = 190
	// IETFInterfaces_InterfaceType_pppMultilinkBundle corresponds to the value pppMultilinkBundle of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_pppMultilinkBundle E_IETFInterfaces_InterfaceType = 191
	// IETFInterfaces_InterfaceType_primaryISDN corresponds to the value primaryISDN of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_primaryISDN E_IETFInterfaces_InterfaceType = 192
	// IETFInterfaces_InterfaceType_propAtm corresponds to the value propAtm of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propAtm E_IETFInterfaces_InterfaceType = 193
	// IETFInterfaces_InterfaceType_propBWAp2Mp corresponds to the value propBWAp2Mp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propBWAp2Mp E_IETFInterfaces_InterfaceType = 194
	// IETFInterfaces_InterfaceType_propCnls corresponds to the value propCnls of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propCnls E_IETFInterfaces_InterfaceType = 195
	// IETFInterfaces_InterfaceType_propDocsWirelessDownstream corresponds to the value propDocsWirelessDownstream of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propDocsWirelessDownstream E_IETFInterfaces_InterfaceType = 196
	// IETFInterfaces_InterfaceType_propDocsWirelessMaclayer corresponds to the value propDocsWirelessMaclayer of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propDocsWirelessMaclayer E_IETFInterfaces_InterfaceType = 197
	// IETFInterfaces_InterfaceType_propDocsWirelessUpstream corresponds to the value propDocsWirelessUpstream of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propDocsWirelessUpstream E_IETFInterfaces_InterfaceType = 198
	// IETFInterfaces_InterfaceType_propMultiplexor corresponds to the value propMultiplexor of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propMultiplexor E_IETFInterfaces_InterfaceType = 199
	// IETFInterfaces_InterfaceType_propPointToPointSerial corresponds to the value propPointToPointSerial of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propPointToPointSerial E_IETFInterfaces_InterfaceType = 200
	// IETFInterfaces_InterfaceType_propVirtual corresponds to the value propVirtual of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propVirtual E_IETFInterfaces_InterfaceType = 201
	// IETFInterfaces_InterfaceType_propWirelessP2P corresponds to the value propWirelessP2P of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_propWirelessP2P E_IETFInterfaces_InterfaceType = 202
	// IETFInterfaces_InterfaceType_proteon10Mbit corresponds to the value proteon10Mbit of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_proteon10Mbit E_IETFInterfaces_InterfaceType = 203
	// IETFInterfaces_InterfaceType_proteon80Mbit corresponds to the value proteon80Mbit of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_proteon80Mbit E_IETFInterfaces_InterfaceType = 204
	// IETFInterfaces_InterfaceType_q2931 corresponds to the value q2931 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_q2931 E_IETFInterfaces_InterfaceType = 205
	// IETFInterfaces_InterfaceType_qam corresponds to the value qam of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_qam E_IETFInterfaces_InterfaceType = 206
	// IETFInterfaces_InterfaceType_qllc corresponds to the value qllc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_qllc E_IETFInterfaces_InterfaceType = 207
	// IETFInterfaces_InterfaceType_radioMAC corresponds to the value radioMAC of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_radioMAC E_IETFInterfaces_InterfaceType = 208
	// IETFInterfaces_InterfaceType_radsl corresponds to the value radsl of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_radsl E_IETFInterfaces_InterfaceType = 209
	// IETFInterfaces_InterfaceType_reachDSL corresponds to the value reachDSL of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_reachDSL E_IETFInterfaces_InterfaceType = 210
	// IETFInterfaces_InterfaceType_regular1822 corresponds to the value regular1822 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_regular1822 E_IETFInterfaces_InterfaceType = 211
	// IETFInterfaces_InterfaceType_rfc1483 corresponds to the value rfc1483 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_rfc1483 E_IETFInterfaces_InterfaceType = 212
	// IETFInterfaces_InterfaceType_rfc877x25 corresponds to the value rfc877x25 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_rfc877x25 E_IETFInterfaces_InterfaceType = 213
	// IETFInterfaces_InterfaceType_rpr corresponds to the value rpr of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_rpr E_IETFInterfaces_InterfaceType = 214
	// IETFInterfaces_InterfaceType_rs232 corresponds to the value rs232 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_rs232 E_IETFInterfaces_InterfaceType = 215
	// IETFInterfaces_InterfaceType_rsrb corresponds to the value rsrb of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_rsrb E_IETFInterfaces_InterfaceType = 216
	// IETFInterfaces_InterfaceType_sdlc corresponds to the value sdlc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sdlc E_IETFInterfaces_InterfaceType = 217
	// IETFInterfaces_InterfaceType_sdsl corresponds to the value sdsl of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sdsl E_IETFInterfaces_InterfaceType = 218
	// IETFInterfaces_InterfaceType_shdsl corresponds to the value shdsl of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_shdsl E_IETFInterfaces_InterfaceType = 219
	// IETFInterfaces_InterfaceType_sip corresponds to the value sip of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sip E_IETFInterfaces_InterfaceType = 220
	// IETFInterfaces_InterfaceType_sipSig corresponds to the value sipSig of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sipSig E_IETFInterfaces_InterfaceType = 221
	// IETFInterfaces_InterfaceType_sipTg corresponds to the value sipTg of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sipTg E_IETFInterfaces_InterfaceType = 222
	// IETFInterfaces_InterfaceType_sixToFour corresponds to the value sixToFour of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sixToFour E_IETFInterfaces_InterfaceType = 223
	// IETFInterfaces_InterfaceType_slip corresponds to the value slip of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_slip E_IETFInterfaces_InterfaceType = 224
	// IETFInterfaces_InterfaceType_smdsDxi corresponds to the value smdsDxi of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_smdsDxi E_IETFInterfaces_InterfaceType = 225
	// IETFInterfaces_InterfaceType_smdsIcip corresponds to the value smdsIcip of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_smdsIcip E_IETFInterfaces_InterfaceType = 226
	// IETFInterfaces_InterfaceType_softwareLoopback corresponds to the value softwareLoopback of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_softwareLoopback E_IETFInterfaces_InterfaceType = 227
	// IETFInterfaces_InterfaceType_sonet corresponds to the value sonet of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sonet E_IETFInterfaces_InterfaceType = 228
	// IETFInterfaces_InterfaceType_sonetOverheadChannel corresponds to the value sonetOverheadChannel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sonetOverheadChannel E_IETFInterfaces_InterfaceType = 229
	// IETFInterfaces_InterfaceType_sonetPath corresponds to the value sonetPath of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sonetPath E_IETFInterfaces_InterfaceType = 230
	// IETFInterfaces_InterfaceType_sonetVT corresponds to the value sonetVT of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_sonetVT E_IETFInterfaces_InterfaceType = 231
	// IETFInterfaces_InterfaceType_srp corresponds to the value srp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_srp E_IETFInterfaces_InterfaceType = 232
	// IETFInterfaces_InterfaceType_ss7SigLink corresponds to the value ss7SigLink of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ss7SigLink E_IETFInterfaces_InterfaceType = 233
	// IETFInterfaces_InterfaceType_stackToStack corresponds to the value stackToStack of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_stackToStack E_IETFInterfaces_InterfaceType = 234
	// IETFInterfaces_InterfaceType_starLan corresponds to the value starLan of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_starLan E_IETFInterfaces_InterfaceType = 235
	// IETFInterfaces_InterfaceType_tdlc corresponds to the value tdlc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_tdlc E_IETFInterfaces_InterfaceType = 236
	// IETFInterfaces_InterfaceType_teLink corresponds to the value teLink of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_teLink E_IETFInterfaces_InterfaceType = 237
	// IETFInterfaces_InterfaceType_termPad corresponds to the value termPad of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_termPad E_IETFInterfaces_InterfaceType = 238
	// IETFInterfaces_InterfaceType_tr008 corresponds to the value tr008 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_tr008 E_IETFInterfaces_InterfaceType = 239
	// IETFInterfaces_InterfaceType_transpHdlc corresponds to the value transpHdlc of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_transpHdlc E_IETFInterfaces_InterfaceType = 240
	// IETFInterfaces_InterfaceType_tunnel corresponds to the value tunnel of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_tunnel E_IETFInterfaces_InterfaceType = 241
	// IETFInterfaces_InterfaceType_ultra corresponds to the value ultra of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_ultra E_IETFInterfaces_InterfaceType = 242
	// IETFInterfaces_InterfaceType_usb corresponds to the value usb of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_usb E_IETFInterfaces_InterfaceType = 243
	// IETFInterfaces_InterfaceType_v11 corresponds to the value v11 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_v11 E_IETFInterfaces_InterfaceType = 244
	// IETFInterfaces_InterfaceType_v35 corresponds to the value v35 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_v35 E_IETFInterfaces_InterfaceType = 245
	// IETFInterfaces_InterfaceType_v36 corresponds to the value v36 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_v36 E_IETFInterfaces_InterfaceType = 246
	// IETFInterfaces_InterfaceType_v37 corresponds to the value v37 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_v37 E_IETFInterfaces_InterfaceType = 247
	// IETFInterfaces_InterfaceType_vdsl corresponds to the value vdsl of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_vdsl E_IETFInterfaces_InterfaceType = 248
	// IETFInterfaces_InterfaceType_vdsl2 corresponds to the value vdsl2 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_vdsl2 E_IETFInterfaces_InterfaceType = 249
	// IETFInterfaces_InterfaceType_virtualIpAddress corresponds to the value virtualIpAddress of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_virtualIpAddress E_IETFInterfaces_InterfaceType = 250
	// IETFInterfaces_InterfaceType_virtualTg corresponds to the value virtualTg of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_virtualTg E_IETFInterfaces_InterfaceType = 251
	// IETFInterfaces_InterfaceType_vmwareNicTeam corresponds to the value vmwareNicTeam of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_vmwareNicTeam E_IETFInterfaces_InterfaceType = 252
	// IETFInterfaces_InterfaceType_vmwareVirtualNic corresponds to the value vmwareVirtualNic of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_vmwareVirtualNic E_IETFInterfaces_InterfaceType = 253
	// IETFInterfaces_InterfaceType_voiceDID corresponds to the value voiceDID of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceDID E_IETFInterfaces_InterfaceType = 254
	// IETFInterfaces_InterfaceType_voiceEBS corresponds to the value voiceEBS of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceEBS E_IETFInterfaces_InterfaceType = 255
	// IETFInterfaces_InterfaceType_voiceEM corresponds to the value voiceEM of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceEM E_IETFInterfaces_InterfaceType = 256
	// IETFInterfaces_InterfaceType_voiceEMFGD corresponds to the value voiceEMFGD of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceEMFGD E_IETFInterfaces_InterfaceType = 257
	// IETFInterfaces_InterfaceType_voiceEncap corresponds to the value voiceEncap of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceEncap E_IETFInterfaces_InterfaceType = 258
	// IETFInterfaces_InterfaceType_voiceFGDEANA corresponds to the value voiceFGDEANA of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceFGDEANA E_IETFInterfaces_InterfaceType = 259
	// IETFInterfaces_InterfaceType_voiceFGDOS corresponds to the value voiceFGDOS of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceFGDOS E_IETFInterfaces_InterfaceType = 260
	// IETFInterfaces_InterfaceType_voiceFXO corresponds to the value voiceFXO of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceFXO E_IETFInterfaces_InterfaceType = 261
	// IETFInterfaces_InterfaceType_voiceFXS corresponds to the value voiceFXS of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceFXS E_IETFInterfaces_InterfaceType = 262
	// IETFInterfaces_InterfaceType_voiceOverAtm corresponds to the value voiceOverAtm of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceOverAtm E_IETFInterfaces_InterfaceType = 263
	// IETFInterfaces_InterfaceType_voiceOverCable corresponds to the value voiceOverCable of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceOverCable E_IETFInterfaces_InterfaceType = 264
	// IETFInterfaces_InterfaceType_voiceOverFrameRelay corresponds to the value voiceOverFrameRelay of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceOverFrameRelay E_IETFInterfaces_InterfaceType = 265
	// IETFInterfaces_InterfaceType_voiceOverIp corresponds to the value voiceOverIp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_voiceOverIp E_IETFInterfaces_InterfaceType = 266
	// IETFInterfaces_InterfaceType_wwanPP corresponds to the value wwanPP of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_wwanPP E_IETFInterfaces_InterfaceType = 267
	// IETFInterfaces_InterfaceType_wwanPP2 corresponds to the value wwanPP2 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_wwanPP2 E_IETFInterfaces_InterfaceType = 268
	// IETFInterfaces_InterfaceType_x213 corresponds to the value x213 of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_x213 E_IETFInterfaces_InterfaceType = 269
	// IETFInterfaces_InterfaceType_x25huntGroup corresponds to the value x25huntGroup of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_x25huntGroup E_IETFInterfaces_InterfaceType = 270
	// IETFInterfaces_InterfaceType_x25mlp corresponds to the value x25mlp of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_x25mlp E_IETFInterfaces_InterfaceType = 271
	// IETFInterfaces_InterfaceType_x25ple corresponds to the value x25ple of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_x25ple E_IETFInterfaces_InterfaceType = 272
	// IETFInterfaces_InterfaceType_x86Laps corresponds to the value x86Laps of IETFInterfaces_InterfaceType
	IETFInterfaces_InterfaceType_x86Laps E_IETFInterfaces_InterfaceType = 273
)

// E_OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE. An additional value named
// OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE int64

// IsYANGGoEnum ensures that OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE.
func (E_OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE_UNSET corresponds to the value UNSET of OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE
	OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE_UNSET E_OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE = 0
	// OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE_AAA_ACCOUNTING_EVENT_COMMAND corresponds to the value AAA_ACCOUNTING_EVENT_COMMAND of OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE
	OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE_AAA_ACCOUNTING_EVENT_COMMAND E_OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE = 1
	// OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE_AAA_ACCOUNTING_EVENT_LOGIN corresponds to the value AAA_ACCOUNTING_EVENT_LOGIN of OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE
	OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE_AAA_ACCOUNTING_EVENT_LOGIN E_OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE = 2
	// OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE_AAA_AUTHORIZATION_EVENT_COMMAND corresponds to the value AAA_AUTHORIZATION_EVENT_COMMAND of OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE
	OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE_AAA_AUTHORIZATION_EVENT_COMMAND E_OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE = 3
	// OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE_AAA_AUTHORIZATION_EVENT_CONFIG corresponds to the value AAA_AUTHORIZATION_EVENT_CONFIG of OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE
	OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE_AAA_AUTHORIZATION_EVENT_CONFIG E_OpenconfigAaaTypes_AAA_ACCOUNTING_EVENT_TYPE = 4
)

// E_OpenconfigAaaTypes_AAA_AUTHORIZATION_EVENT_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigAaaTypes_AAA_AUTHORIZATION_EVENT_TYPE. An additional value named
// OpenconfigAaaTypes_AAA_AUTHORIZATION_EVENT_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigAaaTypes_AAA_AUTHORIZATION_EVENT_TYPE int64

// IsYANGGoEnum ensures that OpenconfigAaaTypes_AAA_AUTHORIZATION_EVENT_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigAaaTypes_AAA_AUTHORIZATION_EVENT_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigAaaTypes_AAA_AUTHORIZATION_EVENT_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigAaaTypes_AAA_AUTHORIZATION_EVENT_TYPE.
func (E_OpenconfigAaaTypes_AAA_AUTHORIZATION_EVENT_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigAaaTypes_AAA_AUTHORIZATION_EVENT_TYPE_UNSET corresponds to the value UNSET of OpenconfigAaaTypes_AAA_AUTHORIZATION_EVENT_TYPE
	OpenconfigAaaTypes_AAA_AUTHORIZATION_EVENT_TYPE_UNSET E_OpenconfigAaaTypes_AAA_AUTHORIZATION_EVENT_TYPE = 0
)

// E_OpenconfigAaaTypes_AAA_METHOD_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigAaaTypes_AAA_METHOD_TYPE. An additional value named
// OpenconfigAaaTypes_AAA_METHOD_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigAaaTypes_AAA_METHOD_TYPE int64

// IsYANGGoEnum ensures that OpenconfigAaaTypes_AAA_METHOD_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigAaaTypes_AAA_METHOD_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigAaaTypes_AAA_METHOD_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigAaaTypes_AAA_METHOD_TYPE.
func (E_OpenconfigAaaTypes_AAA_METHOD_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigAaaTypes_AAA_METHOD_TYPE_UNSET corresponds to the value UNSET of OpenconfigAaaTypes_AAA_METHOD_TYPE
	OpenconfigAaaTypes_AAA_METHOD_TYPE_UNSET E_OpenconfigAaaTypes_AAA_METHOD_TYPE = 0
	// OpenconfigAaaTypes_AAA_METHOD_TYPE_LOCAL corresponds to the value LOCAL of OpenconfigAaaTypes_AAA_METHOD_TYPE
	OpenconfigAaaTypes_AAA_METHOD_TYPE_LOCAL E_OpenconfigAaaTypes_AAA_METHOD_TYPE = 1
	// OpenconfigAaaTypes_AAA_METHOD_TYPE_RADIUS_ALL corresponds to the value RADIUS_ALL of OpenconfigAaaTypes_AAA_METHOD_TYPE
	OpenconfigAaaTypes_AAA_METHOD_TYPE_RADIUS_ALL E_OpenconfigAaaTypes_AAA_METHOD_TYPE = 2
	// OpenconfigAaaTypes_AAA_METHOD_TYPE_TACACS_ALL corresponds to the value TACACS_ALL of OpenconfigAaaTypes_AAA_METHOD_TYPE
	OpenconfigAaaTypes_AAA_METHOD_TYPE_TACACS_ALL E_OpenconfigAaaTypes_AAA_METHOD_TYPE = 3
)

// E_OpenconfigAaaTypes_AAA_SERVER_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigAaaTypes_AAA_SERVER_TYPE. An additional value named
// OpenconfigAaaTypes_AAA_SERVER_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigAaaTypes_AAA_SERVER_TYPE int64

// IsYANGGoEnum ensures that OpenconfigAaaTypes_AAA_SERVER_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigAaaTypes_AAA_SERVER_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigAaaTypes_AAA_SERVER_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigAaaTypes_AAA_SERVER_TYPE.
func (E_OpenconfigAaaTypes_AAA_SERVER_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigAaaTypes_AAA_SERVER_TYPE_UNSET corresponds to the value UNSET of OpenconfigAaaTypes_AAA_SERVER_TYPE
	OpenconfigAaaTypes_AAA_SERVER_TYPE_UNSET E_OpenconfigAaaTypes_AAA_SERVER_TYPE = 0
	// OpenconfigAaaTypes_AAA_SERVER_TYPE_RADIUS corresponds to the value RADIUS of OpenconfigAaaTypes_AAA_SERVER_TYPE
	OpenconfigAaaTypes_AAA_SERVER_TYPE_RADIUS E_OpenconfigAaaTypes_AAA_SERVER_TYPE = 1
	// OpenconfigAaaTypes_AAA_SERVER_TYPE_TACACS corresponds to the value TACACS of OpenconfigAaaTypes_AAA_SERVER_TYPE
	OpenconfigAaaTypes_AAA_SERVER_TYPE_TACACS E_OpenconfigAaaTypes_AAA_SERVER_TYPE = 2
)

// E_OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES is a derived int64 type which is used to represent
// the enumerated node OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES. An additional value named
// OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES int64

// IsYANGGoEnum ensures that OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES implements the yang.GoEnum
// interface. This ensures that OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES.
func (E_OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES_UNSET corresponds to the value UNSET of OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES
	OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES_UNSET E_OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES = 0
	// OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES_SYSTEM_ROLE_ADMIN corresponds to the value SYSTEM_ROLE_ADMIN of OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES
	OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES_SYSTEM_ROLE_ADMIN E_OpenconfigAaaTypes_SYSTEM_DEFINED_ROLES = 1
)

// E_OpenconfigAaa_Event_Record is a derived int64 type which is used to represent
// the enumerated node OpenconfigAaa_Event_Record. An additional value named
// OpenconfigAaa_Event_Record_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigAaa_Event_Record int64

// IsYANGGoEnum ensures that OpenconfigAaa_Event_Record implements the yang.GoEnum
// interface. This ensures that OpenconfigAaa_Event_Record can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigAaa_Event_Record) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigAaa_Event_Record.
func (E_OpenconfigAaa_Event_Record) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigAaa_Event_Record_UNSET corresponds to the value UNSET of OpenconfigAaa_Event_Record
	OpenconfigAaa_Event_Record_UNSET E_OpenconfigAaa_Event_Record = 0
	// OpenconfigAaa_Event_Record_START_STOP corresponds to the value START_STOP of OpenconfigAaa_Event_Record
	OpenconfigAaa_Event_Record_START_STOP E_OpenconfigAaa_Event_Record = 1
	// OpenconfigAaa_Event_Record_STOP corresponds to the value STOP of OpenconfigAaa_Event_Record
	OpenconfigAaa_Event_Record_STOP E_OpenconfigAaa_Event_Record = 2
)

// E_OpenconfigAft_EncapsulationHeaderType is a derived int64 type which is used to represent
// the enumerated node OpenconfigAft_EncapsulationHeaderType. An additional value named
// OpenconfigAft_EncapsulationHeaderType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigAft_EncapsulationHeaderType int64

// IsYANGGoEnum ensures that OpenconfigAft_EncapsulationHeaderType implements the yang.GoEnum
// interface. This ensures that OpenconfigAft_EncapsulationHeaderType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigAft_EncapsulationHeaderType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigAft_EncapsulationHeaderType.
func (E_OpenconfigAft_EncapsulationHeaderType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigAft_EncapsulationHeaderType_UNSET corresponds to the value UNSET of OpenconfigAft_EncapsulationHeaderType
	OpenconfigAft_EncapsulationHeaderType_UNSET E_OpenconfigAft_EncapsulationHeaderType = 0
	// OpenconfigAft_EncapsulationHeaderType_GRE corresponds to the value GRE of OpenconfigAft_EncapsulationHeaderType
	OpenconfigAft_EncapsulationHeaderType_GRE E_OpenconfigAft_EncapsulationHeaderType = 1
	// OpenconfigAft_EncapsulationHeaderType_IPV4 corresponds to the value IPV4 of OpenconfigAft_EncapsulationHeaderType
	OpenconfigAft_EncapsulationHeaderType_IPV4 E_OpenconfigAft_EncapsulationHeaderType = 2
	// OpenconfigAft_EncapsulationHeaderType_IPV6 corresponds to the value IPV6 of OpenconfigAft_EncapsulationHeaderType
	OpenconfigAft_EncapsulationHeaderType_IPV6 E_OpenconfigAft_EncapsulationHeaderType = 3
	// OpenconfigAft_EncapsulationHeaderType_MPLS corresponds to the value MPLS of OpenconfigAft_EncapsulationHeaderType
	OpenconfigAft_EncapsulationHeaderType_MPLS E_OpenconfigAft_EncapsulationHeaderType = 4
)

// E_OpenconfigAft_LabelEntry_Label is a derived int64 type which is used to represent
// the enumerated node OpenconfigAft_LabelEntry_Label. An additional value named
// OpenconfigAft_LabelEntry_Label_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigAft_LabelEntry_Label int64

// IsYANGGoEnum ensures that OpenconfigAft_LabelEntry_Label implements the yang.GoEnum
// interface. This ensures that OpenconfigAft_LabelEntry_Label can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigAft_LabelEntry_Label) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigAft_LabelEntry_Label.
func (E_OpenconfigAft_LabelEntry_Label) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigAft_LabelEntry_Label_UNSET corresponds to the value UNSET of OpenconfigAft_LabelEntry_Label
	OpenconfigAft_LabelEntry_Label_UNSET E_OpenconfigAft_LabelEntry_Label = 0
	// OpenconfigAft_LabelEntry_Label_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of OpenconfigAft_LabelEntry_Label
	OpenconfigAft_LabelEntry_Label_IPV4_EXPLICIT_NULL E_OpenconfigAft_LabelEntry_Label = 1
	// OpenconfigAft_LabelEntry_Label_ROUTER_ALERT corresponds to the value ROUTER_ALERT of OpenconfigAft_LabelEntry_Label
	OpenconfigAft_LabelEntry_Label_ROUTER_ALERT E_OpenconfigAft_LabelEntry_Label = 2
	// OpenconfigAft_LabelEntry_Label_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of OpenconfigAft_LabelEntry_Label
	OpenconfigAft_LabelEntry_Label_IPV6_EXPLICIT_NULL E_OpenconfigAft_LabelEntry_Label = 3
	// OpenconfigAft_LabelEntry_Label_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of OpenconfigAft_LabelEntry_Label
	OpenconfigAft_LabelEntry_Label_IMPLICIT_NULL E_OpenconfigAft_LabelEntry_Label = 4
	// OpenconfigAft_LabelEntry_Label_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of OpenconfigAft_LabelEntry_Label
	OpenconfigAft_LabelEntry_Label_ENTROPY_LABEL_INDICATOR E_OpenconfigAft_LabelEntry_Label = 8
	// OpenconfigAft_LabelEntry_Label_NO_LABEL corresponds to the value NO_LABEL of OpenconfigAft_LabelEntry_Label
	OpenconfigAft_LabelEntry_Label_NO_LABEL E_OpenconfigAft_LabelEntry_Label = 9
)

// E_OpenconfigAft_NextHop_PoppedMplsLabelStack is a derived int64 type which is used to represent
// the enumerated node OpenconfigAft_NextHop_PoppedMplsLabelStack. An additional value named
// OpenconfigAft_NextHop_PoppedMplsLabelStack_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigAft_NextHop_PoppedMplsLabelStack int64

// IsYANGGoEnum ensures that OpenconfigAft_NextHop_PoppedMplsLabelStack implements the yang.GoEnum
// interface. This ensures that OpenconfigAft_NextHop_PoppedMplsLabelStack can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigAft_NextHop_PoppedMplsLabelStack) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigAft_NextHop_PoppedMplsLabelStack.
func (E_OpenconfigAft_NextHop_PoppedMplsLabelStack) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigAft_NextHop_PoppedMplsLabelStack_UNSET corresponds to the value UNSET of OpenconfigAft_NextHop_PoppedMplsLabelStack
	OpenconfigAft_NextHop_PoppedMplsLabelStack_UNSET E_OpenconfigAft_NextHop_PoppedMplsLabelStack = 0
	// OpenconfigAft_NextHop_PoppedMplsLabelStack_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of OpenconfigAft_NextHop_PoppedMplsLabelStack
	OpenconfigAft_NextHop_PoppedMplsLabelStack_IPV4_EXPLICIT_NULL E_OpenconfigAft_NextHop_PoppedMplsLabelStack = 1
	// OpenconfigAft_NextHop_PoppedMplsLabelStack_ROUTER_ALERT corresponds to the value ROUTER_ALERT of OpenconfigAft_NextHop_PoppedMplsLabelStack
	OpenconfigAft_NextHop_PoppedMplsLabelStack_ROUTER_ALERT E_OpenconfigAft_NextHop_PoppedMplsLabelStack = 2
	// OpenconfigAft_NextHop_PoppedMplsLabelStack_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of OpenconfigAft_NextHop_PoppedMplsLabelStack
	OpenconfigAft_NextHop_PoppedMplsLabelStack_IPV6_EXPLICIT_NULL E_OpenconfigAft_NextHop_PoppedMplsLabelStack = 3
	// OpenconfigAft_NextHop_PoppedMplsLabelStack_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of OpenconfigAft_NextHop_PoppedMplsLabelStack
	OpenconfigAft_NextHop_PoppedMplsLabelStack_IMPLICIT_NULL E_OpenconfigAft_NextHop_PoppedMplsLabelStack = 4
	// OpenconfigAft_NextHop_PoppedMplsLabelStack_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of OpenconfigAft_NextHop_PoppedMplsLabelStack
	OpenconfigAft_NextHop_PoppedMplsLabelStack_ENTROPY_LABEL_INDICATOR E_OpenconfigAft_NextHop_PoppedMplsLabelStack = 8
	// OpenconfigAft_NextHop_PoppedMplsLabelStack_NO_LABEL corresponds to the value NO_LABEL of OpenconfigAft_NextHop_PoppedMplsLabelStack
	OpenconfigAft_NextHop_PoppedMplsLabelStack_NO_LABEL E_OpenconfigAft_NextHop_PoppedMplsLabelStack = 9
)

// E_OpenconfigAft_NextHop_PushedMplsLabelStack is a derived int64 type which is used to represent
// the enumerated node OpenconfigAft_NextHop_PushedMplsLabelStack. An additional value named
// OpenconfigAft_NextHop_PushedMplsLabelStack_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigAft_NextHop_PushedMplsLabelStack int64

// IsYANGGoEnum ensures that OpenconfigAft_NextHop_PushedMplsLabelStack implements the yang.GoEnum
// interface. This ensures that OpenconfigAft_NextHop_PushedMplsLabelStack can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigAft_NextHop_PushedMplsLabelStack) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigAft_NextHop_PushedMplsLabelStack.
func (E_OpenconfigAft_NextHop_PushedMplsLabelStack) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigAft_NextHop_PushedMplsLabelStack_UNSET corresponds to the value UNSET of OpenconfigAft_NextHop_PushedMplsLabelStack
	OpenconfigAft_NextHop_PushedMplsLabelStack_UNSET E_OpenconfigAft_NextHop_PushedMplsLabelStack = 0
	// OpenconfigAft_NextHop_PushedMplsLabelStack_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of OpenconfigAft_NextHop_PushedMplsLabelStack
	OpenconfigAft_NextHop_PushedMplsLabelStack_IPV4_EXPLICIT_NULL E_OpenconfigAft_NextHop_PushedMplsLabelStack = 1
	// OpenconfigAft_NextHop_PushedMplsLabelStack_ROUTER_ALERT corresponds to the value ROUTER_ALERT of OpenconfigAft_NextHop_PushedMplsLabelStack
	OpenconfigAft_NextHop_PushedMplsLabelStack_ROUTER_ALERT E_OpenconfigAft_NextHop_PushedMplsLabelStack = 2
	// OpenconfigAft_NextHop_PushedMplsLabelStack_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of OpenconfigAft_NextHop_PushedMplsLabelStack
	OpenconfigAft_NextHop_PushedMplsLabelStack_IPV6_EXPLICIT_NULL E_OpenconfigAft_NextHop_PushedMplsLabelStack = 3
	// OpenconfigAft_NextHop_PushedMplsLabelStack_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of OpenconfigAft_NextHop_PushedMplsLabelStack
	OpenconfigAft_NextHop_PushedMplsLabelStack_IMPLICIT_NULL E_OpenconfigAft_NextHop_PushedMplsLabelStack = 4
	// OpenconfigAft_NextHop_PushedMplsLabelStack_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of OpenconfigAft_NextHop_PushedMplsLabelStack
	OpenconfigAft_NextHop_PushedMplsLabelStack_ENTROPY_LABEL_INDICATOR E_OpenconfigAft_NextHop_PushedMplsLabelStack = 8
	// OpenconfigAft_NextHop_PushedMplsLabelStack_NO_LABEL corresponds to the value NO_LABEL of OpenconfigAft_NextHop_PushedMplsLabelStack
	OpenconfigAft_NextHop_PushedMplsLabelStack_NO_LABEL E_OpenconfigAft_NextHop_PushedMplsLabelStack = 9
)

// E_OpenconfigAft_PolicyForwardingEntry_MplsLabel is a derived int64 type which is used to represent
// the enumerated node OpenconfigAft_PolicyForwardingEntry_MplsLabel. An additional value named
// OpenconfigAft_PolicyForwardingEntry_MplsLabel_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigAft_PolicyForwardingEntry_MplsLabel int64

// IsYANGGoEnum ensures that OpenconfigAft_PolicyForwardingEntry_MplsLabel implements the yang.GoEnum
// interface. This ensures that OpenconfigAft_PolicyForwardingEntry_MplsLabel can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigAft_PolicyForwardingEntry_MplsLabel) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigAft_PolicyForwardingEntry_MplsLabel.
func (E_OpenconfigAft_PolicyForwardingEntry_MplsLabel) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigAft_PolicyForwardingEntry_MplsLabel_UNSET corresponds to the value UNSET of OpenconfigAft_PolicyForwardingEntry_MplsLabel
	OpenconfigAft_PolicyForwardingEntry_MplsLabel_UNSET E_OpenconfigAft_PolicyForwardingEntry_MplsLabel = 0
	// OpenconfigAft_PolicyForwardingEntry_MplsLabel_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of OpenconfigAft_PolicyForwardingEntry_MplsLabel
	OpenconfigAft_PolicyForwardingEntry_MplsLabel_IPV4_EXPLICIT_NULL E_OpenconfigAft_PolicyForwardingEntry_MplsLabel = 1
	// OpenconfigAft_PolicyForwardingEntry_MplsLabel_ROUTER_ALERT corresponds to the value ROUTER_ALERT of OpenconfigAft_PolicyForwardingEntry_MplsLabel
	OpenconfigAft_PolicyForwardingEntry_MplsLabel_ROUTER_ALERT E_OpenconfigAft_PolicyForwardingEntry_MplsLabel = 2
	// OpenconfigAft_PolicyForwardingEntry_MplsLabel_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of OpenconfigAft_PolicyForwardingEntry_MplsLabel
	OpenconfigAft_PolicyForwardingEntry_MplsLabel_IPV6_EXPLICIT_NULL E_OpenconfigAft_PolicyForwardingEntry_MplsLabel = 3
	// OpenconfigAft_PolicyForwardingEntry_MplsLabel_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of OpenconfigAft_PolicyForwardingEntry_MplsLabel
	OpenconfigAft_PolicyForwardingEntry_MplsLabel_IMPLICIT_NULL E_OpenconfigAft_PolicyForwardingEntry_MplsLabel = 4
	// OpenconfigAft_PolicyForwardingEntry_MplsLabel_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of OpenconfigAft_PolicyForwardingEntry_MplsLabel
	OpenconfigAft_PolicyForwardingEntry_MplsLabel_ENTROPY_LABEL_INDICATOR E_OpenconfigAft_PolicyForwardingEntry_MplsLabel = 8
	// OpenconfigAft_PolicyForwardingEntry_MplsLabel_NO_LABEL corresponds to the value NO_LABEL of OpenconfigAft_PolicyForwardingEntry_MplsLabel
	OpenconfigAft_PolicyForwardingEntry_MplsLabel_NO_LABEL E_OpenconfigAft_PolicyForwardingEntry_MplsLabel = 9
)

// E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY is a derived int64 type which is used to represent
// the enumerated node OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY. An additional value named
// OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY int64

// IsYANGGoEnum ensures that OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY implements the yang.GoEnum
// interface. This ensures that OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY.
func (E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY_UNSET corresponds to the value UNSET of OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY
	OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY_UNSET E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY = 0
	// OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY_CRITICAL corresponds to the value CRITICAL of OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY
	OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY_CRITICAL E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY = 1
	// OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY_MAJOR corresponds to the value MAJOR of OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY
	OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY_MAJOR E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY = 2
	// OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY_MINOR corresponds to the value MINOR of OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY
	OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY_MINOR E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY = 3
	// OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY_UNKNOWN corresponds to the value UNKNOWN of OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY
	OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY_UNKNOWN E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY = 4
	// OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY_WARNING corresponds to the value WARNING of OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY
	OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY_WARNING E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_SEVERITY = 5
)

// E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID is a derived int64 type which is used to represent
// the enumerated node OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID. An additional value named
// OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID int64

// IsYANGGoEnum ensures that OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID implements the yang.GoEnum
// interface. This ensures that OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID.
func (E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID_UNSET corresponds to the value UNSET of OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID
	OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID_UNSET E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID = 0
	// OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID_AIS corresponds to the value AIS of OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID
	OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID_AIS E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID = 1
	// OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID_EQPT corresponds to the value EQPT of OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID
	OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID_EQPT E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID = 2
	// OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID_LOS corresponds to the value LOS of OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID
	OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID_LOS E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID = 3
	// OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID_OTS corresponds to the value OTS of OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID
	OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID_OTS E_OpenconfigAlarmTypes_OPENCONFIG_ALARM_TYPE_ID = 4
)

// E_OpenconfigBgpTypes_AFI_SAFI_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigBgpTypes_AFI_SAFI_TYPE. An additional value named
// OpenconfigBgpTypes_AFI_SAFI_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigBgpTypes_AFI_SAFI_TYPE int64

// IsYANGGoEnum ensures that OpenconfigBgpTypes_AFI_SAFI_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigBgpTypes_AFI_SAFI_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigBgpTypes_AFI_SAFI_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigBgpTypes_AFI_SAFI_TYPE.
func (E_OpenconfigBgpTypes_AFI_SAFI_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigBgpTypes_AFI_SAFI_TYPE_UNSET corresponds to the value UNSET of OpenconfigBgpTypes_AFI_SAFI_TYPE
	OpenconfigBgpTypes_AFI_SAFI_TYPE_UNSET E_OpenconfigBgpTypes_AFI_SAFI_TYPE = 0
	// OpenconfigBgpTypes_AFI_SAFI_TYPE_IPV4_LABELED_UNICAST corresponds to the value IPV4_LABELED_UNICAST of OpenconfigBgpTypes_AFI_SAFI_TYPE
	OpenconfigBgpTypes_AFI_SAFI_TYPE_IPV4_LABELED_UNICAST E_OpenconfigBgpTypes_AFI_SAFI_TYPE = 1
	// OpenconfigBgpTypes_AFI_SAFI_TYPE_IPV4_UNICAST corresponds to the value IPV4_UNICAST of OpenconfigBgpTypes_AFI_SAFI_TYPE
	OpenconfigBgpTypes_AFI_SAFI_TYPE_IPV4_UNICAST E_OpenconfigBgpTypes_AFI_SAFI_TYPE = 2
	// OpenconfigBgpTypes_AFI_SAFI_TYPE_IPV6_LABELED_UNICAST corresponds to the value IPV6_LABELED_UNICAST of OpenconfigBgpTypes_AFI_SAFI_TYPE
	OpenconfigBgpTypes_AFI_SAFI_TYPE_IPV6_LABELED_UNICAST E_OpenconfigBgpTypes_AFI_SAFI_TYPE = 3
	// OpenconfigBgpTypes_AFI_SAFI_TYPE_IPV6_UNICAST corresponds to the value IPV6_UNICAST of OpenconfigBgpTypes_AFI_SAFI_TYPE
	OpenconfigBgpTypes_AFI_SAFI_TYPE_IPV6_UNICAST E_OpenconfigBgpTypes_AFI_SAFI_TYPE = 4
	// OpenconfigBgpTypes_AFI_SAFI_TYPE_L2VPN_EVPN corresponds to the value L2VPN_EVPN of OpenconfigBgpTypes_AFI_SAFI_TYPE
	OpenconfigBgpTypes_AFI_SAFI_TYPE_L2VPN_EVPN E_OpenconfigBgpTypes_AFI_SAFI_TYPE = 5
	// OpenconfigBgpTypes_AFI_SAFI_TYPE_L2VPN_VPLS corresponds to the value L2VPN_VPLS of OpenconfigBgpTypes_AFI_SAFI_TYPE
	OpenconfigBgpTypes_AFI_SAFI_TYPE_L2VPN_VPLS E_OpenconfigBgpTypes_AFI_SAFI_TYPE = 6
	// OpenconfigBgpTypes_AFI_SAFI_TYPE_L3VPN_IPV4_MULTICAST corresponds to the value L3VPN_IPV4_MULTICAST of OpenconfigBgpTypes_AFI_SAFI_TYPE
	OpenconfigBgpTypes_AFI_SAFI_TYPE_L3VPN_IPV4_MULTICAST E_OpenconfigBgpTypes_AFI_SAFI_TYPE = 7
	// OpenconfigBgpTypes_AFI_SAFI_TYPE_L3VPN_IPV4_UNICAST corresponds to the value L3VPN_IPV4_UNICAST of OpenconfigBgpTypes_AFI_SAFI_TYPE
	OpenconfigBgpTypes_AFI_SAFI_TYPE_L3VPN_IPV4_UNICAST E_OpenconfigBgpTypes_AFI_SAFI_TYPE = 8
	// OpenconfigBgpTypes_AFI_SAFI_TYPE_L3VPN_IPV6_MULTICAST corresponds to the value L3VPN_IPV6_MULTICAST of OpenconfigBgpTypes_AFI_SAFI_TYPE
	OpenconfigBgpTypes_AFI_SAFI_TYPE_L3VPN_IPV6_MULTICAST E_OpenconfigBgpTypes_AFI_SAFI_TYPE = 9
	// OpenconfigBgpTypes_AFI_SAFI_TYPE_L3VPN_IPV6_UNICAST corresponds to the value L3VPN_IPV6_UNICAST of OpenconfigBgpTypes_AFI_SAFI_TYPE
	OpenconfigBgpTypes_AFI_SAFI_TYPE_L3VPN_IPV6_UNICAST E_OpenconfigBgpTypes_AFI_SAFI_TYPE = 10
	// OpenconfigBgpTypes_AFI_SAFI_TYPE_SRTE_POLICY_IPV4 corresponds to the value SRTE_POLICY_IPV4 of OpenconfigBgpTypes_AFI_SAFI_TYPE
	OpenconfigBgpTypes_AFI_SAFI_TYPE_SRTE_POLICY_IPV4 E_OpenconfigBgpTypes_AFI_SAFI_TYPE = 11
	// OpenconfigBgpTypes_AFI_SAFI_TYPE_SRTE_POLICY_IPV6 corresponds to the value SRTE_POLICY_IPV6 of OpenconfigBgpTypes_AFI_SAFI_TYPE
	OpenconfigBgpTypes_AFI_SAFI_TYPE_SRTE_POLICY_IPV6 E_OpenconfigBgpTypes_AFI_SAFI_TYPE = 12
)

// E_OpenconfigBgpTypes_BGP_CAPABILITY is a derived int64 type which is used to represent
// the enumerated node OpenconfigBgpTypes_BGP_CAPABILITY. An additional value named
// OpenconfigBgpTypes_BGP_CAPABILITY_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigBgpTypes_BGP_CAPABILITY int64

// IsYANGGoEnum ensures that OpenconfigBgpTypes_BGP_CAPABILITY implements the yang.GoEnum
// interface. This ensures that OpenconfigBgpTypes_BGP_CAPABILITY can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigBgpTypes_BGP_CAPABILITY) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigBgpTypes_BGP_CAPABILITY.
func (E_OpenconfigBgpTypes_BGP_CAPABILITY) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigBgpTypes_BGP_CAPABILITY_UNSET corresponds to the value UNSET of OpenconfigBgpTypes_BGP_CAPABILITY
	OpenconfigBgpTypes_BGP_CAPABILITY_UNSET E_OpenconfigBgpTypes_BGP_CAPABILITY = 0
	// OpenconfigBgpTypes_BGP_CAPABILITY_ADD_PATHS corresponds to the value ADD_PATHS of OpenconfigBgpTypes_BGP_CAPABILITY
	OpenconfigBgpTypes_BGP_CAPABILITY_ADD_PATHS E_OpenconfigBgpTypes_BGP_CAPABILITY = 1
	// OpenconfigBgpTypes_BGP_CAPABILITY_ASN32 corresponds to the value ASN32 of OpenconfigBgpTypes_BGP_CAPABILITY
	OpenconfigBgpTypes_BGP_CAPABILITY_ASN32 E_OpenconfigBgpTypes_BGP_CAPABILITY = 2
	// OpenconfigBgpTypes_BGP_CAPABILITY_GRACEFUL_RESTART corresponds to the value GRACEFUL_RESTART of OpenconfigBgpTypes_BGP_CAPABILITY
	OpenconfigBgpTypes_BGP_CAPABILITY_GRACEFUL_RESTART E_OpenconfigBgpTypes_BGP_CAPABILITY = 3
	// OpenconfigBgpTypes_BGP_CAPABILITY_MPBGP corresponds to the value MPBGP of OpenconfigBgpTypes_BGP_CAPABILITY
	OpenconfigBgpTypes_BGP_CAPABILITY_MPBGP E_OpenconfigBgpTypes_BGP_CAPABILITY = 4
	// OpenconfigBgpTypes_BGP_CAPABILITY_ROUTE_REFRESH corresponds to the value ROUTE_REFRESH of OpenconfigBgpTypes_BGP_CAPABILITY
	OpenconfigBgpTypes_BGP_CAPABILITY_ROUTE_REFRESH E_OpenconfigBgpTypes_BGP_CAPABILITY = 5
)

// E_OpenconfigBgpTypes_BGP_ERROR_CODE is a derived int64 type which is used to represent
// the enumerated node OpenconfigBgpTypes_BGP_ERROR_CODE. An additional value named
// OpenconfigBgpTypes_BGP_ERROR_CODE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigBgpTypes_BGP_ERROR_CODE int64

// IsYANGGoEnum ensures that OpenconfigBgpTypes_BGP_ERROR_CODE implements the yang.GoEnum
// interface. This ensures that OpenconfigBgpTypes_BGP_ERROR_CODE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigBgpTypes_BGP_ERROR_CODE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigBgpTypes_BGP_ERROR_CODE.
func (E_OpenconfigBgpTypes_BGP_ERROR_CODE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigBgpTypes_BGP_ERROR_CODE_UNSET corresponds to the value UNSET of OpenconfigBgpTypes_BGP_ERROR_CODE
	OpenconfigBgpTypes_BGP_ERROR_CODE_UNSET E_OpenconfigBgpTypes_BGP_ERROR_CODE = 0
	// OpenconfigBgpTypes_BGP_ERROR_CODE_CEASE corresponds to the value CEASE of OpenconfigBgpTypes_BGP_ERROR_CODE
	OpenconfigBgpTypes_BGP_ERROR_CODE_CEASE E_OpenconfigBgpTypes_BGP_ERROR_CODE = 1
	// OpenconfigBgpTypes_BGP_ERROR_CODE_FINITE_STATE_MACHINE_ERROR corresponds to the value FINITE_STATE_MACHINE_ERROR of OpenconfigBgpTypes_BGP_ERROR_CODE
	OpenconfigBgpTypes_BGP_ERROR_CODE_FINITE_STATE_MACHINE_ERROR E_OpenconfigBgpTypes_BGP_ERROR_CODE = 2
	// OpenconfigBgpTypes_BGP_ERROR_CODE_HOLD_TIMER_EXPIRED corresponds to the value HOLD_TIMER_EXPIRED of OpenconfigBgpTypes_BGP_ERROR_CODE
	OpenconfigBgpTypes_BGP_ERROR_CODE_HOLD_TIMER_EXPIRED E_OpenconfigBgpTypes_BGP_ERROR_CODE = 3
	// OpenconfigBgpTypes_BGP_ERROR_CODE_MESSAGE_HEADER_ERROR corresponds to the value MESSAGE_HEADER_ERROR of OpenconfigBgpTypes_BGP_ERROR_CODE
	OpenconfigBgpTypes_BGP_ERROR_CODE_MESSAGE_HEADER_ERROR E_OpenconfigBgpTypes_BGP_ERROR_CODE = 4
	// OpenconfigBgpTypes_BGP_ERROR_CODE_OPEN_MESSAGE_ERROR corresponds to the value OPEN_MESSAGE_ERROR of OpenconfigBgpTypes_BGP_ERROR_CODE
	OpenconfigBgpTypes_BGP_ERROR_CODE_OPEN_MESSAGE_ERROR E_OpenconfigBgpTypes_BGP_ERROR_CODE = 5
	// OpenconfigBgpTypes_BGP_ERROR_CODE_ROUTE_REFRESH_MESSAGE_ERROR corresponds to the value ROUTE_REFRESH_MESSAGE_ERROR of OpenconfigBgpTypes_BGP_ERROR_CODE
	OpenconfigBgpTypes_BGP_ERROR_CODE_ROUTE_REFRESH_MESSAGE_ERROR E_OpenconfigBgpTypes_BGP_ERROR_CODE = 6
	// OpenconfigBgpTypes_BGP_ERROR_CODE_UPDATE_MESSAGE_ERROR corresponds to the value UPDATE_MESSAGE_ERROR of OpenconfigBgpTypes_BGP_ERROR_CODE
	OpenconfigBgpTypes_BGP_ERROR_CODE_UPDATE_MESSAGE_ERROR E_OpenconfigBgpTypes_BGP_ERROR_CODE = 7
)

// E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE is a derived int64 type which is used to represent
// the enumerated node OpenconfigBgpTypes_BGP_ERROR_SUBCODE. An additional value named
// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE int64

// IsYANGGoEnum ensures that OpenconfigBgpTypes_BGP_ERROR_SUBCODE implements the yang.GoEnum
// interface. This ensures that OpenconfigBgpTypes_BGP_ERROR_SUBCODE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigBgpTypes_BGP_ERROR_SUBCODE.
func (E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_UNSET corresponds to the value UNSET of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_UNSET E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 0
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_ADMINISTRATIVE_RESET corresponds to the value ADMINISTRATIVE_RESET of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_ADMINISTRATIVE_RESET E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 1
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_ADMINISTRATIVE_SHUTDOWN corresponds to the value ADMINISTRATIVE_SHUTDOWN of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_ADMINISTRATIVE_SHUTDOWN E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 2
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_ATTRIBUTE_FLAGS_ERROR corresponds to the value ATTRIBUTE_FLAGS_ERROR of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_ATTRIBUTE_FLAGS_ERROR E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 3
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_ATTRIBUTE_LENGTH_ERROR corresponds to the value ATTRIBUTE_LENGTH_ERROR of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_ATTRIBUTE_LENGTH_ERROR E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 4
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_BAD_BGP_IDENTIFIER corresponds to the value BAD_BGP_IDENTIFIER of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_BAD_BGP_IDENTIFIER E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 5
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_BAD_MESSAGE_LENGTH corresponds to the value BAD_MESSAGE_LENGTH of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_BAD_MESSAGE_LENGTH E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 6
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_BAD_MESSAGE_TYPE corresponds to the value BAD_MESSAGE_TYPE of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_BAD_MESSAGE_TYPE E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 7
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_BAD_PEER_AS corresponds to the value BAD_PEER_AS of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_BAD_PEER_AS E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 8
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_CEASE_SUBCODE corresponds to the value CEASE_SUBCODE of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_CEASE_SUBCODE E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 9
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_CONNECTION_NOT_SYNCHRONIZED corresponds to the value CONNECTION_NOT_SYNCHRONIZED of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_CONNECTION_NOT_SYNCHRONIZED E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 10
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_CONNECTION_REJECTED corresponds to the value CONNECTION_REJECTED of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_CONNECTION_REJECTED E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 11
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_CONN_COLLISION_RESOLUTION corresponds to the value CONN_COLLISION_RESOLUTION of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_CONN_COLLISION_RESOLUTION E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 12
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_FINITE_STATE_MACHINE_SUBCODE corresponds to the value FINITE_STATE_MACHINE_SUBCODE of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_FINITE_STATE_MACHINE_SUBCODE E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 13
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_INVALID_MESSAGE_LENGTH corresponds to the value INVALID_MESSAGE_LENGTH of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_INVALID_MESSAGE_LENGTH E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 14
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_INVALID_NETWORK_FIELD corresponds to the value INVALID_NETWORK_FIELD of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_INVALID_NETWORK_FIELD E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 15
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_INVALID_NEXT_HOP_ATTRIBUTE corresponds to the value INVALID_NEXT_HOP_ATTRIBUTE of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_INVALID_NEXT_HOP_ATTRIBUTE E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 16
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_INVALID_ORIGIN_ATTRIBUTE corresponds to the value INVALID_ORIGIN_ATTRIBUTE of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_INVALID_ORIGIN_ATTRIBUTE E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 17
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_MALFORMED_AS_PATH corresponds to the value MALFORMED_AS_PATH of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_MALFORMED_AS_PATH E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 18
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_MALFORMED_ATTRIBUTE_LIST corresponds to the value MALFORMED_ATTRIBUTE_LIST of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_MALFORMED_ATTRIBUTE_LIST E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 19
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_MAX_NUM_PREFIXES_REACHED corresponds to the value MAX_NUM_PREFIXES_REACHED of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_MAX_NUM_PREFIXES_REACHED E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 20
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_MESSAGE_HEADER_SUBCODE corresponds to the value MESSAGE_HEADER_SUBCODE of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_MESSAGE_HEADER_SUBCODE E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 21
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_MISSING_WELL_KNOWN_ATTRIBUTE corresponds to the value MISSING_WELL_KNOWN_ATTRIBUTE of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_MISSING_WELL_KNOWN_ATTRIBUTE E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 22
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_OPEN_MESSAGE_SUBCODE corresponds to the value OPEN_MESSAGE_SUBCODE of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_OPEN_MESSAGE_SUBCODE E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 23
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_OPTIONAL_ATTRIBUTE_ERROR corresponds to the value OPTIONAL_ATTRIBUTE_ERROR of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_OPTIONAL_ATTRIBUTE_ERROR E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 24
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_OTHER_CONFIG_CHANGE corresponds to the value OTHER_CONFIG_CHANGE of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_OTHER_CONFIG_CHANGE E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 25
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_OUT_OF_RESOURCES corresponds to the value OUT_OF_RESOURCES of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_OUT_OF_RESOURCES E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 26
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_PEER_DE_CONFIGURED corresponds to the value PEER_DE_CONFIGURED of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_PEER_DE_CONFIGURED E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 27
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_RECEIVE_UNEXPECTED_MESSAGE_ESTABLISHED corresponds to the value RECEIVE_UNEXPECTED_MESSAGE_ESTABLISHED of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_RECEIVE_UNEXPECTED_MESSAGE_ESTABLISHED E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 28
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_RECEIVE_UNEXPECTED_MESSAGE_OPENCONFIRM corresponds to the value RECEIVE_UNEXPECTED_MESSAGE_OPENCONFIRM of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_RECEIVE_UNEXPECTED_MESSAGE_OPENCONFIRM E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 29
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_RECEIVE_UNEXPECTED_MESSAGE_OPENSENT corresponds to the value RECEIVE_UNEXPECTED_MESSAGE_OPENSENT of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_RECEIVE_UNEXPECTED_MESSAGE_OPENSENT E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 30
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_ROUTE_REFRESH_SUBCODE corresponds to the value ROUTE_REFRESH_SUBCODE of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_ROUTE_REFRESH_SUBCODE E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 31
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_UNACCEPTABLE_HOLD_TIME corresponds to the value UNACCEPTABLE_HOLD_TIME of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_UNACCEPTABLE_HOLD_TIME E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 32
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_UNRECOGNIZED_WELL_KNOWN_ATTRIBUTE corresponds to the value UNRECOGNIZED_WELL_KNOWN_ATTRIBUTE of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_UNRECOGNIZED_WELL_KNOWN_ATTRIBUTE E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 33
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_UNSPECIFIC corresponds to the value UNSPECIFIC of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_UNSPECIFIC E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 34
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_UNSUPPORTED_CAPABILITY corresponds to the value UNSUPPORTED_CAPABILITY of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_UNSUPPORTED_CAPABILITY E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 35
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_UNSUPPORTED_OPTIONAL_PARAMETER corresponds to the value UNSUPPORTED_OPTIONAL_PARAMETER of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_UNSUPPORTED_OPTIONAL_PARAMETER E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 36
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_UNSUPPORTED_VERSION_NUMBER corresponds to the value UNSUPPORTED_VERSION_NUMBER of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_UNSUPPORTED_VERSION_NUMBER E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 37
	// OpenconfigBgpTypes_BGP_ERROR_SUBCODE_UPDATE_MESSAGE_SUBCODE corresponds to the value UPDATE_MESSAGE_SUBCODE of OpenconfigBgpTypes_BGP_ERROR_SUBCODE
	OpenconfigBgpTypes_BGP_ERROR_SUBCODE_UPDATE_MESSAGE_SUBCODE E_OpenconfigBgpTypes_BGP_ERROR_SUBCODE = 38
)

// E_OpenconfigBgp_CommunityType is a derived int64 type which is used to represent
// the enumerated node OpenconfigBgp_CommunityType. An additional value named
// OpenconfigBgp_CommunityType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigBgp_CommunityType int64

// IsYANGGoEnum ensures that OpenconfigBgp_CommunityType implements the yang.GoEnum
// interface. This ensures that OpenconfigBgp_CommunityType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigBgp_CommunityType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigBgp_CommunityType.
func (E_OpenconfigBgp_CommunityType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigBgp_CommunityType_UNSET corresponds to the value UNSET of OpenconfigBgp_CommunityType
	OpenconfigBgp_CommunityType_UNSET E_OpenconfigBgp_CommunityType = 0
	// OpenconfigBgp_CommunityType_STANDARD corresponds to the value STANDARD of OpenconfigBgp_CommunityType
	OpenconfigBgp_CommunityType_STANDARD E_OpenconfigBgp_CommunityType = 1
	// OpenconfigBgp_CommunityType_EXTENDED corresponds to the value EXTENDED of OpenconfigBgp_CommunityType
	OpenconfigBgp_CommunityType_EXTENDED E_OpenconfigBgp_CommunityType = 2
	// OpenconfigBgp_CommunityType_BOTH corresponds to the value BOTH of OpenconfigBgp_CommunityType
	OpenconfigBgp_CommunityType_BOTH E_OpenconfigBgp_CommunityType = 3
	// OpenconfigBgp_CommunityType_NONE corresponds to the value NONE of OpenconfigBgp_CommunityType
	OpenconfigBgp_CommunityType_NONE E_OpenconfigBgp_CommunityType = 4
)

// E_OpenconfigBgp_GracefulRestart_Mode is a derived int64 type which is used to represent
// the enumerated node OpenconfigBgp_GracefulRestart_Mode. An additional value named
// OpenconfigBgp_GracefulRestart_Mode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigBgp_GracefulRestart_Mode int64

// IsYANGGoEnum ensures that OpenconfigBgp_GracefulRestart_Mode implements the yang.GoEnum
// interface. This ensures that OpenconfigBgp_GracefulRestart_Mode can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigBgp_GracefulRestart_Mode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigBgp_GracefulRestart_Mode.
func (E_OpenconfigBgp_GracefulRestart_Mode) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigBgp_GracefulRestart_Mode_UNSET corresponds to the value UNSET of OpenconfigBgp_GracefulRestart_Mode
	OpenconfigBgp_GracefulRestart_Mode_UNSET E_OpenconfigBgp_GracefulRestart_Mode = 0
	// OpenconfigBgp_GracefulRestart_Mode_HELPER_ONLY corresponds to the value HELPER_ONLY of OpenconfigBgp_GracefulRestart_Mode
	OpenconfigBgp_GracefulRestart_Mode_HELPER_ONLY E_OpenconfigBgp_GracefulRestart_Mode = 1
	// OpenconfigBgp_GracefulRestart_Mode_BILATERAL corresponds to the value BILATERAL of OpenconfigBgp_GracefulRestart_Mode
	OpenconfigBgp_GracefulRestart_Mode_BILATERAL E_OpenconfigBgp_GracefulRestart_Mode = 2
	// OpenconfigBgp_GracefulRestart_Mode_REMOTE_HELPER corresponds to the value REMOTE_HELPER of OpenconfigBgp_GracefulRestart_Mode
	OpenconfigBgp_GracefulRestart_Mode_REMOTE_HELPER E_OpenconfigBgp_GracefulRestart_Mode = 3
)

// E_OpenconfigBgp_Neighbor_SessionState is a derived int64 type which is used to represent
// the enumerated node OpenconfigBgp_Neighbor_SessionState. An additional value named
// OpenconfigBgp_Neighbor_SessionState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigBgp_Neighbor_SessionState int64

// IsYANGGoEnum ensures that OpenconfigBgp_Neighbor_SessionState implements the yang.GoEnum
// interface. This ensures that OpenconfigBgp_Neighbor_SessionState can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigBgp_Neighbor_SessionState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigBgp_Neighbor_SessionState.
func (E_OpenconfigBgp_Neighbor_SessionState) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigBgp_Neighbor_SessionState_UNSET corresponds to the value UNSET of OpenconfigBgp_Neighbor_SessionState
	OpenconfigBgp_Neighbor_SessionState_UNSET E_OpenconfigBgp_Neighbor_SessionState = 0
	// OpenconfigBgp_Neighbor_SessionState_IDLE corresponds to the value IDLE of OpenconfigBgp_Neighbor_SessionState
	OpenconfigBgp_Neighbor_SessionState_IDLE E_OpenconfigBgp_Neighbor_SessionState = 1
	// OpenconfigBgp_Neighbor_SessionState_CONNECT corresponds to the value CONNECT of OpenconfigBgp_Neighbor_SessionState
	OpenconfigBgp_Neighbor_SessionState_CONNECT E_OpenconfigBgp_Neighbor_SessionState = 2
	// OpenconfigBgp_Neighbor_SessionState_ACTIVE corresponds to the value ACTIVE of OpenconfigBgp_Neighbor_SessionState
	OpenconfigBgp_Neighbor_SessionState_ACTIVE E_OpenconfigBgp_Neighbor_SessionState = 3
	// OpenconfigBgp_Neighbor_SessionState_OPENSENT corresponds to the value OPENSENT of OpenconfigBgp_Neighbor_SessionState
	OpenconfigBgp_Neighbor_SessionState_OPENSENT E_OpenconfigBgp_Neighbor_SessionState = 4
	// OpenconfigBgp_Neighbor_SessionState_OPENCONFIRM corresponds to the value OPENCONFIRM of OpenconfigBgp_Neighbor_SessionState
	OpenconfigBgp_Neighbor_SessionState_OPENCONFIRM E_OpenconfigBgp_Neighbor_SessionState = 5
	// OpenconfigBgp_Neighbor_SessionState_ESTABLISHED corresponds to the value ESTABLISHED of OpenconfigBgp_Neighbor_SessionState
	OpenconfigBgp_Neighbor_SessionState_ESTABLISHED E_OpenconfigBgp_Neighbor_SessionState = 6
)

// E_OpenconfigBgp_PeerType is a derived int64 type which is used to represent
// the enumerated node OpenconfigBgp_PeerType. An additional value named
// OpenconfigBgp_PeerType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigBgp_PeerType int64

// IsYANGGoEnum ensures that OpenconfigBgp_PeerType implements the yang.GoEnum
// interface. This ensures that OpenconfigBgp_PeerType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigBgp_PeerType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigBgp_PeerType.
func (E_OpenconfigBgp_PeerType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigBgp_PeerType_UNSET corresponds to the value UNSET of OpenconfigBgp_PeerType
	OpenconfigBgp_PeerType_UNSET E_OpenconfigBgp_PeerType = 0
	// OpenconfigBgp_PeerType_INTERNAL corresponds to the value INTERNAL of OpenconfigBgp_PeerType
	OpenconfigBgp_PeerType_INTERNAL E_OpenconfigBgp_PeerType = 1
	// OpenconfigBgp_PeerType_EXTERNAL corresponds to the value EXTERNAL of OpenconfigBgp_PeerType
	OpenconfigBgp_PeerType_EXTERNAL E_OpenconfigBgp_PeerType = 2
)

// E_OpenconfigBgp_RemovePrivateAsOption is a derived int64 type which is used to represent
// the enumerated node OpenconfigBgp_RemovePrivateAsOption. An additional value named
// OpenconfigBgp_RemovePrivateAsOption_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigBgp_RemovePrivateAsOption int64

// IsYANGGoEnum ensures that OpenconfigBgp_RemovePrivateAsOption implements the yang.GoEnum
// interface. This ensures that OpenconfigBgp_RemovePrivateAsOption can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigBgp_RemovePrivateAsOption) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigBgp_RemovePrivateAsOption.
func (E_OpenconfigBgp_RemovePrivateAsOption) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigBgp_RemovePrivateAsOption_UNSET corresponds to the value UNSET of OpenconfigBgp_RemovePrivateAsOption
	OpenconfigBgp_RemovePrivateAsOption_UNSET E_OpenconfigBgp_RemovePrivateAsOption = 0
	// OpenconfigBgp_RemovePrivateAsOption_PRIVATE_AS_REMOVE_ALL corresponds to the value PRIVATE_AS_REMOVE_ALL of OpenconfigBgp_RemovePrivateAsOption
	OpenconfigBgp_RemovePrivateAsOption_PRIVATE_AS_REMOVE_ALL E_OpenconfigBgp_RemovePrivateAsOption = 1
	// OpenconfigBgp_RemovePrivateAsOption_PRIVATE_AS_REPLACE_ALL corresponds to the value PRIVATE_AS_REPLACE_ALL of OpenconfigBgp_RemovePrivateAsOption
	OpenconfigBgp_RemovePrivateAsOption_PRIVATE_AS_REPLACE_ALL E_OpenconfigBgp_RemovePrivateAsOption = 2
)

// E_OpenconfigIfAggregate_AggregationType is a derived int64 type which is used to represent
// the enumerated node OpenconfigIfAggregate_AggregationType. An additional value named
// OpenconfigIfAggregate_AggregationType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIfAggregate_AggregationType int64

// IsYANGGoEnum ensures that OpenconfigIfAggregate_AggregationType implements the yang.GoEnum
// interface. This ensures that OpenconfigIfAggregate_AggregationType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIfAggregate_AggregationType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIfAggregate_AggregationType.
func (E_OpenconfigIfAggregate_AggregationType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIfAggregate_AggregationType_UNSET corresponds to the value UNSET of OpenconfigIfAggregate_AggregationType
	OpenconfigIfAggregate_AggregationType_UNSET E_OpenconfigIfAggregate_AggregationType = 0
	// OpenconfigIfAggregate_AggregationType_LACP corresponds to the value LACP of OpenconfigIfAggregate_AggregationType
	OpenconfigIfAggregate_AggregationType_LACP E_OpenconfigIfAggregate_AggregationType = 1
	// OpenconfigIfAggregate_AggregationType_STATIC corresponds to the value STATIC of OpenconfigIfAggregate_AggregationType
	OpenconfigIfAggregate_AggregationType_STATIC E_OpenconfigIfAggregate_AggregationType = 2
)

// E_OpenconfigIfEthernet_ETHERNET_SPEED is a derived int64 type which is used to represent
// the enumerated node OpenconfigIfEthernet_ETHERNET_SPEED. An additional value named
// OpenconfigIfEthernet_ETHERNET_SPEED_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIfEthernet_ETHERNET_SPEED int64

// IsYANGGoEnum ensures that OpenconfigIfEthernet_ETHERNET_SPEED implements the yang.GoEnum
// interface. This ensures that OpenconfigIfEthernet_ETHERNET_SPEED can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIfEthernet_ETHERNET_SPEED) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIfEthernet_ETHERNET_SPEED.
func (E_OpenconfigIfEthernet_ETHERNET_SPEED) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIfEthernet_ETHERNET_SPEED_UNSET corresponds to the value UNSET of OpenconfigIfEthernet_ETHERNET_SPEED
	OpenconfigIfEthernet_ETHERNET_SPEED_UNSET E_OpenconfigIfEthernet_ETHERNET_SPEED = 0
	// OpenconfigIfEthernet_ETHERNET_SPEED_SPEED_100GB corresponds to the value SPEED_100GB of OpenconfigIfEthernet_ETHERNET_SPEED
	OpenconfigIfEthernet_ETHERNET_SPEED_SPEED_100GB E_OpenconfigIfEthernet_ETHERNET_SPEED = 1
	// OpenconfigIfEthernet_ETHERNET_SPEED_SPEED_100MB corresponds to the value SPEED_100MB of OpenconfigIfEthernet_ETHERNET_SPEED
	OpenconfigIfEthernet_ETHERNET_SPEED_SPEED_100MB E_OpenconfigIfEthernet_ETHERNET_SPEED = 2
	// OpenconfigIfEthernet_ETHERNET_SPEED_SPEED_10GB corresponds to the value SPEED_10GB of OpenconfigIfEthernet_ETHERNET_SPEED
	OpenconfigIfEthernet_ETHERNET_SPEED_SPEED_10GB E_OpenconfigIfEthernet_ETHERNET_SPEED = 3
	// OpenconfigIfEthernet_ETHERNET_SPEED_SPEED_10MB corresponds to the value SPEED_10MB of OpenconfigIfEthernet_ETHERNET_SPEED
	OpenconfigIfEthernet_ETHERNET_SPEED_SPEED_10MB E_OpenconfigIfEthernet_ETHERNET_SPEED = 4
	// OpenconfigIfEthernet_ETHERNET_SPEED_SPEED_1GB corresponds to the value SPEED_1GB of OpenconfigIfEthernet_ETHERNET_SPEED
	OpenconfigIfEthernet_ETHERNET_SPEED_SPEED_1GB E_OpenconfigIfEthernet_ETHERNET_SPEED = 5
	// OpenconfigIfEthernet_ETHERNET_SPEED_SPEED_25GB corresponds to the value SPEED_25GB of OpenconfigIfEthernet_ETHERNET_SPEED
	OpenconfigIfEthernet_ETHERNET_SPEED_SPEED_25GB E_OpenconfigIfEthernet_ETHERNET_SPEED = 6
	// OpenconfigIfEthernet_ETHERNET_SPEED_SPEED_40GB corresponds to the value SPEED_40GB of OpenconfigIfEthernet_ETHERNET_SPEED
	OpenconfigIfEthernet_ETHERNET_SPEED_SPEED_40GB E_OpenconfigIfEthernet_ETHERNET_SPEED = 7
	// OpenconfigIfEthernet_ETHERNET_SPEED_SPEED_50GB corresponds to the value SPEED_50GB of OpenconfigIfEthernet_ETHERNET_SPEED
	OpenconfigIfEthernet_ETHERNET_SPEED_SPEED_50GB E_OpenconfigIfEthernet_ETHERNET_SPEED = 8
	// OpenconfigIfEthernet_ETHERNET_SPEED_SPEED_UNKNOWN corresponds to the value SPEED_UNKNOWN of OpenconfigIfEthernet_ETHERNET_SPEED
	OpenconfigIfEthernet_ETHERNET_SPEED_SPEED_UNKNOWN E_OpenconfigIfEthernet_ETHERNET_SPEED = 9
)

// E_OpenconfigIfEthernet_Ethernet_DuplexMode is a derived int64 type which is used to represent
// the enumerated node OpenconfigIfEthernet_Ethernet_DuplexMode. An additional value named
// OpenconfigIfEthernet_Ethernet_DuplexMode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIfEthernet_Ethernet_DuplexMode int64

// IsYANGGoEnum ensures that OpenconfigIfEthernet_Ethernet_DuplexMode implements the yang.GoEnum
// interface. This ensures that OpenconfigIfEthernet_Ethernet_DuplexMode can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIfEthernet_Ethernet_DuplexMode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIfEthernet_Ethernet_DuplexMode.
func (E_OpenconfigIfEthernet_Ethernet_DuplexMode) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIfEthernet_Ethernet_DuplexMode_UNSET corresponds to the value UNSET of OpenconfigIfEthernet_Ethernet_DuplexMode
	OpenconfigIfEthernet_Ethernet_DuplexMode_UNSET E_OpenconfigIfEthernet_Ethernet_DuplexMode = 0
	// OpenconfigIfEthernet_Ethernet_DuplexMode_FULL corresponds to the value FULL of OpenconfigIfEthernet_Ethernet_DuplexMode
	OpenconfigIfEthernet_Ethernet_DuplexMode_FULL E_OpenconfigIfEthernet_Ethernet_DuplexMode = 1
	// OpenconfigIfEthernet_Ethernet_DuplexMode_HALF corresponds to the value HALF of OpenconfigIfEthernet_Ethernet_DuplexMode
	OpenconfigIfEthernet_Ethernet_DuplexMode_HALF E_OpenconfigIfEthernet_Ethernet_DuplexMode = 2
)

// E_OpenconfigIfEthernet_Ethernet_NegotiatedDuplexMode is a derived int64 type which is used to represent
// the enumerated node OpenconfigIfEthernet_Ethernet_NegotiatedDuplexMode. An additional value named
// OpenconfigIfEthernet_Ethernet_NegotiatedDuplexMode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIfEthernet_Ethernet_NegotiatedDuplexMode int64

// IsYANGGoEnum ensures that OpenconfigIfEthernet_Ethernet_NegotiatedDuplexMode implements the yang.GoEnum
// interface. This ensures that OpenconfigIfEthernet_Ethernet_NegotiatedDuplexMode can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIfEthernet_Ethernet_NegotiatedDuplexMode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIfEthernet_Ethernet_NegotiatedDuplexMode.
func (E_OpenconfigIfEthernet_Ethernet_NegotiatedDuplexMode) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIfEthernet_Ethernet_NegotiatedDuplexMode_UNSET corresponds to the value UNSET of OpenconfigIfEthernet_Ethernet_NegotiatedDuplexMode
	OpenconfigIfEthernet_Ethernet_NegotiatedDuplexMode_UNSET E_OpenconfigIfEthernet_Ethernet_NegotiatedDuplexMode = 0
	// OpenconfigIfEthernet_Ethernet_NegotiatedDuplexMode_FULL corresponds to the value FULL of OpenconfigIfEthernet_Ethernet_NegotiatedDuplexMode
	OpenconfigIfEthernet_Ethernet_NegotiatedDuplexMode_FULL E_OpenconfigIfEthernet_Ethernet_NegotiatedDuplexMode = 1
	// OpenconfigIfEthernet_Ethernet_NegotiatedDuplexMode_HALF corresponds to the value HALF of OpenconfigIfEthernet_Ethernet_NegotiatedDuplexMode
	OpenconfigIfEthernet_Ethernet_NegotiatedDuplexMode_HALF E_OpenconfigIfEthernet_Ethernet_NegotiatedDuplexMode = 2
)

// E_OpenconfigIfIp_Address_Status is a derived int64 type which is used to represent
// the enumerated node OpenconfigIfIp_Address_Status. An additional value named
// OpenconfigIfIp_Address_Status_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIfIp_Address_Status int64

// IsYANGGoEnum ensures that OpenconfigIfIp_Address_Status implements the yang.GoEnum
// interface. This ensures that OpenconfigIfIp_Address_Status can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIfIp_Address_Status) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIfIp_Address_Status.
func (E_OpenconfigIfIp_Address_Status) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigIfIp_Address_Status_UNSET corresponds to the value UNSET of OpenconfigIfIp_Address_Status
	OpenconfigIfIp_Address_Status_UNSET E_OpenconfigIfIp_Address_Status = 0
	// OpenconfigIfIp_Address_Status_PREFERRED corresponds to the value PREFERRED of OpenconfigIfIp_Address_Status
	OpenconfigIfIp_Address_Status_PREFERRED E_OpenconfigIfIp_Address_Status = 1
	// OpenconfigIfIp_Address_Status_DEPRECATED corresponds to the value DEPRECATED of OpenconfigIfIp_Address_Status
	OpenconfigIfIp_Address_Status_DEPRECATED E_OpenconfigIfIp_Address_Status = 2
	// OpenconfigIfIp_Address_Status_INVALID corresponds to the value INVALID of OpenconfigIfIp_Address_Status
	OpenconfigIfIp_Address_Status_INVALID E_OpenconfigIfIp_Address_Status = 3
	// OpenconfigIfIp_Address_Status_INACCESSIBLE corresponds to the value INACCESSIBLE of OpenconfigIfIp_Address_Status
	OpenconfigIfIp_Address_Status_INACCESSIBLE E_OpenconfigIfIp_Address_Status = 4
	// OpenconfigIfIp_Address_Status_UNKNOWN corresponds to the value UNKNOWN of OpenconfigIfIp_Address_Status
	OpenconfigIfIp_Address_Status_UNKNOWN E_OpenconfigIfIp_Address_Status = 5
	// OpenconfigIfIp_Address_Status_TENTATIVE corresponds to the value TENTATIVE of OpenconfigIfIp_Address_Status
	OpenconfigIfIp_Address_Status_TENTATIVE E_OpenconfigIfIp_Address_Status = 6
	// OpenconfigIfIp_Address_Status_DUPLICATE corresponds to the value DUPLICATE of OpenconfigIfIp_Address_Status
	OpenconfigIfIp_Address_Status_DUPLICATE E_OpenconfigIfIp_Address_Status = 7
	// OpenconfigIfIp_Address_Status_OPTIMISTIC corresponds to the value OPTIMISTIC of OpenconfigIfIp_Address_Status
	OpenconfigIfIp_Address_Status_OPTIMISTIC E_OpenconfigIfIp_Address_Status = 8
)

// E_OpenconfigIfIp_IpAddressOrigin is a derived int64 type which is used to represent
// the enumerated node OpenconfigIfIp_IpAddressOrigin. An additional value named
// OpenconfigIfIp_IpAddressOrigin_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIfIp_IpAddressOrigin int64

// IsYANGGoEnum ensures that OpenconfigIfIp_IpAddressOrigin implements the yang.GoEnum
// interface. This ensures that OpenconfigIfIp_IpAddressOrigin can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIfIp_IpAddressOrigin) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIfIp_IpAddressOrigin.
func (E_OpenconfigIfIp_IpAddressOrigin) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIfIp_IpAddressOrigin_UNSET corresponds to the value UNSET of OpenconfigIfIp_IpAddressOrigin
	OpenconfigIfIp_IpAddressOrigin_UNSET E_OpenconfigIfIp_IpAddressOrigin = 0
	// OpenconfigIfIp_IpAddressOrigin_OTHER corresponds to the value OTHER of OpenconfigIfIp_IpAddressOrigin
	OpenconfigIfIp_IpAddressOrigin_OTHER E_OpenconfigIfIp_IpAddressOrigin = 1
	// OpenconfigIfIp_IpAddressOrigin_STATIC corresponds to the value STATIC of OpenconfigIfIp_IpAddressOrigin
	OpenconfigIfIp_IpAddressOrigin_STATIC E_OpenconfigIfIp_IpAddressOrigin = 2
	// OpenconfigIfIp_IpAddressOrigin_DHCP corresponds to the value DHCP of OpenconfigIfIp_IpAddressOrigin
	OpenconfigIfIp_IpAddressOrigin_DHCP E_OpenconfigIfIp_IpAddressOrigin = 3
	// OpenconfigIfIp_IpAddressOrigin_LINK_LAYER corresponds to the value LINK_LAYER of OpenconfigIfIp_IpAddressOrigin
	OpenconfigIfIp_IpAddressOrigin_LINK_LAYER E_OpenconfigIfIp_IpAddressOrigin = 4
	// OpenconfigIfIp_IpAddressOrigin_RANDOM corresponds to the value RANDOM of OpenconfigIfIp_IpAddressOrigin
	OpenconfigIfIp_IpAddressOrigin_RANDOM E_OpenconfigIfIp_IpAddressOrigin = 5
)

// E_OpenconfigIfIp_NeighborOrigin is a derived int64 type which is used to represent
// the enumerated node OpenconfigIfIp_NeighborOrigin. An additional value named
// OpenconfigIfIp_NeighborOrigin_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIfIp_NeighborOrigin int64

// IsYANGGoEnum ensures that OpenconfigIfIp_NeighborOrigin implements the yang.GoEnum
// interface. This ensures that OpenconfigIfIp_NeighborOrigin can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIfIp_NeighborOrigin) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIfIp_NeighborOrigin.
func (E_OpenconfigIfIp_NeighborOrigin) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigIfIp_NeighborOrigin_UNSET corresponds to the value UNSET of OpenconfigIfIp_NeighborOrigin
	OpenconfigIfIp_NeighborOrigin_UNSET E_OpenconfigIfIp_NeighborOrigin = 0
	// OpenconfigIfIp_NeighborOrigin_OTHER corresponds to the value OTHER of OpenconfigIfIp_NeighborOrigin
	OpenconfigIfIp_NeighborOrigin_OTHER E_OpenconfigIfIp_NeighborOrigin = 1
	// OpenconfigIfIp_NeighborOrigin_STATIC corresponds to the value STATIC of OpenconfigIfIp_NeighborOrigin
	OpenconfigIfIp_NeighborOrigin_STATIC E_OpenconfigIfIp_NeighborOrigin = 2
	// OpenconfigIfIp_NeighborOrigin_DYNAMIC corresponds to the value DYNAMIC of OpenconfigIfIp_NeighborOrigin
	OpenconfigIfIp_NeighborOrigin_DYNAMIC E_OpenconfigIfIp_NeighborOrigin = 3
)

// E_OpenconfigIfIp_Neighbor_NeighborState is a derived int64 type which is used to represent
// the enumerated node OpenconfigIfIp_Neighbor_NeighborState. An additional value named
// OpenconfigIfIp_Neighbor_NeighborState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIfIp_Neighbor_NeighborState int64

// IsYANGGoEnum ensures that OpenconfigIfIp_Neighbor_NeighborState implements the yang.GoEnum
// interface. This ensures that OpenconfigIfIp_Neighbor_NeighborState can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIfIp_Neighbor_NeighborState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIfIp_Neighbor_NeighborState.
func (E_OpenconfigIfIp_Neighbor_NeighborState) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIfIp_Neighbor_NeighborState_UNSET corresponds to the value UNSET of OpenconfigIfIp_Neighbor_NeighborState
	OpenconfigIfIp_Neighbor_NeighborState_UNSET E_OpenconfigIfIp_Neighbor_NeighborState = 0
	// OpenconfigIfIp_Neighbor_NeighborState_INCOMPLETE corresponds to the value INCOMPLETE of OpenconfigIfIp_Neighbor_NeighborState
	OpenconfigIfIp_Neighbor_NeighborState_INCOMPLETE E_OpenconfigIfIp_Neighbor_NeighborState = 1
	// OpenconfigIfIp_Neighbor_NeighborState_REACHABLE corresponds to the value REACHABLE of OpenconfigIfIp_Neighbor_NeighborState
	OpenconfigIfIp_Neighbor_NeighborState_REACHABLE E_OpenconfigIfIp_Neighbor_NeighborState = 2
	// OpenconfigIfIp_Neighbor_NeighborState_STALE corresponds to the value STALE of OpenconfigIfIp_Neighbor_NeighborState
	OpenconfigIfIp_Neighbor_NeighborState_STALE E_OpenconfigIfIp_Neighbor_NeighborState = 3
	// OpenconfigIfIp_Neighbor_NeighborState_DELAY corresponds to the value DELAY of OpenconfigIfIp_Neighbor_NeighborState
	OpenconfigIfIp_Neighbor_NeighborState_DELAY E_OpenconfigIfIp_Neighbor_NeighborState = 4
	// OpenconfigIfIp_Neighbor_NeighborState_PROBE corresponds to the value PROBE of OpenconfigIfIp_Neighbor_NeighborState
	OpenconfigIfIp_Neighbor_NeighborState_PROBE E_OpenconfigIfIp_Neighbor_NeighborState = 5
)

// E_OpenconfigIfIp_ProxyArp_Mode is a derived int64 type which is used to represent
// the enumerated node OpenconfigIfIp_ProxyArp_Mode. An additional value named
// OpenconfigIfIp_ProxyArp_Mode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIfIp_ProxyArp_Mode int64

// IsYANGGoEnum ensures that OpenconfigIfIp_ProxyArp_Mode implements the yang.GoEnum
// interface. This ensures that OpenconfigIfIp_ProxyArp_Mode can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIfIp_ProxyArp_Mode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIfIp_ProxyArp_Mode.
func (E_OpenconfigIfIp_ProxyArp_Mode) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigIfIp_ProxyArp_Mode_UNSET corresponds to the value UNSET of OpenconfigIfIp_ProxyArp_Mode
	OpenconfigIfIp_ProxyArp_Mode_UNSET E_OpenconfigIfIp_ProxyArp_Mode = 0
	// OpenconfigIfIp_ProxyArp_Mode_DISABLE corresponds to the value DISABLE of OpenconfigIfIp_ProxyArp_Mode
	OpenconfigIfIp_ProxyArp_Mode_DISABLE E_OpenconfigIfIp_ProxyArp_Mode = 1
	// OpenconfigIfIp_ProxyArp_Mode_REMOTE_ONLY corresponds to the value REMOTE_ONLY of OpenconfigIfIp_ProxyArp_Mode
	OpenconfigIfIp_ProxyArp_Mode_REMOTE_ONLY E_OpenconfigIfIp_ProxyArp_Mode = 2
	// OpenconfigIfIp_ProxyArp_Mode_ALL corresponds to the value ALL of OpenconfigIfIp_ProxyArp_Mode
	OpenconfigIfIp_ProxyArp_Mode_ALL E_OpenconfigIfIp_ProxyArp_Mode = 3
)

// E_OpenconfigInterfaces_Interface_AdminStatus is a derived int64 type which is used to represent
// the enumerated node OpenconfigInterfaces_Interface_AdminStatus. An additional value named
// OpenconfigInterfaces_Interface_AdminStatus_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigInterfaces_Interface_AdminStatus int64

// IsYANGGoEnum ensures that OpenconfigInterfaces_Interface_AdminStatus implements the yang.GoEnum
// interface. This ensures that OpenconfigInterfaces_Interface_AdminStatus can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigInterfaces_Interface_AdminStatus) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigInterfaces_Interface_AdminStatus.
func (E_OpenconfigInterfaces_Interface_AdminStatus) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigInterfaces_Interface_AdminStatus_UNSET corresponds to the value UNSET of OpenconfigInterfaces_Interface_AdminStatus
	OpenconfigInterfaces_Interface_AdminStatus_UNSET E_OpenconfigInterfaces_Interface_AdminStatus = 0
	// OpenconfigInterfaces_Interface_AdminStatus_UP corresponds to the value UP of OpenconfigInterfaces_Interface_AdminStatus
	OpenconfigInterfaces_Interface_AdminStatus_UP E_OpenconfigInterfaces_Interface_AdminStatus = 1
	// OpenconfigInterfaces_Interface_AdminStatus_DOWN corresponds to the value DOWN of OpenconfigInterfaces_Interface_AdminStatus
	OpenconfigInterfaces_Interface_AdminStatus_DOWN E_OpenconfigInterfaces_Interface_AdminStatus = 2
	// OpenconfigInterfaces_Interface_AdminStatus_TESTING corresponds to the value TESTING of OpenconfigInterfaces_Interface_AdminStatus
	OpenconfigInterfaces_Interface_AdminStatus_TESTING E_OpenconfigInterfaces_Interface_AdminStatus = 3
)

// E_OpenconfigInterfaces_Interface_OperStatus is a derived int64 type which is used to represent
// the enumerated node OpenconfigInterfaces_Interface_OperStatus. An additional value named
// OpenconfigInterfaces_Interface_OperStatus_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigInterfaces_Interface_OperStatus int64

// IsYANGGoEnum ensures that OpenconfigInterfaces_Interface_OperStatus implements the yang.GoEnum
// interface. This ensures that OpenconfigInterfaces_Interface_OperStatus can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigInterfaces_Interface_OperStatus) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigInterfaces_Interface_OperStatus.
func (E_OpenconfigInterfaces_Interface_OperStatus) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigInterfaces_Interface_OperStatus_UNSET corresponds to the value UNSET of OpenconfigInterfaces_Interface_OperStatus
	OpenconfigInterfaces_Interface_OperStatus_UNSET E_OpenconfigInterfaces_Interface_OperStatus = 0
	// OpenconfigInterfaces_Interface_OperStatus_UP corresponds to the value UP of OpenconfigInterfaces_Interface_OperStatus
	OpenconfigInterfaces_Interface_OperStatus_UP E_OpenconfigInterfaces_Interface_OperStatus = 2
	// OpenconfigInterfaces_Interface_OperStatus_DOWN corresponds to the value DOWN of OpenconfigInterfaces_Interface_OperStatus
	OpenconfigInterfaces_Interface_OperStatus_DOWN E_OpenconfigInterfaces_Interface_OperStatus = 3
	// OpenconfigInterfaces_Interface_OperStatus_TESTING corresponds to the value TESTING of OpenconfigInterfaces_Interface_OperStatus
	OpenconfigInterfaces_Interface_OperStatus_TESTING E_OpenconfigInterfaces_Interface_OperStatus = 4
	// OpenconfigInterfaces_Interface_OperStatus_UNKNOWN corresponds to the value UNKNOWN of OpenconfigInterfaces_Interface_OperStatus
	OpenconfigInterfaces_Interface_OperStatus_UNKNOWN E_OpenconfigInterfaces_Interface_OperStatus = 5
	// OpenconfigInterfaces_Interface_OperStatus_DORMANT corresponds to the value DORMANT of OpenconfigInterfaces_Interface_OperStatus
	OpenconfigInterfaces_Interface_OperStatus_DORMANT E_OpenconfigInterfaces_Interface_OperStatus = 6
	// OpenconfigInterfaces_Interface_OperStatus_NOT_PRESENT corresponds to the value NOT_PRESENT of OpenconfigInterfaces_Interface_OperStatus
	OpenconfigInterfaces_Interface_OperStatus_NOT_PRESENT E_OpenconfigInterfaces_Interface_OperStatus = 7
	// OpenconfigInterfaces_Interface_OperStatus_LOWER_LAYER_DOWN corresponds to the value LOWER_LAYER_DOWN of OpenconfigInterfaces_Interface_OperStatus
	OpenconfigInterfaces_Interface_OperStatus_LOWER_LAYER_DOWN E_OpenconfigInterfaces_Interface_OperStatus = 8
)

// E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE. An additional value named
// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE int64

// IsYANGGoEnum ensures that OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE.
func (E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_UNSET corresponds to the value UNSET of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_UNSET E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 0
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_IPV4_ROUTER_ID corresponds to the value IP_REACHABILITY_IPV4_ROUTER_ID of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_IPV4_ROUTER_ID E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 1
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_IPV6_ROUTER_ID corresponds to the value IP_REACHABILITY_IPV6_ROUTER_ID of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_IPV6_ROUTER_ID E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 2
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_PREFIX_FLAGS corresponds to the value IP_REACHABILITY_PREFIX_FLAGS of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_PREFIX_FLAGS E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 3
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_PREFIX_SID corresponds to the value IP_REACHABILITY_PREFIX_SID of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_PREFIX_SID E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 4
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_SUBTLVS_TYPE corresponds to the value IP_REACHABILITY_SUBTLVS_TYPE of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_SUBTLVS_TYPE E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 5
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_TAG corresponds to the value IP_REACHABILITY_TAG of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_TAG E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 6
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_TAG64 corresponds to the value IP_REACHABILITY_TAG64 of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IP_REACHABILITY_TAG64 E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 7
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_ADJ_LAN_SID corresponds to the value IS_REACHABILITY_ADJ_LAN_SID of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_ADJ_LAN_SID E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 8
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_ADJ_SID corresponds to the value IS_REACHABILITY_ADJ_SID of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_ADJ_SID E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 9
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_ADMIN_GROUP corresponds to the value IS_REACHABILITY_ADMIN_GROUP of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_ADMIN_GROUP E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 10
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_AVAILABLE_BANDWIDTH corresponds to the value IS_REACHABILITY_AVAILABLE_BANDWIDTH of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_AVAILABLE_BANDWIDTH E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 11
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_BANDWIDTH_CONSTRAINTS corresponds to the value IS_REACHABILITY_BANDWIDTH_CONSTRAINTS of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_BANDWIDTH_CONSTRAINTS E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 12
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_EXTENDED_ADMIN_GROUP corresponds to the value IS_REACHABILITY_EXTENDED_ADMIN_GROUP of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_EXTENDED_ADMIN_GROUP E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 13
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_IPV4_INTERFACE_ADDRESS corresponds to the value IS_REACHABILITY_IPV4_INTERFACE_ADDRESS of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_IPV4_INTERFACE_ADDRESS E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 14
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_IPV4_NEIGHBOR_ADDRESS corresponds to the value IS_REACHABILITY_IPV4_NEIGHBOR_ADDRESS of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_IPV4_NEIGHBOR_ADDRESS E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 15
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_IPV6_INTERFACE_ADDRESS corresponds to the value IS_REACHABILITY_IPV6_INTERFACE_ADDRESS of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_IPV6_INTERFACE_ADDRESS E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 16
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_IPV6_NEIGHBOR_ADDRESS corresponds to the value IS_REACHABILITY_IPV6_NEIGHBOR_ADDRESS of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_IPV6_NEIGHBOR_ADDRESS E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 17
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_ATTRIBUTES corresponds to the value IS_REACHABILITY_LINK_ATTRIBUTES of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_ATTRIBUTES E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 18
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_DELAY corresponds to the value IS_REACHABILITY_LINK_DELAY of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_DELAY E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 19
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_DELAY_VARIATION corresponds to the value IS_REACHABILITY_LINK_DELAY_VARIATION of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_DELAY_VARIATION E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 20
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_ID corresponds to the value IS_REACHABILITY_LINK_ID of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_ID E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 21
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_LOSS corresponds to the value IS_REACHABILITY_LINK_LOSS of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_LOSS E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 22
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_PROTECTION_TYPE corresponds to the value IS_REACHABILITY_LINK_PROTECTION_TYPE of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_LINK_PROTECTION_TYPE E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 23
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_MAX_LINK_BANDWIDTH corresponds to the value IS_REACHABILITY_MAX_LINK_BANDWIDTH of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_MAX_LINK_BANDWIDTH E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 24
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_MAX_RESERVABLE_BANDWIDTH corresponds to the value IS_REACHABILITY_MAX_RESERVABLE_BANDWIDTH of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_MAX_RESERVABLE_BANDWIDTH E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 25
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_MIN_MAX_LINK_DELAY corresponds to the value IS_REACHABILITY_MIN_MAX_LINK_DELAY of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_MIN_MAX_LINK_DELAY E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 26
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_RESIDUAL_BANDWIDTH corresponds to the value IS_REACHABILITY_RESIDUAL_BANDWIDTH of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_RESIDUAL_BANDWIDTH E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 27
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_SUBTLVS_TYPE corresponds to the value IS_REACHABILITY_SUBTLVS_TYPE of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_SUBTLVS_TYPE E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 28
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_TE_DEFAULT_METRIC corresponds to the value IS_REACHABILITY_TE_DEFAULT_METRIC of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_TE_DEFAULT_METRIC E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 29
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_UNCONSTRAINED_LSP corresponds to the value IS_REACHABILITY_UNCONSTRAINED_LSP of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_UNCONSTRAINED_LSP E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 30
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_UNRESERVED_BANDWIDTH corresponds to the value IS_REACHABILITY_UNRESERVED_BANDWIDTH of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_UNRESERVED_BANDWIDTH E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 31
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_UTILIZED_BANDWIDTH corresponds to the value IS_REACHABILITY_UTILIZED_BANDWIDTH of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_IS_REACHABILITY_UTILIZED_BANDWIDTH E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 32
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_ROUTER_CAPABILITY_SR_ALGORITHM corresponds to the value ROUTER_CAPABILITY_SR_ALGORITHM of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_ROUTER_CAPABILITY_SR_ALGORITHM E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 33
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_ROUTER_CAPABILITY_SR_CAPABILITY corresponds to the value ROUTER_CAPABILITY_SR_CAPABILITY of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_ROUTER_CAPABILITY_SR_CAPABILITY E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 34
	// OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_ROUTER_CAPABILITY_SUBTLVS_TYPE corresponds to the value ROUTER_CAPABILITY_SUBTLVS_TYPE of OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE_ROUTER_CAPABILITY_SUBTLVS_TYPE E_OpenconfigIsisLsdbTypes_ISIS_SUBTLV_TYPE = 35
)

// E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE. An additional value named
// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE int64

// IsYANGGoEnum ensures that OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE.
func (E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_UNSET corresponds to the value UNSET of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_UNSET E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 0
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_AREA_ADDRESSES corresponds to the value AREA_ADDRESSES of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_AREA_ADDRESSES E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 1
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_AUTHENTICATION corresponds to the value AUTHENTICATION of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_AUTHENTICATION E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 2
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_DYNAMIC_NAME corresponds to the value DYNAMIC_NAME of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_DYNAMIC_NAME E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 3
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_EXTENDED_IPV4_REACHABILITY corresponds to the value EXTENDED_IPV4_REACHABILITY of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_EXTENDED_IPV4_REACHABILITY E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 4
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_EXTENDED_IS_REACHABILITY corresponds to the value EXTENDED_IS_REACHABILITY of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_EXTENDED_IS_REACHABILITY E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 5
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_IIS_NEIGHBORS corresponds to the value IIS_NEIGHBORS of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_IIS_NEIGHBORS E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 6
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_INSTANCE_ID corresponds to the value INSTANCE_ID of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_INSTANCE_ID E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 7
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_IPV4_EXTERNAL_REACHABILITY corresponds to the value IPV4_EXTERNAL_REACHABILITY of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_IPV4_EXTERNAL_REACHABILITY E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 8
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_IPV4_INTERFACE_ADDRESSES corresponds to the value IPV4_INTERFACE_ADDRESSES of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_IPV4_INTERFACE_ADDRESSES E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 9
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_IPV4_INTERNAL_REACHABILITY corresponds to the value IPV4_INTERNAL_REACHABILITY of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_IPV4_INTERNAL_REACHABILITY E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 10
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_IPV4_SRLG corresponds to the value IPV4_SRLG of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_IPV4_SRLG E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 11
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_IPV4_TE_ROUTER_ID corresponds to the value IPV4_TE_ROUTER_ID of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_IPV4_TE_ROUTER_ID E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 12
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_IPV6_INTERFACE_ADDRESSES corresponds to the value IPV6_INTERFACE_ADDRESSES of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_IPV6_INTERFACE_ADDRESSES E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 13
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_IPV6_REACHABILITY corresponds to the value IPV6_REACHABILITY of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_IPV6_REACHABILITY E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 14
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_IPV6_SRLG corresponds to the value IPV6_SRLG of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_IPV6_SRLG E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 15
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_IPV6_TE_ROUTER_ID corresponds to the value IPV6_TE_ROUTER_ID of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_IPV6_TE_ROUTER_ID E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 16
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_ISIS_ALIAS_ID corresponds to the value ISIS_ALIAS_ID of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_ISIS_ALIAS_ID E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 17
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_IS_NEIGHBOR_ATTRIBUTE corresponds to the value IS_NEIGHBOR_ATTRIBUTE of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_IS_NEIGHBOR_ATTRIBUTE E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 18
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_LSP_BUFFER_SIZE corresponds to the value LSP_BUFFER_SIZE of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_LSP_BUFFER_SIZE E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 19
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_MT_IPV4_REACHABILITY corresponds to the value MT_IPV4_REACHABILITY of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_MT_IPV4_REACHABILITY E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 20
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_MT_IPV6_REACHABILITY corresponds to the value MT_IPV6_REACHABILITY of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_MT_IPV6_REACHABILITY E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 21
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_MT_ISN corresponds to the value MT_ISN of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_MT_ISN E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 22
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_MT_IS_NEIGHBOR_ATTRIBUTE corresponds to the value MT_IS_NEIGHBOR_ATTRIBUTE of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_MT_IS_NEIGHBOR_ATTRIBUTE E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 23
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_MULTI_TOPOLOGY corresponds to the value MULTI_TOPOLOGY of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_MULTI_TOPOLOGY E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 24
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_NLPID corresponds to the value NLPID of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_NLPID E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 25
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_PURGE_OI corresponds to the value PURGE_OI of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_PURGE_OI E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 26
	// OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_ROUTER_CAPABILITY corresponds to the value ROUTER_CAPABILITY of OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE
	OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE_ROUTER_CAPABILITY E_OpenconfigIsisLsdbTypes_ISIS_TLV_TYPE = 27
)

// E_OpenconfigIsisTypes_AFI_SAFI_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsisTypes_AFI_SAFI_TYPE. An additional value named
// OpenconfigIsisTypes_AFI_SAFI_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsisTypes_AFI_SAFI_TYPE int64

// IsYANGGoEnum ensures that OpenconfigIsisTypes_AFI_SAFI_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigIsisTypes_AFI_SAFI_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsisTypes_AFI_SAFI_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsisTypes_AFI_SAFI_TYPE.
func (E_OpenconfigIsisTypes_AFI_SAFI_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIsisTypes_AFI_SAFI_TYPE_UNSET corresponds to the value UNSET of OpenconfigIsisTypes_AFI_SAFI_TYPE
	OpenconfigIsisTypes_AFI_SAFI_TYPE_UNSET E_OpenconfigIsisTypes_AFI_SAFI_TYPE = 0
	// OpenconfigIsisTypes_AFI_SAFI_TYPE_IPV4_MULTICAST corresponds to the value IPV4_MULTICAST of OpenconfigIsisTypes_AFI_SAFI_TYPE
	OpenconfigIsisTypes_AFI_SAFI_TYPE_IPV4_MULTICAST E_OpenconfigIsisTypes_AFI_SAFI_TYPE = 1
	// OpenconfigIsisTypes_AFI_SAFI_TYPE_IPV4_UNICAST corresponds to the value IPV4_UNICAST of OpenconfigIsisTypes_AFI_SAFI_TYPE
	OpenconfigIsisTypes_AFI_SAFI_TYPE_IPV4_UNICAST E_OpenconfigIsisTypes_AFI_SAFI_TYPE = 2
	// OpenconfigIsisTypes_AFI_SAFI_TYPE_IPV6_MULTICAST corresponds to the value IPV6_MULTICAST of OpenconfigIsisTypes_AFI_SAFI_TYPE
	OpenconfigIsisTypes_AFI_SAFI_TYPE_IPV6_MULTICAST E_OpenconfigIsisTypes_AFI_SAFI_TYPE = 3
	// OpenconfigIsisTypes_AFI_SAFI_TYPE_IPV6_UNICAST corresponds to the value IPV6_UNICAST of OpenconfigIsisTypes_AFI_SAFI_TYPE
	OpenconfigIsisTypes_AFI_SAFI_TYPE_IPV6_UNICAST E_OpenconfigIsisTypes_AFI_SAFI_TYPE = 4
)

// E_OpenconfigIsisTypes_AFI_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsisTypes_AFI_TYPE. An additional value named
// OpenconfigIsisTypes_AFI_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsisTypes_AFI_TYPE int64

// IsYANGGoEnum ensures that OpenconfigIsisTypes_AFI_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigIsisTypes_AFI_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsisTypes_AFI_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsisTypes_AFI_TYPE.
func (E_OpenconfigIsisTypes_AFI_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigIsisTypes_AFI_TYPE_UNSET corresponds to the value UNSET of OpenconfigIsisTypes_AFI_TYPE
	OpenconfigIsisTypes_AFI_TYPE_UNSET E_OpenconfigIsisTypes_AFI_TYPE = 0
	// OpenconfigIsisTypes_AFI_TYPE_IPV4 corresponds to the value IPV4 of OpenconfigIsisTypes_AFI_TYPE
	OpenconfigIsisTypes_AFI_TYPE_IPV4 E_OpenconfigIsisTypes_AFI_TYPE = 1
	// OpenconfigIsisTypes_AFI_TYPE_IPV6 corresponds to the value IPV6 of OpenconfigIsisTypes_AFI_TYPE
	OpenconfigIsisTypes_AFI_TYPE_IPV6 E_OpenconfigIsisTypes_AFI_TYPE = 2
)

// E_OpenconfigIsisTypes_OVERLOAD_RESET_TRIGGER_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsisTypes_OVERLOAD_RESET_TRIGGER_TYPE. An additional value named
// OpenconfigIsisTypes_OVERLOAD_RESET_TRIGGER_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsisTypes_OVERLOAD_RESET_TRIGGER_TYPE int64

// IsYANGGoEnum ensures that OpenconfigIsisTypes_OVERLOAD_RESET_TRIGGER_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigIsisTypes_OVERLOAD_RESET_TRIGGER_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsisTypes_OVERLOAD_RESET_TRIGGER_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsisTypes_OVERLOAD_RESET_TRIGGER_TYPE.
func (E_OpenconfigIsisTypes_OVERLOAD_RESET_TRIGGER_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIsisTypes_OVERLOAD_RESET_TRIGGER_TYPE_UNSET corresponds to the value UNSET of OpenconfigIsisTypes_OVERLOAD_RESET_TRIGGER_TYPE
	OpenconfigIsisTypes_OVERLOAD_RESET_TRIGGER_TYPE_UNSET E_OpenconfigIsisTypes_OVERLOAD_RESET_TRIGGER_TYPE = 0
	// OpenconfigIsisTypes_OVERLOAD_RESET_TRIGGER_TYPE_WAIT_FOR_BGP corresponds to the value WAIT_FOR_BGP of OpenconfigIsisTypes_OVERLOAD_RESET_TRIGGER_TYPE
	OpenconfigIsisTypes_OVERLOAD_RESET_TRIGGER_TYPE_WAIT_FOR_BGP E_OpenconfigIsisTypes_OVERLOAD_RESET_TRIGGER_TYPE = 1
	// OpenconfigIsisTypes_OVERLOAD_RESET_TRIGGER_TYPE_WAIT_FOR_SYSTEM corresponds to the value WAIT_FOR_SYSTEM of OpenconfigIsisTypes_OVERLOAD_RESET_TRIGGER_TYPE
	OpenconfigIsisTypes_OVERLOAD_RESET_TRIGGER_TYPE_WAIT_FOR_SYSTEM E_OpenconfigIsisTypes_OVERLOAD_RESET_TRIGGER_TYPE = 2
)

// E_OpenconfigIsisTypes_SAFI_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsisTypes_SAFI_TYPE. An additional value named
// OpenconfigIsisTypes_SAFI_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsisTypes_SAFI_TYPE int64

// IsYANGGoEnum ensures that OpenconfigIsisTypes_SAFI_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigIsisTypes_SAFI_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsisTypes_SAFI_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsisTypes_SAFI_TYPE.
func (E_OpenconfigIsisTypes_SAFI_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigIsisTypes_SAFI_TYPE_UNSET corresponds to the value UNSET of OpenconfigIsisTypes_SAFI_TYPE
	OpenconfigIsisTypes_SAFI_TYPE_UNSET E_OpenconfigIsisTypes_SAFI_TYPE = 0
	// OpenconfigIsisTypes_SAFI_TYPE_MULTICAST corresponds to the value MULTICAST of OpenconfigIsisTypes_SAFI_TYPE
	OpenconfigIsisTypes_SAFI_TYPE_MULTICAST E_OpenconfigIsisTypes_SAFI_TYPE = 1
	// OpenconfigIsisTypes_SAFI_TYPE_UNICAST corresponds to the value UNICAST of OpenconfigIsisTypes_SAFI_TYPE
	OpenconfigIsisTypes_SAFI_TYPE_UNICAST E_OpenconfigIsisTypes_SAFI_TYPE = 2
)

// E_OpenconfigIsis_AdaptiveTimerType is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsis_AdaptiveTimerType. An additional value named
// OpenconfigIsis_AdaptiveTimerType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsis_AdaptiveTimerType int64

// IsYANGGoEnum ensures that OpenconfigIsis_AdaptiveTimerType implements the yang.GoEnum
// interface. This ensures that OpenconfigIsis_AdaptiveTimerType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsis_AdaptiveTimerType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsis_AdaptiveTimerType.
func (E_OpenconfigIsis_AdaptiveTimerType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIsis_AdaptiveTimerType_UNSET corresponds to the value UNSET of OpenconfigIsis_AdaptiveTimerType
	OpenconfigIsis_AdaptiveTimerType_UNSET E_OpenconfigIsis_AdaptiveTimerType = 0
	// OpenconfigIsis_AdaptiveTimerType_LINEAR corresponds to the value LINEAR of OpenconfigIsis_AdaptiveTimerType
	OpenconfigIsis_AdaptiveTimerType_LINEAR E_OpenconfigIsis_AdaptiveTimerType = 1
	// OpenconfigIsis_AdaptiveTimerType_EXPONENTIAL corresponds to the value EXPONENTIAL of OpenconfigIsis_AdaptiveTimerType
	OpenconfigIsis_AdaptiveTimerType_EXPONENTIAL E_OpenconfigIsis_AdaptiveTimerType = 2
)

// E_OpenconfigIsis_AdjacencySid_Flags is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsis_AdjacencySid_Flags. An additional value named
// OpenconfigIsis_AdjacencySid_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsis_AdjacencySid_Flags int64

// IsYANGGoEnum ensures that OpenconfigIsis_AdjacencySid_Flags implements the yang.GoEnum
// interface. This ensures that OpenconfigIsis_AdjacencySid_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsis_AdjacencySid_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsis_AdjacencySid_Flags.
func (E_OpenconfigIsis_AdjacencySid_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIsis_AdjacencySid_Flags_UNSET corresponds to the value UNSET of OpenconfigIsis_AdjacencySid_Flags
	OpenconfigIsis_AdjacencySid_Flags_UNSET E_OpenconfigIsis_AdjacencySid_Flags = 0
	// OpenconfigIsis_AdjacencySid_Flags_ADDRESS_FAMILY corresponds to the value ADDRESS_FAMILY of OpenconfigIsis_AdjacencySid_Flags
	OpenconfigIsis_AdjacencySid_Flags_ADDRESS_FAMILY E_OpenconfigIsis_AdjacencySid_Flags = 1
	// OpenconfigIsis_AdjacencySid_Flags_BACKUP corresponds to the value BACKUP of OpenconfigIsis_AdjacencySid_Flags
	OpenconfigIsis_AdjacencySid_Flags_BACKUP E_OpenconfigIsis_AdjacencySid_Flags = 2
	// OpenconfigIsis_AdjacencySid_Flags_VALUE corresponds to the value VALUE of OpenconfigIsis_AdjacencySid_Flags
	OpenconfigIsis_AdjacencySid_Flags_VALUE E_OpenconfigIsis_AdjacencySid_Flags = 3
	// OpenconfigIsis_AdjacencySid_Flags_LOCAL corresponds to the value LOCAL of OpenconfigIsis_AdjacencySid_Flags
	OpenconfigIsis_AdjacencySid_Flags_LOCAL E_OpenconfigIsis_AdjacencySid_Flags = 4
	// OpenconfigIsis_AdjacencySid_Flags_SET corresponds to the value SET of OpenconfigIsis_AdjacencySid_Flags
	OpenconfigIsis_AdjacencySid_Flags_SET E_OpenconfigIsis_AdjacencySid_Flags = 5
)

// E_OpenconfigIsis_Adjacency_Nlpid is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsis_Adjacency_Nlpid. An additional value named
// OpenconfigIsis_Adjacency_Nlpid_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsis_Adjacency_Nlpid int64

// IsYANGGoEnum ensures that OpenconfigIsis_Adjacency_Nlpid implements the yang.GoEnum
// interface. This ensures that OpenconfigIsis_Adjacency_Nlpid can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsis_Adjacency_Nlpid) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsis_Adjacency_Nlpid.
func (E_OpenconfigIsis_Adjacency_Nlpid) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIsis_Adjacency_Nlpid_UNSET corresponds to the value UNSET of OpenconfigIsis_Adjacency_Nlpid
	OpenconfigIsis_Adjacency_Nlpid_UNSET E_OpenconfigIsis_Adjacency_Nlpid = 0
	// OpenconfigIsis_Adjacency_Nlpid_IPV4 corresponds to the value IPV4 of OpenconfigIsis_Adjacency_Nlpid
	OpenconfigIsis_Adjacency_Nlpid_IPV4 E_OpenconfigIsis_Adjacency_Nlpid = 1
	// OpenconfigIsis_Adjacency_Nlpid_IPV6 corresponds to the value IPV6 of OpenconfigIsis_Adjacency_Nlpid
	OpenconfigIsis_Adjacency_Nlpid_IPV6 E_OpenconfigIsis_Adjacency_Nlpid = 2
)

// E_OpenconfigIsis_Authentication_CryptoType is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsis_Authentication_CryptoType. An additional value named
// OpenconfigIsis_Authentication_CryptoType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsis_Authentication_CryptoType int64

// IsYANGGoEnum ensures that OpenconfigIsis_Authentication_CryptoType implements the yang.GoEnum
// interface. This ensures that OpenconfigIsis_Authentication_CryptoType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsis_Authentication_CryptoType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsis_Authentication_CryptoType.
func (E_OpenconfigIsis_Authentication_CryptoType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIsis_Authentication_CryptoType_UNSET corresponds to the value UNSET of OpenconfigIsis_Authentication_CryptoType
	OpenconfigIsis_Authentication_CryptoType_UNSET E_OpenconfigIsis_Authentication_CryptoType = 0
	// OpenconfigIsis_Authentication_CryptoType_HMAC_MD5 corresponds to the value HMAC_MD5 of OpenconfigIsis_Authentication_CryptoType
	OpenconfigIsis_Authentication_CryptoType_HMAC_MD5 E_OpenconfigIsis_Authentication_CryptoType = 1
	// OpenconfigIsis_Authentication_CryptoType_CLEARTEXT corresponds to the value CLEARTEXT of OpenconfigIsis_Authentication_CryptoType
	OpenconfigIsis_Authentication_CryptoType_CLEARTEXT E_OpenconfigIsis_Authentication_CryptoType = 2
)

// E_OpenconfigIsis_Capability_Flags is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsis_Capability_Flags. An additional value named
// OpenconfigIsis_Capability_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsis_Capability_Flags int64

// IsYANGGoEnum ensures that OpenconfigIsis_Capability_Flags implements the yang.GoEnum
// interface. This ensures that OpenconfigIsis_Capability_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsis_Capability_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsis_Capability_Flags.
func (E_OpenconfigIsis_Capability_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIsis_Capability_Flags_UNSET corresponds to the value UNSET of OpenconfigIsis_Capability_Flags
	OpenconfigIsis_Capability_Flags_UNSET E_OpenconfigIsis_Capability_Flags = 0
	// OpenconfigIsis_Capability_Flags_FLOOD corresponds to the value FLOOD of OpenconfigIsis_Capability_Flags
	OpenconfigIsis_Capability_Flags_FLOOD E_OpenconfigIsis_Capability_Flags = 1
	// OpenconfigIsis_Capability_Flags_DOWN corresponds to the value DOWN of OpenconfigIsis_Capability_Flags
	OpenconfigIsis_Capability_Flags_DOWN E_OpenconfigIsis_Capability_Flags = 2
)

// E_OpenconfigIsis_CircuitType is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsis_CircuitType. An additional value named
// OpenconfigIsis_CircuitType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsis_CircuitType int64

// IsYANGGoEnum ensures that OpenconfigIsis_CircuitType implements the yang.GoEnum
// interface. This ensures that OpenconfigIsis_CircuitType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsis_CircuitType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsis_CircuitType.
func (E_OpenconfigIsis_CircuitType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigIsis_CircuitType_UNSET corresponds to the value UNSET of OpenconfigIsis_CircuitType
	OpenconfigIsis_CircuitType_UNSET E_OpenconfigIsis_CircuitType = 0
	// OpenconfigIsis_CircuitType_POINT_TO_POINT corresponds to the value POINT_TO_POINT of OpenconfigIsis_CircuitType
	OpenconfigIsis_CircuitType_POINT_TO_POINT E_OpenconfigIsis_CircuitType = 1
	// OpenconfigIsis_CircuitType_BROADCAST corresponds to the value BROADCAST of OpenconfigIsis_CircuitType
	OpenconfigIsis_CircuitType_BROADCAST E_OpenconfigIsis_CircuitType = 2
)

// E_OpenconfigIsis_DefaultMetric_Flags is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsis_DefaultMetric_Flags. An additional value named
// OpenconfigIsis_DefaultMetric_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsis_DefaultMetric_Flags int64

// IsYANGGoEnum ensures that OpenconfigIsis_DefaultMetric_Flags implements the yang.GoEnum
// interface. This ensures that OpenconfigIsis_DefaultMetric_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsis_DefaultMetric_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsis_DefaultMetric_Flags.
func (E_OpenconfigIsis_DefaultMetric_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIsis_DefaultMetric_Flags_UNSET corresponds to the value UNSET of OpenconfigIsis_DefaultMetric_Flags
	OpenconfigIsis_DefaultMetric_Flags_UNSET E_OpenconfigIsis_DefaultMetric_Flags = 0
	// OpenconfigIsis_DefaultMetric_Flags_INTERNAL corresponds to the value INTERNAL of OpenconfigIsis_DefaultMetric_Flags
	OpenconfigIsis_DefaultMetric_Flags_INTERNAL E_OpenconfigIsis_DefaultMetric_Flags = 1
)

// E_OpenconfigIsis_Flags_Flags is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsis_Flags_Flags. An additional value named
// OpenconfigIsis_Flags_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsis_Flags_Flags int64

// IsYANGGoEnum ensures that OpenconfigIsis_Flags_Flags implements the yang.GoEnum
// interface. This ensures that OpenconfigIsis_Flags_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsis_Flags_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsis_Flags_Flags.
func (E_OpenconfigIsis_Flags_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigIsis_Flags_Flags_UNSET corresponds to the value UNSET of OpenconfigIsis_Flags_Flags
	OpenconfigIsis_Flags_Flags_UNSET E_OpenconfigIsis_Flags_Flags = 0
	// OpenconfigIsis_Flags_Flags_EXTERNAL_FLAG corresponds to the value EXTERNAL_FLAG of OpenconfigIsis_Flags_Flags
	OpenconfigIsis_Flags_Flags_EXTERNAL_FLAG E_OpenconfigIsis_Flags_Flags = 1
	// OpenconfigIsis_Flags_Flags_READVERTISEMENT_FLAG corresponds to the value READVERTISEMENT_FLAG of OpenconfigIsis_Flags_Flags
	OpenconfigIsis_Flags_Flags_READVERTISEMENT_FLAG E_OpenconfigIsis_Flags_Flags = 2
	// OpenconfigIsis_Flags_Flags_NODE_FLAG corresponds to the value NODE_FLAG of OpenconfigIsis_Flags_Flags
	OpenconfigIsis_Flags_Flags_NODE_FLAG E_OpenconfigIsis_Flags_Flags = 3
)

// E_OpenconfigIsis_HelloPaddingType is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsis_HelloPaddingType. An additional value named
// OpenconfigIsis_HelloPaddingType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsis_HelloPaddingType int64

// IsYANGGoEnum ensures that OpenconfigIsis_HelloPaddingType implements the yang.GoEnum
// interface. This ensures that OpenconfigIsis_HelloPaddingType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsis_HelloPaddingType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsis_HelloPaddingType.
func (E_OpenconfigIsis_HelloPaddingType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIsis_HelloPaddingType_UNSET corresponds to the value UNSET of OpenconfigIsis_HelloPaddingType
	OpenconfigIsis_HelloPaddingType_UNSET E_OpenconfigIsis_HelloPaddingType = 0
	// OpenconfigIsis_HelloPaddingType_STRICT corresponds to the value STRICT of OpenconfigIsis_HelloPaddingType
	OpenconfigIsis_HelloPaddingType_STRICT E_OpenconfigIsis_HelloPaddingType = 1
	// OpenconfigIsis_HelloPaddingType_LOOSE corresponds to the value LOOSE of OpenconfigIsis_HelloPaddingType
	OpenconfigIsis_HelloPaddingType_LOOSE E_OpenconfigIsis_HelloPaddingType = 2
	// OpenconfigIsis_HelloPaddingType_ADAPTIVE corresponds to the value ADAPTIVE of OpenconfigIsis_HelloPaddingType
	OpenconfigIsis_HelloPaddingType_ADAPTIVE E_OpenconfigIsis_HelloPaddingType = 3
	// OpenconfigIsis_HelloPaddingType_DISABLE corresponds to the value DISABLE of OpenconfigIsis_HelloPaddingType
	OpenconfigIsis_HelloPaddingType_DISABLE E_OpenconfigIsis_HelloPaddingType = 4
)

// E_OpenconfigIsis_Ipv4Srlg_Flags is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsis_Ipv4Srlg_Flags. An additional value named
// OpenconfigIsis_Ipv4Srlg_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsis_Ipv4Srlg_Flags int64

// IsYANGGoEnum ensures that OpenconfigIsis_Ipv4Srlg_Flags implements the yang.GoEnum
// interface. This ensures that OpenconfigIsis_Ipv4Srlg_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsis_Ipv4Srlg_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsis_Ipv4Srlg_Flags.
func (E_OpenconfigIsis_Ipv4Srlg_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigIsis_Ipv4Srlg_Flags_UNSET corresponds to the value UNSET of OpenconfigIsis_Ipv4Srlg_Flags
	OpenconfigIsis_Ipv4Srlg_Flags_UNSET E_OpenconfigIsis_Ipv4Srlg_Flags = 0
	// OpenconfigIsis_Ipv4Srlg_Flags_NUMBERED corresponds to the value NUMBERED of OpenconfigIsis_Ipv4Srlg_Flags
	OpenconfigIsis_Ipv4Srlg_Flags_NUMBERED E_OpenconfigIsis_Ipv4Srlg_Flags = 1
)

// E_OpenconfigIsis_Ipv6Srlg_Flags is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsis_Ipv6Srlg_Flags. An additional value named
// OpenconfigIsis_Ipv6Srlg_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsis_Ipv6Srlg_Flags int64

// IsYANGGoEnum ensures that OpenconfigIsis_Ipv6Srlg_Flags implements the yang.GoEnum
// interface. This ensures that OpenconfigIsis_Ipv6Srlg_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsis_Ipv6Srlg_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsis_Ipv6Srlg_Flags.
func (E_OpenconfigIsis_Ipv6Srlg_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigIsis_Ipv6Srlg_Flags_UNSET corresponds to the value UNSET of OpenconfigIsis_Ipv6Srlg_Flags
	OpenconfigIsis_Ipv6Srlg_Flags_UNSET E_OpenconfigIsis_Ipv6Srlg_Flags = 0
	// OpenconfigIsis_Ipv6Srlg_Flags_NA corresponds to the value NA of OpenconfigIsis_Ipv6Srlg_Flags
	OpenconfigIsis_Ipv6Srlg_Flags_NA E_OpenconfigIsis_Ipv6Srlg_Flags = 1
)

// E_OpenconfigIsis_IsisInterfaceAdjState is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsis_IsisInterfaceAdjState. An additional value named
// OpenconfigIsis_IsisInterfaceAdjState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsis_IsisInterfaceAdjState int64

// IsYANGGoEnum ensures that OpenconfigIsis_IsisInterfaceAdjState implements the yang.GoEnum
// interface. This ensures that OpenconfigIsis_IsisInterfaceAdjState can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsis_IsisInterfaceAdjState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsis_IsisInterfaceAdjState.
func (E_OpenconfigIsis_IsisInterfaceAdjState) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIsis_IsisInterfaceAdjState_UNSET corresponds to the value UNSET of OpenconfigIsis_IsisInterfaceAdjState
	OpenconfigIsis_IsisInterfaceAdjState_UNSET E_OpenconfigIsis_IsisInterfaceAdjState = 0
	// OpenconfigIsis_IsisInterfaceAdjState_UP corresponds to the value UP of OpenconfigIsis_IsisInterfaceAdjState
	OpenconfigIsis_IsisInterfaceAdjState_UP E_OpenconfigIsis_IsisInterfaceAdjState = 1
	// OpenconfigIsis_IsisInterfaceAdjState_DOWN corresponds to the value DOWN of OpenconfigIsis_IsisInterfaceAdjState
	OpenconfigIsis_IsisInterfaceAdjState_DOWN E_OpenconfigIsis_IsisInterfaceAdjState = 2
	// OpenconfigIsis_IsisInterfaceAdjState_INIT corresponds to the value INIT of OpenconfigIsis_IsisInterfaceAdjState
	OpenconfigIsis_IsisInterfaceAdjState_INIT E_OpenconfigIsis_IsisInterfaceAdjState = 3
	// OpenconfigIsis_IsisInterfaceAdjState_FAILED corresponds to the value FAILED of OpenconfigIsis_IsisInterfaceAdjState
	OpenconfigIsis_IsisInterfaceAdjState_FAILED E_OpenconfigIsis_IsisInterfaceAdjState = 4
)

// E_OpenconfigIsis_IsisMetricFlags is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsis_IsisMetricFlags. An additional value named
// OpenconfigIsis_IsisMetricFlags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsis_IsisMetricFlags int64

// IsYANGGoEnum ensures that OpenconfigIsis_IsisMetricFlags implements the yang.GoEnum
// interface. This ensures that OpenconfigIsis_IsisMetricFlags can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsis_IsisMetricFlags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsis_IsisMetricFlags.
func (E_OpenconfigIsis_IsisMetricFlags) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIsis_IsisMetricFlags_UNSET corresponds to the value UNSET of OpenconfigIsis_IsisMetricFlags
	OpenconfigIsis_IsisMetricFlags_UNSET E_OpenconfigIsis_IsisMetricFlags = 0
	// OpenconfigIsis_IsisMetricFlags_INTERNAL corresponds to the value INTERNAL of OpenconfigIsis_IsisMetricFlags
	OpenconfigIsis_IsisMetricFlags_INTERNAL E_OpenconfigIsis_IsisMetricFlags = 1
	// OpenconfigIsis_IsisMetricFlags_UNSUPPORTED corresponds to the value UNSUPPORTED of OpenconfigIsis_IsisMetricFlags
	OpenconfigIsis_IsisMetricFlags_UNSUPPORTED E_OpenconfigIsis_IsisMetricFlags = 2
)

// E_OpenconfigIsis_LanAdjacencySid_Flags is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsis_LanAdjacencySid_Flags. An additional value named
// OpenconfigIsis_LanAdjacencySid_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsis_LanAdjacencySid_Flags int64

// IsYANGGoEnum ensures that OpenconfigIsis_LanAdjacencySid_Flags implements the yang.GoEnum
// interface. This ensures that OpenconfigIsis_LanAdjacencySid_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsis_LanAdjacencySid_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsis_LanAdjacencySid_Flags.
func (E_OpenconfigIsis_LanAdjacencySid_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIsis_LanAdjacencySid_Flags_UNSET corresponds to the value UNSET of OpenconfigIsis_LanAdjacencySid_Flags
	OpenconfigIsis_LanAdjacencySid_Flags_UNSET E_OpenconfigIsis_LanAdjacencySid_Flags = 0
	// OpenconfigIsis_LanAdjacencySid_Flags_ADDRESS_FAMILY corresponds to the value ADDRESS_FAMILY of OpenconfigIsis_LanAdjacencySid_Flags
	OpenconfigIsis_LanAdjacencySid_Flags_ADDRESS_FAMILY E_OpenconfigIsis_LanAdjacencySid_Flags = 1
	// OpenconfigIsis_LanAdjacencySid_Flags_BACKUP corresponds to the value BACKUP of OpenconfigIsis_LanAdjacencySid_Flags
	OpenconfigIsis_LanAdjacencySid_Flags_BACKUP E_OpenconfigIsis_LanAdjacencySid_Flags = 2
	// OpenconfigIsis_LanAdjacencySid_Flags_VALUE corresponds to the value VALUE of OpenconfigIsis_LanAdjacencySid_Flags
	OpenconfigIsis_LanAdjacencySid_Flags_VALUE E_OpenconfigIsis_LanAdjacencySid_Flags = 3
	// OpenconfigIsis_LanAdjacencySid_Flags_LOCAL corresponds to the value LOCAL of OpenconfigIsis_LanAdjacencySid_Flags
	OpenconfigIsis_LanAdjacencySid_Flags_LOCAL E_OpenconfigIsis_LanAdjacencySid_Flags = 4
	// OpenconfigIsis_LanAdjacencySid_Flags_SET corresponds to the value SET of OpenconfigIsis_LanAdjacencySid_Flags
	OpenconfigIsis_LanAdjacencySid_Flags_SET E_OpenconfigIsis_LanAdjacencySid_Flags = 5
)

// E_OpenconfigIsis_LevelType is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsis_LevelType. An additional value named
// OpenconfigIsis_LevelType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsis_LevelType int64

// IsYANGGoEnum ensures that OpenconfigIsis_LevelType implements the yang.GoEnum
// interface. This ensures that OpenconfigIsis_LevelType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsis_LevelType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsis_LevelType.
func (E_OpenconfigIsis_LevelType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigIsis_LevelType_UNSET corresponds to the value UNSET of OpenconfigIsis_LevelType
	OpenconfigIsis_LevelType_UNSET E_OpenconfigIsis_LevelType = 0
	// OpenconfigIsis_LevelType_LEVEL_1 corresponds to the value LEVEL_1 of OpenconfigIsis_LevelType
	OpenconfigIsis_LevelType_LEVEL_1 E_OpenconfigIsis_LevelType = 1
	// OpenconfigIsis_LevelType_LEVEL_2 corresponds to the value LEVEL_2 of OpenconfigIsis_LevelType
	OpenconfigIsis_LevelType_LEVEL_2 E_OpenconfigIsis_LevelType = 2
	// OpenconfigIsis_LevelType_LEVEL_1_2 corresponds to the value LEVEL_1_2 of OpenconfigIsis_LevelType
	OpenconfigIsis_LevelType_LEVEL_1_2 E_OpenconfigIsis_LevelType = 3
)

// E_OpenconfigIsis_LinkAttributes_LocalProtection is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsis_LinkAttributes_LocalProtection. An additional value named
// OpenconfigIsis_LinkAttributes_LocalProtection_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsis_LinkAttributes_LocalProtection int64

// IsYANGGoEnum ensures that OpenconfigIsis_LinkAttributes_LocalProtection implements the yang.GoEnum
// interface. This ensures that OpenconfigIsis_LinkAttributes_LocalProtection can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsis_LinkAttributes_LocalProtection) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsis_LinkAttributes_LocalProtection.
func (E_OpenconfigIsis_LinkAttributes_LocalProtection) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIsis_LinkAttributes_LocalProtection_UNSET corresponds to the value UNSET of OpenconfigIsis_LinkAttributes_LocalProtection
	OpenconfigIsis_LinkAttributes_LocalProtection_UNSET E_OpenconfigIsis_LinkAttributes_LocalProtection = 0
	// OpenconfigIsis_LinkAttributes_LocalProtection_LOCAL_PROTECTION corresponds to the value LOCAL_PROTECTION of OpenconfigIsis_LinkAttributes_LocalProtection
	OpenconfigIsis_LinkAttributes_LocalProtection_LOCAL_PROTECTION E_OpenconfigIsis_LinkAttributes_LocalProtection = 1
	// OpenconfigIsis_LinkAttributes_LocalProtection_LINK_EXCLUDED corresponds to the value LINK_EXCLUDED of OpenconfigIsis_LinkAttributes_LocalProtection
	OpenconfigIsis_LinkAttributes_LocalProtection_LINK_EXCLUDED E_OpenconfigIsis_LinkAttributes_LocalProtection = 2
)

// E_OpenconfigIsis_LinkProtectionType_Type is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsis_LinkProtectionType_Type. An additional value named
// OpenconfigIsis_LinkProtectionType_Type_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsis_LinkProtectionType_Type int64

// IsYANGGoEnum ensures that OpenconfigIsis_LinkProtectionType_Type implements the yang.GoEnum
// interface. This ensures that OpenconfigIsis_LinkProtectionType_Type can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsis_LinkProtectionType_Type) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsis_LinkProtectionType_Type.
func (E_OpenconfigIsis_LinkProtectionType_Type) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIsis_LinkProtectionType_Type_UNSET corresponds to the value UNSET of OpenconfigIsis_LinkProtectionType_Type
	OpenconfigIsis_LinkProtectionType_Type_UNSET E_OpenconfigIsis_LinkProtectionType_Type = 0
	// OpenconfigIsis_LinkProtectionType_Type_EXTRA_TRAFFIC corresponds to the value EXTRA_TRAFFIC of OpenconfigIsis_LinkProtectionType_Type
	OpenconfigIsis_LinkProtectionType_Type_EXTRA_TRAFFIC E_OpenconfigIsis_LinkProtectionType_Type = 1
	// OpenconfigIsis_LinkProtectionType_Type_UNPROTECTED corresponds to the value UNPROTECTED of OpenconfigIsis_LinkProtectionType_Type
	OpenconfigIsis_LinkProtectionType_Type_UNPROTECTED E_OpenconfigIsis_LinkProtectionType_Type = 2
	// OpenconfigIsis_LinkProtectionType_Type_SHARED corresponds to the value SHARED of OpenconfigIsis_LinkProtectionType_Type
	OpenconfigIsis_LinkProtectionType_Type_SHARED E_OpenconfigIsis_LinkProtectionType_Type = 3
	// OpenconfigIsis_LinkProtectionType_Type_ONE_ONE corresponds to the value ONE_ONE of OpenconfigIsis_LinkProtectionType_Type
	OpenconfigIsis_LinkProtectionType_Type_ONE_ONE E_OpenconfigIsis_LinkProtectionType_Type = 4
	// OpenconfigIsis_LinkProtectionType_Type_PLUS_ONE corresponds to the value PLUS_ONE of OpenconfigIsis_LinkProtectionType_Type
	OpenconfigIsis_LinkProtectionType_Type_PLUS_ONE E_OpenconfigIsis_LinkProtectionType_Type = 5
	// OpenconfigIsis_LinkProtectionType_Type_ENHANCED corresponds to the value ENHANCED of OpenconfigIsis_LinkProtectionType_Type
	OpenconfigIsis_LinkProtectionType_Type_ENHANCED E_OpenconfigIsis_LinkProtectionType_Type = 6
)

// E_OpenconfigIsis_Lsp_Flags is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsis_Lsp_Flags. An additional value named
// OpenconfigIsis_Lsp_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsis_Lsp_Flags int64

// IsYANGGoEnum ensures that OpenconfigIsis_Lsp_Flags implements the yang.GoEnum
// interface. This ensures that OpenconfigIsis_Lsp_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsis_Lsp_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsis_Lsp_Flags.
func (E_OpenconfigIsis_Lsp_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigIsis_Lsp_Flags_UNSET corresponds to the value UNSET of OpenconfigIsis_Lsp_Flags
	OpenconfigIsis_Lsp_Flags_UNSET E_OpenconfigIsis_Lsp_Flags = 0
	// OpenconfigIsis_Lsp_Flags_PARTITION_REPAIR corresponds to the value PARTITION_REPAIR of OpenconfigIsis_Lsp_Flags
	OpenconfigIsis_Lsp_Flags_PARTITION_REPAIR E_OpenconfigIsis_Lsp_Flags = 1
	// OpenconfigIsis_Lsp_Flags_ATTACHED_ERROR corresponds to the value ATTACHED_ERROR of OpenconfigIsis_Lsp_Flags
	OpenconfigIsis_Lsp_Flags_ATTACHED_ERROR E_OpenconfigIsis_Lsp_Flags = 2
	// OpenconfigIsis_Lsp_Flags_ATTACHED_EXPENSE corresponds to the value ATTACHED_EXPENSE of OpenconfigIsis_Lsp_Flags
	OpenconfigIsis_Lsp_Flags_ATTACHED_EXPENSE E_OpenconfigIsis_Lsp_Flags = 3
	// OpenconfigIsis_Lsp_Flags_ATTACHED_DELAY corresponds to the value ATTACHED_DELAY of OpenconfigIsis_Lsp_Flags
	OpenconfigIsis_Lsp_Flags_ATTACHED_DELAY E_OpenconfigIsis_Lsp_Flags = 4
	// OpenconfigIsis_Lsp_Flags_ATTACHED_DEFAULT corresponds to the value ATTACHED_DEFAULT of OpenconfigIsis_Lsp_Flags
	OpenconfigIsis_Lsp_Flags_ATTACHED_DEFAULT E_OpenconfigIsis_Lsp_Flags = 5
	// OpenconfigIsis_Lsp_Flags_OVERLOAD corresponds to the value OVERLOAD of OpenconfigIsis_Lsp_Flags
	OpenconfigIsis_Lsp_Flags_OVERLOAD E_OpenconfigIsis_Lsp_Flags = 6
)

// E_OpenconfigIsis_Lsp_PduType is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsis_Lsp_PduType. An additional value named
// OpenconfigIsis_Lsp_PduType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsis_Lsp_PduType int64

// IsYANGGoEnum ensures that OpenconfigIsis_Lsp_PduType implements the yang.GoEnum
// interface. This ensures that OpenconfigIsis_Lsp_PduType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsis_Lsp_PduType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsis_Lsp_PduType.
func (E_OpenconfigIsis_Lsp_PduType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigIsis_Lsp_PduType_UNSET corresponds to the value UNSET of OpenconfigIsis_Lsp_PduType
	OpenconfigIsis_Lsp_PduType_UNSET E_OpenconfigIsis_Lsp_PduType = 0
	// OpenconfigIsis_Lsp_PduType_LEVEL_1 corresponds to the value LEVEL_1 of OpenconfigIsis_Lsp_PduType
	OpenconfigIsis_Lsp_PduType_LEVEL_1 E_OpenconfigIsis_Lsp_PduType = 1
	// OpenconfigIsis_Lsp_PduType_LEVEL_2 corresponds to the value LEVEL_2 of OpenconfigIsis_Lsp_PduType
	OpenconfigIsis_Lsp_PduType_LEVEL_2 E_OpenconfigIsis_Lsp_PduType = 2
)

// E_OpenconfigIsis_MetricStyle is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsis_MetricStyle. An additional value named
// OpenconfigIsis_MetricStyle_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsis_MetricStyle int64

// IsYANGGoEnum ensures that OpenconfigIsis_MetricStyle implements the yang.GoEnum
// interface. This ensures that OpenconfigIsis_MetricStyle can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsis_MetricStyle) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsis_MetricStyle.
func (E_OpenconfigIsis_MetricStyle) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigIsis_MetricStyle_UNSET corresponds to the value UNSET of OpenconfigIsis_MetricStyle
	OpenconfigIsis_MetricStyle_UNSET E_OpenconfigIsis_MetricStyle = 0
	// OpenconfigIsis_MetricStyle_NARROW_METRIC corresponds to the value NARROW_METRIC of OpenconfigIsis_MetricStyle
	OpenconfigIsis_MetricStyle_NARROW_METRIC E_OpenconfigIsis_MetricStyle = 1
	// OpenconfigIsis_MetricStyle_WIDE_METRIC corresponds to the value WIDE_METRIC of OpenconfigIsis_MetricStyle
	OpenconfigIsis_MetricStyle_WIDE_METRIC E_OpenconfigIsis_MetricStyle = 2
)

// E_OpenconfigIsis_Nlpid_Nlpid is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsis_Nlpid_Nlpid. An additional value named
// OpenconfigIsis_Nlpid_Nlpid_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsis_Nlpid_Nlpid int64

// IsYANGGoEnum ensures that OpenconfigIsis_Nlpid_Nlpid implements the yang.GoEnum
// interface. This ensures that OpenconfigIsis_Nlpid_Nlpid can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsis_Nlpid_Nlpid) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsis_Nlpid_Nlpid.
func (E_OpenconfigIsis_Nlpid_Nlpid) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigIsis_Nlpid_Nlpid_UNSET corresponds to the value UNSET of OpenconfigIsis_Nlpid_Nlpid
	OpenconfigIsis_Nlpid_Nlpid_UNSET E_OpenconfigIsis_Nlpid_Nlpid = 0
	// OpenconfigIsis_Nlpid_Nlpid_IPV4 corresponds to the value IPV4 of OpenconfigIsis_Nlpid_Nlpid
	OpenconfigIsis_Nlpid_Nlpid_IPV4 E_OpenconfigIsis_Nlpid_Nlpid = 1
	// OpenconfigIsis_Nlpid_Nlpid_IPV6 corresponds to the value IPV6 of OpenconfigIsis_Nlpid_Nlpid
	OpenconfigIsis_Nlpid_Nlpid_IPV6 E_OpenconfigIsis_Nlpid_Nlpid = 2
)

// E_OpenconfigIsis_PrefixSid_Flags is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsis_PrefixSid_Flags. An additional value named
// OpenconfigIsis_PrefixSid_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsis_PrefixSid_Flags int64

// IsYANGGoEnum ensures that OpenconfigIsis_PrefixSid_Flags implements the yang.GoEnum
// interface. This ensures that OpenconfigIsis_PrefixSid_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsis_PrefixSid_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsis_PrefixSid_Flags.
func (E_OpenconfigIsis_PrefixSid_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIsis_PrefixSid_Flags_UNSET corresponds to the value UNSET of OpenconfigIsis_PrefixSid_Flags
	OpenconfigIsis_PrefixSid_Flags_UNSET E_OpenconfigIsis_PrefixSid_Flags = 0
	// OpenconfigIsis_PrefixSid_Flags_READVERTISEMENT corresponds to the value READVERTISEMENT of OpenconfigIsis_PrefixSid_Flags
	OpenconfigIsis_PrefixSid_Flags_READVERTISEMENT E_OpenconfigIsis_PrefixSid_Flags = 1
	// OpenconfigIsis_PrefixSid_Flags_NODE corresponds to the value NODE of OpenconfigIsis_PrefixSid_Flags
	OpenconfigIsis_PrefixSid_Flags_NODE E_OpenconfigIsis_PrefixSid_Flags = 2
	// OpenconfigIsis_PrefixSid_Flags_NO_PHP corresponds to the value NO_PHP of OpenconfigIsis_PrefixSid_Flags
	OpenconfigIsis_PrefixSid_Flags_NO_PHP E_OpenconfigIsis_PrefixSid_Flags = 3
	// OpenconfigIsis_PrefixSid_Flags_EXPLICIT_NULL corresponds to the value EXPLICIT_NULL of OpenconfigIsis_PrefixSid_Flags
	OpenconfigIsis_PrefixSid_Flags_EXPLICIT_NULL E_OpenconfigIsis_PrefixSid_Flags = 4
	// OpenconfigIsis_PrefixSid_Flags_VALUE corresponds to the value VALUE of OpenconfigIsis_PrefixSid_Flags
	OpenconfigIsis_PrefixSid_Flags_VALUE E_OpenconfigIsis_PrefixSid_Flags = 5
	// OpenconfigIsis_PrefixSid_Flags_LOCAL corresponds to the value LOCAL of OpenconfigIsis_PrefixSid_Flags
	OpenconfigIsis_PrefixSid_Flags_LOCAL E_OpenconfigIsis_PrefixSid_Flags = 6
)

// E_OpenconfigIsis_SegmentRoutingAlgorithms_Algorithm is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsis_SegmentRoutingAlgorithms_Algorithm. An additional value named
// OpenconfigIsis_SegmentRoutingAlgorithms_Algorithm_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsis_SegmentRoutingAlgorithms_Algorithm int64

// IsYANGGoEnum ensures that OpenconfigIsis_SegmentRoutingAlgorithms_Algorithm implements the yang.GoEnum
// interface. This ensures that OpenconfigIsis_SegmentRoutingAlgorithms_Algorithm can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsis_SegmentRoutingAlgorithms_Algorithm) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsis_SegmentRoutingAlgorithms_Algorithm.
func (E_OpenconfigIsis_SegmentRoutingAlgorithms_Algorithm) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIsis_SegmentRoutingAlgorithms_Algorithm_UNSET corresponds to the value UNSET of OpenconfigIsis_SegmentRoutingAlgorithms_Algorithm
	OpenconfigIsis_SegmentRoutingAlgorithms_Algorithm_UNSET E_OpenconfigIsis_SegmentRoutingAlgorithms_Algorithm = 0
	// OpenconfigIsis_SegmentRoutingAlgorithms_Algorithm_SPF corresponds to the value SPF of OpenconfigIsis_SegmentRoutingAlgorithms_Algorithm
	OpenconfigIsis_SegmentRoutingAlgorithms_Algorithm_SPF E_OpenconfigIsis_SegmentRoutingAlgorithms_Algorithm = 1
	// OpenconfigIsis_SegmentRoutingAlgorithms_Algorithm_STRICT_SPF corresponds to the value STRICT_SPF of OpenconfigIsis_SegmentRoutingAlgorithms_Algorithm
	OpenconfigIsis_SegmentRoutingAlgorithms_Algorithm_STRICT_SPF E_OpenconfigIsis_SegmentRoutingAlgorithms_Algorithm = 2
)

// E_OpenconfigIsis_SegmentRoutingCapability_Flags is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsis_SegmentRoutingCapability_Flags. An additional value named
// OpenconfigIsis_SegmentRoutingCapability_Flags_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsis_SegmentRoutingCapability_Flags int64

// IsYANGGoEnum ensures that OpenconfigIsis_SegmentRoutingCapability_Flags implements the yang.GoEnum
// interface. This ensures that OpenconfigIsis_SegmentRoutingCapability_Flags can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsis_SegmentRoutingCapability_Flags) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsis_SegmentRoutingCapability_Flags.
func (E_OpenconfigIsis_SegmentRoutingCapability_Flags) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIsis_SegmentRoutingCapability_Flags_UNSET corresponds to the value UNSET of OpenconfigIsis_SegmentRoutingCapability_Flags
	OpenconfigIsis_SegmentRoutingCapability_Flags_UNSET E_OpenconfigIsis_SegmentRoutingCapability_Flags = 0
	// OpenconfigIsis_SegmentRoutingCapability_Flags_IPV4_MPLS corresponds to the value IPV4_MPLS of OpenconfigIsis_SegmentRoutingCapability_Flags
	OpenconfigIsis_SegmentRoutingCapability_Flags_IPV4_MPLS E_OpenconfigIsis_SegmentRoutingCapability_Flags = 1
	// OpenconfigIsis_SegmentRoutingCapability_Flags_IPV6_MPLS corresponds to the value IPV6_MPLS of OpenconfigIsis_SegmentRoutingCapability_Flags
	OpenconfigIsis_SegmentRoutingCapability_Flags_IPV6_MPLS E_OpenconfigIsis_SegmentRoutingCapability_Flags = 2
	// OpenconfigIsis_SegmentRoutingCapability_Flags_IPV6_SR corresponds to the value IPV6_SR of OpenconfigIsis_SegmentRoutingCapability_Flags
	OpenconfigIsis_SegmentRoutingCapability_Flags_IPV6_SR E_OpenconfigIsis_SegmentRoutingCapability_Flags = 3
)

// E_OpenconfigIsis_SrgbDescriptor_Label is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsis_SrgbDescriptor_Label. An additional value named
// OpenconfigIsis_SrgbDescriptor_Label_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsis_SrgbDescriptor_Label int64

// IsYANGGoEnum ensures that OpenconfigIsis_SrgbDescriptor_Label implements the yang.GoEnum
// interface. This ensures that OpenconfigIsis_SrgbDescriptor_Label can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsis_SrgbDescriptor_Label) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsis_SrgbDescriptor_Label.
func (E_OpenconfigIsis_SrgbDescriptor_Label) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIsis_SrgbDescriptor_Label_UNSET corresponds to the value UNSET of OpenconfigIsis_SrgbDescriptor_Label
	OpenconfigIsis_SrgbDescriptor_Label_UNSET E_OpenconfigIsis_SrgbDescriptor_Label = 0
	// OpenconfigIsis_SrgbDescriptor_Label_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of OpenconfigIsis_SrgbDescriptor_Label
	OpenconfigIsis_SrgbDescriptor_Label_IPV4_EXPLICIT_NULL E_OpenconfigIsis_SrgbDescriptor_Label = 1
	// OpenconfigIsis_SrgbDescriptor_Label_ROUTER_ALERT corresponds to the value ROUTER_ALERT of OpenconfigIsis_SrgbDescriptor_Label
	OpenconfigIsis_SrgbDescriptor_Label_ROUTER_ALERT E_OpenconfigIsis_SrgbDescriptor_Label = 2
	// OpenconfigIsis_SrgbDescriptor_Label_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of OpenconfigIsis_SrgbDescriptor_Label
	OpenconfigIsis_SrgbDescriptor_Label_IPV6_EXPLICIT_NULL E_OpenconfigIsis_SrgbDescriptor_Label = 3
	// OpenconfigIsis_SrgbDescriptor_Label_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of OpenconfigIsis_SrgbDescriptor_Label
	OpenconfigIsis_SrgbDescriptor_Label_IMPLICIT_NULL E_OpenconfigIsis_SrgbDescriptor_Label = 4
	// OpenconfigIsis_SrgbDescriptor_Label_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of OpenconfigIsis_SrgbDescriptor_Label
	OpenconfigIsis_SrgbDescriptor_Label_ENTROPY_LABEL_INDICATOR E_OpenconfigIsis_SrgbDescriptor_Label = 8
	// OpenconfigIsis_SrgbDescriptor_Label_NO_LABEL corresponds to the value NO_LABEL of OpenconfigIsis_SrgbDescriptor_Label
	OpenconfigIsis_SrgbDescriptor_Label_NO_LABEL E_OpenconfigIsis_SrgbDescriptor_Label = 9
)

// E_OpenconfigIsis_Topology_Attributes is a derived int64 type which is used to represent
// the enumerated node OpenconfigIsis_Topology_Attributes. An additional value named
// OpenconfigIsis_Topology_Attributes_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigIsis_Topology_Attributes int64

// IsYANGGoEnum ensures that OpenconfigIsis_Topology_Attributes implements the yang.GoEnum
// interface. This ensures that OpenconfigIsis_Topology_Attributes can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigIsis_Topology_Attributes) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigIsis_Topology_Attributes.
func (E_OpenconfigIsis_Topology_Attributes) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigIsis_Topology_Attributes_UNSET corresponds to the value UNSET of OpenconfigIsis_Topology_Attributes
	OpenconfigIsis_Topology_Attributes_UNSET E_OpenconfigIsis_Topology_Attributes = 0
	// OpenconfigIsis_Topology_Attributes_OVERLOAD corresponds to the value OVERLOAD of OpenconfigIsis_Topology_Attributes
	OpenconfigIsis_Topology_Attributes_OVERLOAD E_OpenconfigIsis_Topology_Attributes = 1
	// OpenconfigIsis_Topology_Attributes_ATTACHED corresponds to the value ATTACHED of OpenconfigIsis_Topology_Attributes
	OpenconfigIsis_Topology_Attributes_ATTACHED E_OpenconfigIsis_Topology_Attributes = 2
)

// E_OpenconfigLacp_LacpActivityType is a derived int64 type which is used to represent
// the enumerated node OpenconfigLacp_LacpActivityType. An additional value named
// OpenconfigLacp_LacpActivityType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigLacp_LacpActivityType int64

// IsYANGGoEnum ensures that OpenconfigLacp_LacpActivityType implements the yang.GoEnum
// interface. This ensures that OpenconfigLacp_LacpActivityType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigLacp_LacpActivityType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigLacp_LacpActivityType.
func (E_OpenconfigLacp_LacpActivityType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigLacp_LacpActivityType_UNSET corresponds to the value UNSET of OpenconfigLacp_LacpActivityType
	OpenconfigLacp_LacpActivityType_UNSET E_OpenconfigLacp_LacpActivityType = 0
	// OpenconfigLacp_LacpActivityType_ACTIVE corresponds to the value ACTIVE of OpenconfigLacp_LacpActivityType
	OpenconfigLacp_LacpActivityType_ACTIVE E_OpenconfigLacp_LacpActivityType = 1
	// OpenconfigLacp_LacpActivityType_PASSIVE corresponds to the value PASSIVE of OpenconfigLacp_LacpActivityType
	OpenconfigLacp_LacpActivityType_PASSIVE E_OpenconfigLacp_LacpActivityType = 2
)

// E_OpenconfigLacp_LacpPeriodType is a derived int64 type which is used to represent
// the enumerated node OpenconfigLacp_LacpPeriodType. An additional value named
// OpenconfigLacp_LacpPeriodType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigLacp_LacpPeriodType int64

// IsYANGGoEnum ensures that OpenconfigLacp_LacpPeriodType implements the yang.GoEnum
// interface. This ensures that OpenconfigLacp_LacpPeriodType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigLacp_LacpPeriodType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigLacp_LacpPeriodType.
func (E_OpenconfigLacp_LacpPeriodType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigLacp_LacpPeriodType_UNSET corresponds to the value UNSET of OpenconfigLacp_LacpPeriodType
	OpenconfigLacp_LacpPeriodType_UNSET E_OpenconfigLacp_LacpPeriodType = 0
	// OpenconfigLacp_LacpPeriodType_FAST corresponds to the value FAST of OpenconfigLacp_LacpPeriodType
	OpenconfigLacp_LacpPeriodType_FAST E_OpenconfigLacp_LacpPeriodType = 1
	// OpenconfigLacp_LacpPeriodType_SLOW corresponds to the value SLOW of OpenconfigLacp_LacpPeriodType
	OpenconfigLacp_LacpPeriodType_SLOW E_OpenconfigLacp_LacpPeriodType = 2
)

// E_OpenconfigLacp_LacpSynchronizationType is a derived int64 type which is used to represent
// the enumerated node OpenconfigLacp_LacpSynchronizationType. An additional value named
// OpenconfigLacp_LacpSynchronizationType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigLacp_LacpSynchronizationType int64

// IsYANGGoEnum ensures that OpenconfigLacp_LacpSynchronizationType implements the yang.GoEnum
// interface. This ensures that OpenconfigLacp_LacpSynchronizationType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigLacp_LacpSynchronizationType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigLacp_LacpSynchronizationType.
func (E_OpenconfigLacp_LacpSynchronizationType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigLacp_LacpSynchronizationType_UNSET corresponds to the value UNSET of OpenconfigLacp_LacpSynchronizationType
	OpenconfigLacp_LacpSynchronizationType_UNSET E_OpenconfigLacp_LacpSynchronizationType = 0
	// OpenconfigLacp_LacpSynchronizationType_IN_SYNC corresponds to the value IN_SYNC of OpenconfigLacp_LacpSynchronizationType
	OpenconfigLacp_LacpSynchronizationType_IN_SYNC E_OpenconfigLacp_LacpSynchronizationType = 1
	// OpenconfigLacp_LacpSynchronizationType_OUT_SYNC corresponds to the value OUT_SYNC of OpenconfigLacp_LacpSynchronizationType
	OpenconfigLacp_LacpSynchronizationType_OUT_SYNC E_OpenconfigLacp_LacpSynchronizationType = 2
)

// E_OpenconfigLacp_LacpTimeoutType is a derived int64 type which is used to represent
// the enumerated node OpenconfigLacp_LacpTimeoutType. An additional value named
// OpenconfigLacp_LacpTimeoutType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigLacp_LacpTimeoutType int64

// IsYANGGoEnum ensures that OpenconfigLacp_LacpTimeoutType implements the yang.GoEnum
// interface. This ensures that OpenconfigLacp_LacpTimeoutType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigLacp_LacpTimeoutType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigLacp_LacpTimeoutType.
func (E_OpenconfigLacp_LacpTimeoutType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigLacp_LacpTimeoutType_UNSET corresponds to the value UNSET of OpenconfigLacp_LacpTimeoutType
	OpenconfigLacp_LacpTimeoutType_UNSET E_OpenconfigLacp_LacpTimeoutType = 0
	// OpenconfigLacp_LacpTimeoutType_LONG corresponds to the value LONG of OpenconfigLacp_LacpTimeoutType
	OpenconfigLacp_LacpTimeoutType_LONG E_OpenconfigLacp_LacpTimeoutType = 1
	// OpenconfigLacp_LacpTimeoutType_SHORT corresponds to the value SHORT of OpenconfigLacp_LacpTimeoutType
	OpenconfigLacp_LacpTimeoutType_SHORT E_OpenconfigLacp_LacpTimeoutType = 2
)

// E_OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY is a derived int64 type which is used to represent
// the enumerated node OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY. An additional value named
// OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY int64

// IsYANGGoEnum ensures that OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY implements the yang.GoEnum
// interface. This ensures that OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY.
func (E_OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY_UNSET corresponds to the value UNSET of OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY
	OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY_UNSET E_OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY = 0
	// OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY_C_VLAN corresponds to the value C_VLAN of OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY
	OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY_C_VLAN E_OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY = 1
	// OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY_DOCSIS_CABLE_DEVICE corresponds to the value DOCSIS_CABLE_DEVICE of OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY
	OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY_DOCSIS_CABLE_DEVICE E_OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY = 2
	// OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY_MAC_BRIDGE corresponds to the value MAC_BRIDGE of OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY
	OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY_MAC_BRIDGE E_OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY = 3
	// OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY_OTHER corresponds to the value OTHER of OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY
	OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY_OTHER E_OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY = 4
	// OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY_REPEATER corresponds to the value REPEATER of OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY
	OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY_REPEATER E_OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY = 5
	// OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY_ROUTER corresponds to the value ROUTER of OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY
	OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY_ROUTER E_OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY = 6
	// OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY_STATION_ONLY corresponds to the value STATION_ONLY of OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY
	OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY_STATION_ONLY E_OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY = 7
	// OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY_S_VLAN corresponds to the value S_VLAN of OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY
	OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY_S_VLAN E_OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY = 8
	// OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY_TELEPHONE corresponds to the value TELEPHONE of OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY
	OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY_TELEPHONE E_OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY = 9
	// OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY_TWO_PORT_MAC_RELAY corresponds to the value TWO_PORT_MAC_RELAY of OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY
	OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY_TWO_PORT_MAC_RELAY E_OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY = 10
	// OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY_WLAN_ACCESS_POINT corresponds to the value WLAN_ACCESS_POINT of OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY
	OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY_WLAN_ACCESS_POINT E_OpenconfigLldpTypes_LLDP_SYSTEM_CAPABILITY = 11
)

// E_OpenconfigLldpTypes_LLDP_TLV is a derived int64 type which is used to represent
// the enumerated node OpenconfigLldpTypes_LLDP_TLV. An additional value named
// OpenconfigLldpTypes_LLDP_TLV_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigLldpTypes_LLDP_TLV int64

// IsYANGGoEnum ensures that OpenconfigLldpTypes_LLDP_TLV implements the yang.GoEnum
// interface. This ensures that OpenconfigLldpTypes_LLDP_TLV can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigLldpTypes_LLDP_TLV) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigLldpTypes_LLDP_TLV.
func (E_OpenconfigLldpTypes_LLDP_TLV) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigLldpTypes_LLDP_TLV_UNSET corresponds to the value UNSET of OpenconfigLldpTypes_LLDP_TLV
	OpenconfigLldpTypes_LLDP_TLV_UNSET E_OpenconfigLldpTypes_LLDP_TLV = 0
	// OpenconfigLldpTypes_LLDP_TLV_CHASSIS_ID corresponds to the value CHASSIS_ID of OpenconfigLldpTypes_LLDP_TLV
	OpenconfigLldpTypes_LLDP_TLV_CHASSIS_ID E_OpenconfigLldpTypes_LLDP_TLV = 1
	// OpenconfigLldpTypes_LLDP_TLV_MANAGEMENT_ADDRESS corresponds to the value MANAGEMENT_ADDRESS of OpenconfigLldpTypes_LLDP_TLV
	OpenconfigLldpTypes_LLDP_TLV_MANAGEMENT_ADDRESS E_OpenconfigLldpTypes_LLDP_TLV = 2
	// OpenconfigLldpTypes_LLDP_TLV_PORT_DESCRIPTION corresponds to the value PORT_DESCRIPTION of OpenconfigLldpTypes_LLDP_TLV
	OpenconfigLldpTypes_LLDP_TLV_PORT_DESCRIPTION E_OpenconfigLldpTypes_LLDP_TLV = 3
	// OpenconfigLldpTypes_LLDP_TLV_PORT_ID corresponds to the value PORT_ID of OpenconfigLldpTypes_LLDP_TLV
	OpenconfigLldpTypes_LLDP_TLV_PORT_ID E_OpenconfigLldpTypes_LLDP_TLV = 4
	// OpenconfigLldpTypes_LLDP_TLV_SYSTEM_CAPABILITIES corresponds to the value SYSTEM_CAPABILITIES of OpenconfigLldpTypes_LLDP_TLV
	OpenconfigLldpTypes_LLDP_TLV_SYSTEM_CAPABILITIES E_OpenconfigLldpTypes_LLDP_TLV = 5
	// OpenconfigLldpTypes_LLDP_TLV_SYSTEM_DESCRIPTION corresponds to the value SYSTEM_DESCRIPTION of OpenconfigLldpTypes_LLDP_TLV
	OpenconfigLldpTypes_LLDP_TLV_SYSTEM_DESCRIPTION E_OpenconfigLldpTypes_LLDP_TLV = 6
	// OpenconfigLldpTypes_LLDP_TLV_SYSTEM_NAME corresponds to the value SYSTEM_NAME of OpenconfigLldpTypes_LLDP_TLV
	OpenconfigLldpTypes_LLDP_TLV_SYSTEM_NAME E_OpenconfigLldpTypes_LLDP_TLV = 7
)

// E_OpenconfigLldp_ChassisIdType is a derived int64 type which is used to represent
// the enumerated node OpenconfigLldp_ChassisIdType. An additional value named
// OpenconfigLldp_ChassisIdType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigLldp_ChassisIdType int64

// IsYANGGoEnum ensures that OpenconfigLldp_ChassisIdType implements the yang.GoEnum
// interface. This ensures that OpenconfigLldp_ChassisIdType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigLldp_ChassisIdType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigLldp_ChassisIdType.
func (E_OpenconfigLldp_ChassisIdType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigLldp_ChassisIdType_UNSET corresponds to the value UNSET of OpenconfigLldp_ChassisIdType
	OpenconfigLldp_ChassisIdType_UNSET E_OpenconfigLldp_ChassisIdType = 0
	// OpenconfigLldp_ChassisIdType_CHASSIS_COMPONENT corresponds to the value CHASSIS_COMPONENT of OpenconfigLldp_ChassisIdType
	OpenconfigLldp_ChassisIdType_CHASSIS_COMPONENT E_OpenconfigLldp_ChassisIdType = 1
	// OpenconfigLldp_ChassisIdType_INTERFACE_ALIAS corresponds to the value INTERFACE_ALIAS of OpenconfigLldp_ChassisIdType
	OpenconfigLldp_ChassisIdType_INTERFACE_ALIAS E_OpenconfigLldp_ChassisIdType = 2
	// OpenconfigLldp_ChassisIdType_PORT_COMPONENT corresponds to the value PORT_COMPONENT of OpenconfigLldp_ChassisIdType
	OpenconfigLldp_ChassisIdType_PORT_COMPONENT E_OpenconfigLldp_ChassisIdType = 3
	// OpenconfigLldp_ChassisIdType_MAC_ADDRESS corresponds to the value MAC_ADDRESS of OpenconfigLldp_ChassisIdType
	OpenconfigLldp_ChassisIdType_MAC_ADDRESS E_OpenconfigLldp_ChassisIdType = 4
	// OpenconfigLldp_ChassisIdType_NETWORK_ADDRESS corresponds to the value NETWORK_ADDRESS of OpenconfigLldp_ChassisIdType
	OpenconfigLldp_ChassisIdType_NETWORK_ADDRESS E_OpenconfigLldp_ChassisIdType = 5
	// OpenconfigLldp_ChassisIdType_INTERFACE_NAME corresponds to the value INTERFACE_NAME of OpenconfigLldp_ChassisIdType
	OpenconfigLldp_ChassisIdType_INTERFACE_NAME E_OpenconfigLldp_ChassisIdType = 6
	// OpenconfigLldp_ChassisIdType_LOCAL corresponds to the value LOCAL of OpenconfigLldp_ChassisIdType
	OpenconfigLldp_ChassisIdType_LOCAL E_OpenconfigLldp_ChassisIdType = 7
)

// E_OpenconfigLldp_PortIdType is a derived int64 type which is used to represent
// the enumerated node OpenconfigLldp_PortIdType. An additional value named
// OpenconfigLldp_PortIdType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigLldp_PortIdType int64

// IsYANGGoEnum ensures that OpenconfigLldp_PortIdType implements the yang.GoEnum
// interface. This ensures that OpenconfigLldp_PortIdType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigLldp_PortIdType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigLldp_PortIdType.
func (E_OpenconfigLldp_PortIdType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigLldp_PortIdType_UNSET corresponds to the value UNSET of OpenconfigLldp_PortIdType
	OpenconfigLldp_PortIdType_UNSET E_OpenconfigLldp_PortIdType = 0
	// OpenconfigLldp_PortIdType_INTERFACE_ALIAS corresponds to the value INTERFACE_ALIAS of OpenconfigLldp_PortIdType
	OpenconfigLldp_PortIdType_INTERFACE_ALIAS E_OpenconfigLldp_PortIdType = 1
	// OpenconfigLldp_PortIdType_PORT_COMPONENT corresponds to the value PORT_COMPONENT of OpenconfigLldp_PortIdType
	OpenconfigLldp_PortIdType_PORT_COMPONENT E_OpenconfigLldp_PortIdType = 2
	// OpenconfigLldp_PortIdType_MAC_ADDRESS corresponds to the value MAC_ADDRESS of OpenconfigLldp_PortIdType
	OpenconfigLldp_PortIdType_MAC_ADDRESS E_OpenconfigLldp_PortIdType = 3
	// OpenconfigLldp_PortIdType_NETWORK_ADDRESS corresponds to the value NETWORK_ADDRESS of OpenconfigLldp_PortIdType
	OpenconfigLldp_PortIdType_NETWORK_ADDRESS E_OpenconfigLldp_PortIdType = 4
	// OpenconfigLldp_PortIdType_INTERFACE_NAME corresponds to the value INTERFACE_NAME of OpenconfigLldp_PortIdType
	OpenconfigLldp_PortIdType_INTERFACE_NAME E_OpenconfigLldp_PortIdType = 5
	// OpenconfigLldp_PortIdType_AGENT_CIRCUIT_ID corresponds to the value AGENT_CIRCUIT_ID of OpenconfigLldp_PortIdType
	OpenconfigLldp_PortIdType_AGENT_CIRCUIT_ID E_OpenconfigLldp_PortIdType = 6
	// OpenconfigLldp_PortIdType_LOCAL corresponds to the value LOCAL of OpenconfigLldp_PortIdType
	OpenconfigLldp_PortIdType_LOCAL E_OpenconfigLldp_PortIdType = 7
)

// E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP is a derived int64 type which is used to represent
// the enumerated node OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP. An additional value named
// OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP int64

// IsYANGGoEnum ensures that OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP implements the yang.GoEnum
// interface. This ensures that OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP.
func (E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP_UNSET corresponds to the value UNSET of OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP
	OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP_UNSET E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP = 0
	// OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP_DROP corresponds to the value DROP of OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP
	OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP_DROP E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP = 1
	// OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP_LOCAL_LINK corresponds to the value LOCAL_LINK of OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP
	OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP_LOCAL_LINK E_OpenconfigLocalRouting_LOCAL_DEFINED_NEXT_HOP = 2
)

// E_OpenconfigMplsRsvp_BandwidthReservation_Priority is a derived int64 type which is used to represent
// the enumerated node OpenconfigMplsRsvp_BandwidthReservation_Priority. An additional value named
// OpenconfigMplsRsvp_BandwidthReservation_Priority_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMplsRsvp_BandwidthReservation_Priority int64

// IsYANGGoEnum ensures that OpenconfigMplsRsvp_BandwidthReservation_Priority implements the yang.GoEnum
// interface. This ensures that OpenconfigMplsRsvp_BandwidthReservation_Priority can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMplsRsvp_BandwidthReservation_Priority) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMplsRsvp_BandwidthReservation_Priority.
func (E_OpenconfigMplsRsvp_BandwidthReservation_Priority) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigMplsRsvp_BandwidthReservation_Priority_UNSET corresponds to the value UNSET of OpenconfigMplsRsvp_BandwidthReservation_Priority
	OpenconfigMplsRsvp_BandwidthReservation_Priority_UNSET E_OpenconfigMplsRsvp_BandwidthReservation_Priority = 0
	// OpenconfigMplsRsvp_BandwidthReservation_Priority_ALL corresponds to the value ALL of OpenconfigMplsRsvp_BandwidthReservation_Priority
	OpenconfigMplsRsvp_BandwidthReservation_Priority_ALL E_OpenconfigMplsRsvp_BandwidthReservation_Priority = 1
)

// E_OpenconfigMplsRsvp_Neighbor_NeighborStatus is a derived int64 type which is used to represent
// the enumerated node OpenconfigMplsRsvp_Neighbor_NeighborStatus. An additional value named
// OpenconfigMplsRsvp_Neighbor_NeighborStatus_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMplsRsvp_Neighbor_NeighborStatus int64

// IsYANGGoEnum ensures that OpenconfigMplsRsvp_Neighbor_NeighborStatus implements the yang.GoEnum
// interface. This ensures that OpenconfigMplsRsvp_Neighbor_NeighborStatus can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMplsRsvp_Neighbor_NeighborStatus) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMplsRsvp_Neighbor_NeighborStatus.
func (E_OpenconfigMplsRsvp_Neighbor_NeighborStatus) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigMplsRsvp_Neighbor_NeighborStatus_UNSET corresponds to the value UNSET of OpenconfigMplsRsvp_Neighbor_NeighborStatus
	OpenconfigMplsRsvp_Neighbor_NeighborStatus_UNSET E_OpenconfigMplsRsvp_Neighbor_NeighborStatus = 0
	// OpenconfigMplsRsvp_Neighbor_NeighborStatus_UP corresponds to the value UP of OpenconfigMplsRsvp_Neighbor_NeighborStatus
	OpenconfigMplsRsvp_Neighbor_NeighborStatus_UP E_OpenconfigMplsRsvp_Neighbor_NeighborStatus = 1
	// OpenconfigMplsRsvp_Neighbor_NeighborStatus_DOWN corresponds to the value DOWN of OpenconfigMplsRsvp_Neighbor_NeighborStatus
	OpenconfigMplsRsvp_Neighbor_NeighborStatus_DOWN E_OpenconfigMplsRsvp_Neighbor_NeighborStatus = 2
)

// E_OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel is a derived int64 type which is used to represent
// the enumerated node OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel. An additional value named
// OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel int64

// IsYANGGoEnum ensures that OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel implements the yang.GoEnum
// interface. This ensures that OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel.
func (E_OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel_UNSET corresponds to the value UNSET of OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel
	OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel_UNSET E_OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel = 0
	// OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel
	OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel_IPV4_EXPLICIT_NULL E_OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel = 1
	// OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel_ROUTER_ALERT corresponds to the value ROUTER_ALERT of OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel
	OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel_ROUTER_ALERT E_OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel = 2
	// OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel
	OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel_IPV6_EXPLICIT_NULL E_OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel = 3
	// OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel
	OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel_IMPLICIT_NULL E_OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel = 4
	// OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel
	OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel_ENTROPY_LABEL_INDICATOR E_OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel = 8
	// OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel_NO_LABEL corresponds to the value NO_LABEL of OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel
	OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel_NO_LABEL E_OpenconfigMplsRsvp_RecordRouteObject_ReportedLabel = 9
)

// E_OpenconfigMplsRsvp_Session_LabelIn is a derived int64 type which is used to represent
// the enumerated node OpenconfigMplsRsvp_Session_LabelIn. An additional value named
// OpenconfigMplsRsvp_Session_LabelIn_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMplsRsvp_Session_LabelIn int64

// IsYANGGoEnum ensures that OpenconfigMplsRsvp_Session_LabelIn implements the yang.GoEnum
// interface. This ensures that OpenconfigMplsRsvp_Session_LabelIn can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMplsRsvp_Session_LabelIn) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMplsRsvp_Session_LabelIn.
func (E_OpenconfigMplsRsvp_Session_LabelIn) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigMplsRsvp_Session_LabelIn_UNSET corresponds to the value UNSET of OpenconfigMplsRsvp_Session_LabelIn
	OpenconfigMplsRsvp_Session_LabelIn_UNSET E_OpenconfigMplsRsvp_Session_LabelIn = 0
	// OpenconfigMplsRsvp_Session_LabelIn_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of OpenconfigMplsRsvp_Session_LabelIn
	OpenconfigMplsRsvp_Session_LabelIn_IPV4_EXPLICIT_NULL E_OpenconfigMplsRsvp_Session_LabelIn = 1
	// OpenconfigMplsRsvp_Session_LabelIn_ROUTER_ALERT corresponds to the value ROUTER_ALERT of OpenconfigMplsRsvp_Session_LabelIn
	OpenconfigMplsRsvp_Session_LabelIn_ROUTER_ALERT E_OpenconfigMplsRsvp_Session_LabelIn = 2
	// OpenconfigMplsRsvp_Session_LabelIn_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of OpenconfigMplsRsvp_Session_LabelIn
	OpenconfigMplsRsvp_Session_LabelIn_IPV6_EXPLICIT_NULL E_OpenconfigMplsRsvp_Session_LabelIn = 3
	// OpenconfigMplsRsvp_Session_LabelIn_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of OpenconfigMplsRsvp_Session_LabelIn
	OpenconfigMplsRsvp_Session_LabelIn_IMPLICIT_NULL E_OpenconfigMplsRsvp_Session_LabelIn = 4
	// OpenconfigMplsRsvp_Session_LabelIn_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of OpenconfigMplsRsvp_Session_LabelIn
	OpenconfigMplsRsvp_Session_LabelIn_ENTROPY_LABEL_INDICATOR E_OpenconfigMplsRsvp_Session_LabelIn = 8
	// OpenconfigMplsRsvp_Session_LabelIn_NO_LABEL corresponds to the value NO_LABEL of OpenconfigMplsRsvp_Session_LabelIn
	OpenconfigMplsRsvp_Session_LabelIn_NO_LABEL E_OpenconfigMplsRsvp_Session_LabelIn = 9
)

// E_OpenconfigMplsRsvp_Session_LabelOut is a derived int64 type which is used to represent
// the enumerated node OpenconfigMplsRsvp_Session_LabelOut. An additional value named
// OpenconfigMplsRsvp_Session_LabelOut_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMplsRsvp_Session_LabelOut int64

// IsYANGGoEnum ensures that OpenconfigMplsRsvp_Session_LabelOut implements the yang.GoEnum
// interface. This ensures that OpenconfigMplsRsvp_Session_LabelOut can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMplsRsvp_Session_LabelOut) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMplsRsvp_Session_LabelOut.
func (E_OpenconfigMplsRsvp_Session_LabelOut) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigMplsRsvp_Session_LabelOut_UNSET corresponds to the value UNSET of OpenconfigMplsRsvp_Session_LabelOut
	OpenconfigMplsRsvp_Session_LabelOut_UNSET E_OpenconfigMplsRsvp_Session_LabelOut = 0
	// OpenconfigMplsRsvp_Session_LabelOut_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of OpenconfigMplsRsvp_Session_LabelOut
	OpenconfigMplsRsvp_Session_LabelOut_IPV4_EXPLICIT_NULL E_OpenconfigMplsRsvp_Session_LabelOut = 1
	// OpenconfigMplsRsvp_Session_LabelOut_ROUTER_ALERT corresponds to the value ROUTER_ALERT of OpenconfigMplsRsvp_Session_LabelOut
	OpenconfigMplsRsvp_Session_LabelOut_ROUTER_ALERT E_OpenconfigMplsRsvp_Session_LabelOut = 2
	// OpenconfigMplsRsvp_Session_LabelOut_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of OpenconfigMplsRsvp_Session_LabelOut
	OpenconfigMplsRsvp_Session_LabelOut_IPV6_EXPLICIT_NULL E_OpenconfigMplsRsvp_Session_LabelOut = 3
	// OpenconfigMplsRsvp_Session_LabelOut_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of OpenconfigMplsRsvp_Session_LabelOut
	OpenconfigMplsRsvp_Session_LabelOut_IMPLICIT_NULL E_OpenconfigMplsRsvp_Session_LabelOut = 4
	// OpenconfigMplsRsvp_Session_LabelOut_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of OpenconfigMplsRsvp_Session_LabelOut
	OpenconfigMplsRsvp_Session_LabelOut_ENTROPY_LABEL_INDICATOR E_OpenconfigMplsRsvp_Session_LabelOut = 8
	// OpenconfigMplsRsvp_Session_LabelOut_NO_LABEL corresponds to the value NO_LABEL of OpenconfigMplsRsvp_Session_LabelOut
	OpenconfigMplsRsvp_Session_LabelOut_NO_LABEL E_OpenconfigMplsRsvp_Session_LabelOut = 9
)

// E_OpenconfigMplsRsvp_Session_Status is a derived int64 type which is used to represent
// the enumerated node OpenconfigMplsRsvp_Session_Status. An additional value named
// OpenconfigMplsRsvp_Session_Status_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMplsRsvp_Session_Status int64

// IsYANGGoEnum ensures that OpenconfigMplsRsvp_Session_Status implements the yang.GoEnum
// interface. This ensures that OpenconfigMplsRsvp_Session_Status can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMplsRsvp_Session_Status) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMplsRsvp_Session_Status.
func (E_OpenconfigMplsRsvp_Session_Status) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigMplsRsvp_Session_Status_UNSET corresponds to the value UNSET of OpenconfigMplsRsvp_Session_Status
	OpenconfigMplsRsvp_Session_Status_UNSET E_OpenconfigMplsRsvp_Session_Status = 0
	// OpenconfigMplsRsvp_Session_Status_UP corresponds to the value UP of OpenconfigMplsRsvp_Session_Status
	OpenconfigMplsRsvp_Session_Status_UP E_OpenconfigMplsRsvp_Session_Status = 1
	// OpenconfigMplsRsvp_Session_Status_DOWN corresponds to the value DOWN of OpenconfigMplsRsvp_Session_Status
	OpenconfigMplsRsvp_Session_Status_DOWN E_OpenconfigMplsRsvp_Session_Status = 2
)

// E_OpenconfigMplsRsvp_State_PeakDataRate is a derived int64 type which is used to represent
// the enumerated node OpenconfigMplsRsvp_State_PeakDataRate. An additional value named
// OpenconfigMplsRsvp_State_PeakDataRate_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMplsRsvp_State_PeakDataRate int64

// IsYANGGoEnum ensures that OpenconfigMplsRsvp_State_PeakDataRate implements the yang.GoEnum
// interface. This ensures that OpenconfigMplsRsvp_State_PeakDataRate can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMplsRsvp_State_PeakDataRate) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMplsRsvp_State_PeakDataRate.
func (E_OpenconfigMplsRsvp_State_PeakDataRate) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigMplsRsvp_State_PeakDataRate_UNSET corresponds to the value UNSET of OpenconfigMplsRsvp_State_PeakDataRate
	OpenconfigMplsRsvp_State_PeakDataRate_UNSET E_OpenconfigMplsRsvp_State_PeakDataRate = 0
	// OpenconfigMplsRsvp_State_PeakDataRate_INFINITY corresponds to the value INFINITY of OpenconfigMplsRsvp_State_PeakDataRate
	OpenconfigMplsRsvp_State_PeakDataRate_INFINITY E_OpenconfigMplsRsvp_State_PeakDataRate = 1
)

// E_OpenconfigMplsSr_NamedExplicitPath_SidSelectionMode is a derived int64 type which is used to represent
// the enumerated node OpenconfigMplsSr_NamedExplicitPath_SidSelectionMode. An additional value named
// OpenconfigMplsSr_NamedExplicitPath_SidSelectionMode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMplsSr_NamedExplicitPath_SidSelectionMode int64

// IsYANGGoEnum ensures that OpenconfigMplsSr_NamedExplicitPath_SidSelectionMode implements the yang.GoEnum
// interface. This ensures that OpenconfigMplsSr_NamedExplicitPath_SidSelectionMode can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMplsSr_NamedExplicitPath_SidSelectionMode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMplsSr_NamedExplicitPath_SidSelectionMode.
func (E_OpenconfigMplsSr_NamedExplicitPath_SidSelectionMode) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigMplsSr_NamedExplicitPath_SidSelectionMode_UNSET corresponds to the value UNSET of OpenconfigMplsSr_NamedExplicitPath_SidSelectionMode
	OpenconfigMplsSr_NamedExplicitPath_SidSelectionMode_UNSET E_OpenconfigMplsSr_NamedExplicitPath_SidSelectionMode = 0
	// OpenconfigMplsSr_NamedExplicitPath_SidSelectionMode_ADJ_SID_ONLY corresponds to the value ADJ_SID_ONLY of OpenconfigMplsSr_NamedExplicitPath_SidSelectionMode
	OpenconfigMplsSr_NamedExplicitPath_SidSelectionMode_ADJ_SID_ONLY E_OpenconfigMplsSr_NamedExplicitPath_SidSelectionMode = 1
	// OpenconfigMplsSr_NamedExplicitPath_SidSelectionMode_MIXED_MODE corresponds to the value MIXED_MODE of OpenconfigMplsSr_NamedExplicitPath_SidSelectionMode
	OpenconfigMplsSr_NamedExplicitPath_SidSelectionMode_MIXED_MODE E_OpenconfigMplsSr_NamedExplicitPath_SidSelectionMode = 2
)

// E_OpenconfigMplsTypes_LSP_METRIC_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigMplsTypes_LSP_METRIC_TYPE. An additional value named
// OpenconfigMplsTypes_LSP_METRIC_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMplsTypes_LSP_METRIC_TYPE int64

// IsYANGGoEnum ensures that OpenconfigMplsTypes_LSP_METRIC_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigMplsTypes_LSP_METRIC_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMplsTypes_LSP_METRIC_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMplsTypes_LSP_METRIC_TYPE.
func (E_OpenconfigMplsTypes_LSP_METRIC_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigMplsTypes_LSP_METRIC_TYPE_UNSET corresponds to the value UNSET of OpenconfigMplsTypes_LSP_METRIC_TYPE
	OpenconfigMplsTypes_LSP_METRIC_TYPE_UNSET E_OpenconfigMplsTypes_LSP_METRIC_TYPE = 0
	// OpenconfigMplsTypes_LSP_METRIC_TYPE_LSP_METRIC_ABSOLUTE corresponds to the value LSP_METRIC_ABSOLUTE of OpenconfigMplsTypes_LSP_METRIC_TYPE
	OpenconfigMplsTypes_LSP_METRIC_TYPE_LSP_METRIC_ABSOLUTE E_OpenconfigMplsTypes_LSP_METRIC_TYPE = 1
	// OpenconfigMplsTypes_LSP_METRIC_TYPE_LSP_METRIC_INHERITED corresponds to the value LSP_METRIC_INHERITED of OpenconfigMplsTypes_LSP_METRIC_TYPE
	OpenconfigMplsTypes_LSP_METRIC_TYPE_LSP_METRIC_INHERITED E_OpenconfigMplsTypes_LSP_METRIC_TYPE = 2
	// OpenconfigMplsTypes_LSP_METRIC_TYPE_LSP_METRIC_RELATIVE corresponds to the value LSP_METRIC_RELATIVE of OpenconfigMplsTypes_LSP_METRIC_TYPE
	OpenconfigMplsTypes_LSP_METRIC_TYPE_LSP_METRIC_RELATIVE E_OpenconfigMplsTypes_LSP_METRIC_TYPE = 3
)

// E_OpenconfigMplsTypes_LSP_OPER_STATUS is a derived int64 type which is used to represent
// the enumerated node OpenconfigMplsTypes_LSP_OPER_STATUS. An additional value named
// OpenconfigMplsTypes_LSP_OPER_STATUS_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMplsTypes_LSP_OPER_STATUS int64

// IsYANGGoEnum ensures that OpenconfigMplsTypes_LSP_OPER_STATUS implements the yang.GoEnum
// interface. This ensures that OpenconfigMplsTypes_LSP_OPER_STATUS can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMplsTypes_LSP_OPER_STATUS) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMplsTypes_LSP_OPER_STATUS.
func (E_OpenconfigMplsTypes_LSP_OPER_STATUS) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigMplsTypes_LSP_OPER_STATUS_UNSET corresponds to the value UNSET of OpenconfigMplsTypes_LSP_OPER_STATUS
	OpenconfigMplsTypes_LSP_OPER_STATUS_UNSET E_OpenconfigMplsTypes_LSP_OPER_STATUS = 0
	// OpenconfigMplsTypes_LSP_OPER_STATUS_DOWN corresponds to the value DOWN of OpenconfigMplsTypes_LSP_OPER_STATUS
	OpenconfigMplsTypes_LSP_OPER_STATUS_DOWN E_OpenconfigMplsTypes_LSP_OPER_STATUS = 1
	// OpenconfigMplsTypes_LSP_OPER_STATUS_UP corresponds to the value UP of OpenconfigMplsTypes_LSP_OPER_STATUS
	OpenconfigMplsTypes_LSP_OPER_STATUS_UP E_OpenconfigMplsTypes_LSP_OPER_STATUS = 2
)

// E_OpenconfigMplsTypes_LSP_ROLE is a derived int64 type which is used to represent
// the enumerated node OpenconfigMplsTypes_LSP_ROLE. An additional value named
// OpenconfigMplsTypes_LSP_ROLE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMplsTypes_LSP_ROLE int64

// IsYANGGoEnum ensures that OpenconfigMplsTypes_LSP_ROLE implements the yang.GoEnum
// interface. This ensures that OpenconfigMplsTypes_LSP_ROLE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMplsTypes_LSP_ROLE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMplsTypes_LSP_ROLE.
func (E_OpenconfigMplsTypes_LSP_ROLE) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigMplsTypes_LSP_ROLE_UNSET corresponds to the value UNSET of OpenconfigMplsTypes_LSP_ROLE
	OpenconfigMplsTypes_LSP_ROLE_UNSET E_OpenconfigMplsTypes_LSP_ROLE = 0
	// OpenconfigMplsTypes_LSP_ROLE_EGRESS corresponds to the value EGRESS of OpenconfigMplsTypes_LSP_ROLE
	OpenconfigMplsTypes_LSP_ROLE_EGRESS E_OpenconfigMplsTypes_LSP_ROLE = 1
	// OpenconfigMplsTypes_LSP_ROLE_INGRESS corresponds to the value INGRESS of OpenconfigMplsTypes_LSP_ROLE
	OpenconfigMplsTypes_LSP_ROLE_INGRESS E_OpenconfigMplsTypes_LSP_ROLE = 2
	// OpenconfigMplsTypes_LSP_ROLE_TRANSIT corresponds to the value TRANSIT of OpenconfigMplsTypes_LSP_ROLE
	OpenconfigMplsTypes_LSP_ROLE_TRANSIT E_OpenconfigMplsTypes_LSP_ROLE = 3
)

// E_OpenconfigMplsTypes_NULL_LABEL_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigMplsTypes_NULL_LABEL_TYPE. An additional value named
// OpenconfigMplsTypes_NULL_LABEL_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMplsTypes_NULL_LABEL_TYPE int64

// IsYANGGoEnum ensures that OpenconfigMplsTypes_NULL_LABEL_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigMplsTypes_NULL_LABEL_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMplsTypes_NULL_LABEL_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMplsTypes_NULL_LABEL_TYPE.
func (E_OpenconfigMplsTypes_NULL_LABEL_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigMplsTypes_NULL_LABEL_TYPE_UNSET corresponds to the value UNSET of OpenconfigMplsTypes_NULL_LABEL_TYPE
	OpenconfigMplsTypes_NULL_LABEL_TYPE_UNSET E_OpenconfigMplsTypes_NULL_LABEL_TYPE = 0
	// OpenconfigMplsTypes_NULL_LABEL_TYPE_EXPLICIT corresponds to the value EXPLICIT of OpenconfigMplsTypes_NULL_LABEL_TYPE
	OpenconfigMplsTypes_NULL_LABEL_TYPE_EXPLICIT E_OpenconfigMplsTypes_NULL_LABEL_TYPE = 1
	// OpenconfigMplsTypes_NULL_LABEL_TYPE_IMPLICIT corresponds to the value IMPLICIT of OpenconfigMplsTypes_NULL_LABEL_TYPE
	OpenconfigMplsTypes_NULL_LABEL_TYPE_IMPLICIT E_OpenconfigMplsTypes_NULL_LABEL_TYPE = 2
)

// E_OpenconfigMplsTypes_PATH_COMPUTATION_METHOD is a derived int64 type which is used to represent
// the enumerated node OpenconfigMplsTypes_PATH_COMPUTATION_METHOD. An additional value named
// OpenconfigMplsTypes_PATH_COMPUTATION_METHOD_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMplsTypes_PATH_COMPUTATION_METHOD int64

// IsYANGGoEnum ensures that OpenconfigMplsTypes_PATH_COMPUTATION_METHOD implements the yang.GoEnum
// interface. This ensures that OpenconfigMplsTypes_PATH_COMPUTATION_METHOD can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMplsTypes_PATH_COMPUTATION_METHOD) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMplsTypes_PATH_COMPUTATION_METHOD.
func (E_OpenconfigMplsTypes_PATH_COMPUTATION_METHOD) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigMplsTypes_PATH_COMPUTATION_METHOD_UNSET corresponds to the value UNSET of OpenconfigMplsTypes_PATH_COMPUTATION_METHOD
	OpenconfigMplsTypes_PATH_COMPUTATION_METHOD_UNSET E_OpenconfigMplsTypes_PATH_COMPUTATION_METHOD = 0
	// OpenconfigMplsTypes_PATH_COMPUTATION_METHOD_EXPLICITLY_DEFINED corresponds to the value EXPLICITLY_DEFINED of OpenconfigMplsTypes_PATH_COMPUTATION_METHOD
	OpenconfigMplsTypes_PATH_COMPUTATION_METHOD_EXPLICITLY_DEFINED E_OpenconfigMplsTypes_PATH_COMPUTATION_METHOD = 1
	// OpenconfigMplsTypes_PATH_COMPUTATION_METHOD_EXTERNALLY_QUERIED corresponds to the value EXTERNALLY_QUERIED of OpenconfigMplsTypes_PATH_COMPUTATION_METHOD
	OpenconfigMplsTypes_PATH_COMPUTATION_METHOD_EXTERNALLY_QUERIED E_OpenconfigMplsTypes_PATH_COMPUTATION_METHOD = 2
	// OpenconfigMplsTypes_PATH_COMPUTATION_METHOD_LOCALLY_COMPUTED corresponds to the value LOCALLY_COMPUTED of OpenconfigMplsTypes_PATH_COMPUTATION_METHOD
	OpenconfigMplsTypes_PATH_COMPUTATION_METHOD_LOCALLY_COMPUTED E_OpenconfigMplsTypes_PATH_COMPUTATION_METHOD = 3
)

// E_OpenconfigMplsTypes_PATH_SETUP_PROTOCOL is a derived int64 type which is used to represent
// the enumerated node OpenconfigMplsTypes_PATH_SETUP_PROTOCOL. An additional value named
// OpenconfigMplsTypes_PATH_SETUP_PROTOCOL_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMplsTypes_PATH_SETUP_PROTOCOL int64

// IsYANGGoEnum ensures that OpenconfigMplsTypes_PATH_SETUP_PROTOCOL implements the yang.GoEnum
// interface. This ensures that OpenconfigMplsTypes_PATH_SETUP_PROTOCOL can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMplsTypes_PATH_SETUP_PROTOCOL) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMplsTypes_PATH_SETUP_PROTOCOL.
func (E_OpenconfigMplsTypes_PATH_SETUP_PROTOCOL) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigMplsTypes_PATH_SETUP_PROTOCOL_UNSET corresponds to the value UNSET of OpenconfigMplsTypes_PATH_SETUP_PROTOCOL
	OpenconfigMplsTypes_PATH_SETUP_PROTOCOL_UNSET E_OpenconfigMplsTypes_PATH_SETUP_PROTOCOL = 0
	// OpenconfigMplsTypes_PATH_SETUP_PROTOCOL_PATH_SETUP_LDP corresponds to the value PATH_SETUP_LDP of OpenconfigMplsTypes_PATH_SETUP_PROTOCOL
	OpenconfigMplsTypes_PATH_SETUP_PROTOCOL_PATH_SETUP_LDP E_OpenconfigMplsTypes_PATH_SETUP_PROTOCOL = 1
	// OpenconfigMplsTypes_PATH_SETUP_PROTOCOL_PATH_SETUP_RSVP corresponds to the value PATH_SETUP_RSVP of OpenconfigMplsTypes_PATH_SETUP_PROTOCOL
	OpenconfigMplsTypes_PATH_SETUP_PROTOCOL_PATH_SETUP_RSVP E_OpenconfigMplsTypes_PATH_SETUP_PROTOCOL = 2
	// OpenconfigMplsTypes_PATH_SETUP_PROTOCOL_PATH_SETUP_SR corresponds to the value PATH_SETUP_SR of OpenconfigMplsTypes_PATH_SETUP_PROTOCOL
	OpenconfigMplsTypes_PATH_SETUP_PROTOCOL_PATH_SETUP_SR E_OpenconfigMplsTypes_PATH_SETUP_PROTOCOL = 3
)

// E_OpenconfigMplsTypes_PROTECTION_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigMplsTypes_PROTECTION_TYPE. An additional value named
// OpenconfigMplsTypes_PROTECTION_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMplsTypes_PROTECTION_TYPE int64

// IsYANGGoEnum ensures that OpenconfigMplsTypes_PROTECTION_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigMplsTypes_PROTECTION_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMplsTypes_PROTECTION_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMplsTypes_PROTECTION_TYPE.
func (E_OpenconfigMplsTypes_PROTECTION_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigMplsTypes_PROTECTION_TYPE_UNSET corresponds to the value UNSET of OpenconfigMplsTypes_PROTECTION_TYPE
	OpenconfigMplsTypes_PROTECTION_TYPE_UNSET E_OpenconfigMplsTypes_PROTECTION_TYPE = 0
	// OpenconfigMplsTypes_PROTECTION_TYPE_LINK_NODE_PROTECTION_REQUESTED corresponds to the value LINK_NODE_PROTECTION_REQUESTED of OpenconfigMplsTypes_PROTECTION_TYPE
	OpenconfigMplsTypes_PROTECTION_TYPE_LINK_NODE_PROTECTION_REQUESTED E_OpenconfigMplsTypes_PROTECTION_TYPE = 1
	// OpenconfigMplsTypes_PROTECTION_TYPE_LINK_PROTECTION_REQUIRED corresponds to the value LINK_PROTECTION_REQUIRED of OpenconfigMplsTypes_PROTECTION_TYPE
	OpenconfigMplsTypes_PROTECTION_TYPE_LINK_PROTECTION_REQUIRED E_OpenconfigMplsTypes_PROTECTION_TYPE = 2
	// OpenconfigMplsTypes_PROTECTION_TYPE_UNPROTECTED corresponds to the value UNPROTECTED of OpenconfigMplsTypes_PROTECTION_TYPE
	OpenconfigMplsTypes_PROTECTION_TYPE_UNPROTECTED E_OpenconfigMplsTypes_PROTECTION_TYPE = 3
)

// E_OpenconfigMplsTypes_TUNNEL_ADMIN_STATUS is a derived int64 type which is used to represent
// the enumerated node OpenconfigMplsTypes_TUNNEL_ADMIN_STATUS. An additional value named
// OpenconfigMplsTypes_TUNNEL_ADMIN_STATUS_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMplsTypes_TUNNEL_ADMIN_STATUS int64

// IsYANGGoEnum ensures that OpenconfigMplsTypes_TUNNEL_ADMIN_STATUS implements the yang.GoEnum
// interface. This ensures that OpenconfigMplsTypes_TUNNEL_ADMIN_STATUS can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMplsTypes_TUNNEL_ADMIN_STATUS) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMplsTypes_TUNNEL_ADMIN_STATUS.
func (E_OpenconfigMplsTypes_TUNNEL_ADMIN_STATUS) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigMplsTypes_TUNNEL_ADMIN_STATUS_UNSET corresponds to the value UNSET of OpenconfigMplsTypes_TUNNEL_ADMIN_STATUS
	OpenconfigMplsTypes_TUNNEL_ADMIN_STATUS_UNSET E_OpenconfigMplsTypes_TUNNEL_ADMIN_STATUS = 0
	// OpenconfigMplsTypes_TUNNEL_ADMIN_STATUS_ADMIN_DOWN corresponds to the value ADMIN_DOWN of OpenconfigMplsTypes_TUNNEL_ADMIN_STATUS
	OpenconfigMplsTypes_TUNNEL_ADMIN_STATUS_ADMIN_DOWN E_OpenconfigMplsTypes_TUNNEL_ADMIN_STATUS = 1
	// OpenconfigMplsTypes_TUNNEL_ADMIN_STATUS_ADMIN_UP corresponds to the value ADMIN_UP of OpenconfigMplsTypes_TUNNEL_ADMIN_STATUS
	OpenconfigMplsTypes_TUNNEL_ADMIN_STATUS_ADMIN_UP E_OpenconfigMplsTypes_TUNNEL_ADMIN_STATUS = 2
)

// E_OpenconfigMplsTypes_TUNNEL_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigMplsTypes_TUNNEL_TYPE. An additional value named
// OpenconfigMplsTypes_TUNNEL_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMplsTypes_TUNNEL_TYPE int64

// IsYANGGoEnum ensures that OpenconfigMplsTypes_TUNNEL_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigMplsTypes_TUNNEL_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMplsTypes_TUNNEL_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMplsTypes_TUNNEL_TYPE.
func (E_OpenconfigMplsTypes_TUNNEL_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigMplsTypes_TUNNEL_TYPE_UNSET corresponds to the value UNSET of OpenconfigMplsTypes_TUNNEL_TYPE
	OpenconfigMplsTypes_TUNNEL_TYPE_UNSET E_OpenconfigMplsTypes_TUNNEL_TYPE = 0
	// OpenconfigMplsTypes_TUNNEL_TYPE_P2MP corresponds to the value P2MP of OpenconfigMplsTypes_TUNNEL_TYPE
	OpenconfigMplsTypes_TUNNEL_TYPE_P2MP E_OpenconfigMplsTypes_TUNNEL_TYPE = 1
	// OpenconfigMplsTypes_TUNNEL_TYPE_P2P corresponds to the value P2P of OpenconfigMplsTypes_TUNNEL_TYPE
	OpenconfigMplsTypes_TUNNEL_TYPE_P2P E_OpenconfigMplsTypes_TUNNEL_TYPE = 2
)

// E_OpenconfigMpls_CspfTieBreaking is a derived int64 type which is used to represent
// the enumerated node OpenconfigMpls_CspfTieBreaking. An additional value named
// OpenconfigMpls_CspfTieBreaking_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMpls_CspfTieBreaking int64

// IsYANGGoEnum ensures that OpenconfigMpls_CspfTieBreaking implements the yang.GoEnum
// interface. This ensures that OpenconfigMpls_CspfTieBreaking can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMpls_CspfTieBreaking) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMpls_CspfTieBreaking.
func (E_OpenconfigMpls_CspfTieBreaking) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigMpls_CspfTieBreaking_UNSET corresponds to the value UNSET of OpenconfigMpls_CspfTieBreaking
	OpenconfigMpls_CspfTieBreaking_UNSET E_OpenconfigMpls_CspfTieBreaking = 0
	// OpenconfigMpls_CspfTieBreaking_RANDOM corresponds to the value RANDOM of OpenconfigMpls_CspfTieBreaking
	OpenconfigMpls_CspfTieBreaking_RANDOM E_OpenconfigMpls_CspfTieBreaking = 1
	// OpenconfigMpls_CspfTieBreaking_LEAST_FILL corresponds to the value LEAST_FILL of OpenconfigMpls_CspfTieBreaking
	OpenconfigMpls_CspfTieBreaking_LEAST_FILL E_OpenconfigMpls_CspfTieBreaking = 2
	// OpenconfigMpls_CspfTieBreaking_MOST_FILL corresponds to the value MOST_FILL of OpenconfigMpls_CspfTieBreaking
	OpenconfigMpls_CspfTieBreaking_MOST_FILL E_OpenconfigMpls_CspfTieBreaking = 3
)

// E_OpenconfigMpls_Egress_IncomingLabel is a derived int64 type which is used to represent
// the enumerated node OpenconfigMpls_Egress_IncomingLabel. An additional value named
// OpenconfigMpls_Egress_IncomingLabel_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMpls_Egress_IncomingLabel int64

// IsYANGGoEnum ensures that OpenconfigMpls_Egress_IncomingLabel implements the yang.GoEnum
// interface. This ensures that OpenconfigMpls_Egress_IncomingLabel can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMpls_Egress_IncomingLabel) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMpls_Egress_IncomingLabel.
func (E_OpenconfigMpls_Egress_IncomingLabel) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigMpls_Egress_IncomingLabel_UNSET corresponds to the value UNSET of OpenconfigMpls_Egress_IncomingLabel
	OpenconfigMpls_Egress_IncomingLabel_UNSET E_OpenconfigMpls_Egress_IncomingLabel = 0
	// OpenconfigMpls_Egress_IncomingLabel_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of OpenconfigMpls_Egress_IncomingLabel
	OpenconfigMpls_Egress_IncomingLabel_IPV4_EXPLICIT_NULL E_OpenconfigMpls_Egress_IncomingLabel = 1
	// OpenconfigMpls_Egress_IncomingLabel_ROUTER_ALERT corresponds to the value ROUTER_ALERT of OpenconfigMpls_Egress_IncomingLabel
	OpenconfigMpls_Egress_IncomingLabel_ROUTER_ALERT E_OpenconfigMpls_Egress_IncomingLabel = 2
	// OpenconfigMpls_Egress_IncomingLabel_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of OpenconfigMpls_Egress_IncomingLabel
	OpenconfigMpls_Egress_IncomingLabel_IPV6_EXPLICIT_NULL E_OpenconfigMpls_Egress_IncomingLabel = 3
	// OpenconfigMpls_Egress_IncomingLabel_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of OpenconfigMpls_Egress_IncomingLabel
	OpenconfigMpls_Egress_IncomingLabel_IMPLICIT_NULL E_OpenconfigMpls_Egress_IncomingLabel = 4
	// OpenconfigMpls_Egress_IncomingLabel_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of OpenconfigMpls_Egress_IncomingLabel
	OpenconfigMpls_Egress_IncomingLabel_ENTROPY_LABEL_INDICATOR E_OpenconfigMpls_Egress_IncomingLabel = 8
	// OpenconfigMpls_Egress_IncomingLabel_NO_LABEL corresponds to the value NO_LABEL of OpenconfigMpls_Egress_IncomingLabel
	OpenconfigMpls_Egress_IncomingLabel_NO_LABEL E_OpenconfigMpls_Egress_IncomingLabel = 9
)

// E_OpenconfigMpls_Egress_PushLabel is a derived int64 type which is used to represent
// the enumerated node OpenconfigMpls_Egress_PushLabel. An additional value named
// OpenconfigMpls_Egress_PushLabel_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMpls_Egress_PushLabel int64

// IsYANGGoEnum ensures that OpenconfigMpls_Egress_PushLabel implements the yang.GoEnum
// interface. This ensures that OpenconfigMpls_Egress_PushLabel can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMpls_Egress_PushLabel) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMpls_Egress_PushLabel.
func (E_OpenconfigMpls_Egress_PushLabel) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigMpls_Egress_PushLabel_UNSET corresponds to the value UNSET of OpenconfigMpls_Egress_PushLabel
	OpenconfigMpls_Egress_PushLabel_UNSET E_OpenconfigMpls_Egress_PushLabel = 0
	// OpenconfigMpls_Egress_PushLabel_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of OpenconfigMpls_Egress_PushLabel
	OpenconfigMpls_Egress_PushLabel_IPV4_EXPLICIT_NULL E_OpenconfigMpls_Egress_PushLabel = 1
	// OpenconfigMpls_Egress_PushLabel_ROUTER_ALERT corresponds to the value ROUTER_ALERT of OpenconfigMpls_Egress_PushLabel
	OpenconfigMpls_Egress_PushLabel_ROUTER_ALERT E_OpenconfigMpls_Egress_PushLabel = 2
	// OpenconfigMpls_Egress_PushLabel_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of OpenconfigMpls_Egress_PushLabel
	OpenconfigMpls_Egress_PushLabel_IPV6_EXPLICIT_NULL E_OpenconfigMpls_Egress_PushLabel = 3
	// OpenconfigMpls_Egress_PushLabel_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of OpenconfigMpls_Egress_PushLabel
	OpenconfigMpls_Egress_PushLabel_IMPLICIT_NULL E_OpenconfigMpls_Egress_PushLabel = 4
	// OpenconfigMpls_Egress_PushLabel_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of OpenconfigMpls_Egress_PushLabel
	OpenconfigMpls_Egress_PushLabel_ENTROPY_LABEL_INDICATOR E_OpenconfigMpls_Egress_PushLabel = 8
	// OpenconfigMpls_Egress_PushLabel_NO_LABEL corresponds to the value NO_LABEL of OpenconfigMpls_Egress_PushLabel
	OpenconfigMpls_Egress_PushLabel_NO_LABEL E_OpenconfigMpls_Egress_PushLabel = 9
)

// E_OpenconfigMpls_IgpFloodingBandwidth_ThresholdSpecification is a derived int64 type which is used to represent
// the enumerated node OpenconfigMpls_IgpFloodingBandwidth_ThresholdSpecification. An additional value named
// OpenconfigMpls_IgpFloodingBandwidth_ThresholdSpecification_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMpls_IgpFloodingBandwidth_ThresholdSpecification int64

// IsYANGGoEnum ensures that OpenconfigMpls_IgpFloodingBandwidth_ThresholdSpecification implements the yang.GoEnum
// interface. This ensures that OpenconfigMpls_IgpFloodingBandwidth_ThresholdSpecification can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMpls_IgpFloodingBandwidth_ThresholdSpecification) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMpls_IgpFloodingBandwidth_ThresholdSpecification.
func (E_OpenconfigMpls_IgpFloodingBandwidth_ThresholdSpecification) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigMpls_IgpFloodingBandwidth_ThresholdSpecification_UNSET corresponds to the value UNSET of OpenconfigMpls_IgpFloodingBandwidth_ThresholdSpecification
	OpenconfigMpls_IgpFloodingBandwidth_ThresholdSpecification_UNSET E_OpenconfigMpls_IgpFloodingBandwidth_ThresholdSpecification = 0
	// OpenconfigMpls_IgpFloodingBandwidth_ThresholdSpecification_MIRRORED_UP_DOWN corresponds to the value MIRRORED_UP_DOWN of OpenconfigMpls_IgpFloodingBandwidth_ThresholdSpecification
	OpenconfigMpls_IgpFloodingBandwidth_ThresholdSpecification_MIRRORED_UP_DOWN E_OpenconfigMpls_IgpFloodingBandwidth_ThresholdSpecification = 1
	// OpenconfigMpls_IgpFloodingBandwidth_ThresholdSpecification_SEPARATE_UP_DOWN corresponds to the value SEPARATE_UP_DOWN of OpenconfigMpls_IgpFloodingBandwidth_ThresholdSpecification
	OpenconfigMpls_IgpFloodingBandwidth_ThresholdSpecification_SEPARATE_UP_DOWN E_OpenconfigMpls_IgpFloodingBandwidth_ThresholdSpecification = 2
)

// E_OpenconfigMpls_IgpFloodingBandwidth_ThresholdType is a derived int64 type which is used to represent
// the enumerated node OpenconfigMpls_IgpFloodingBandwidth_ThresholdType. An additional value named
// OpenconfigMpls_IgpFloodingBandwidth_ThresholdType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMpls_IgpFloodingBandwidth_ThresholdType int64

// IsYANGGoEnum ensures that OpenconfigMpls_IgpFloodingBandwidth_ThresholdType implements the yang.GoEnum
// interface. This ensures that OpenconfigMpls_IgpFloodingBandwidth_ThresholdType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMpls_IgpFloodingBandwidth_ThresholdType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMpls_IgpFloodingBandwidth_ThresholdType.
func (E_OpenconfigMpls_IgpFloodingBandwidth_ThresholdType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigMpls_IgpFloodingBandwidth_ThresholdType_UNSET corresponds to the value UNSET of OpenconfigMpls_IgpFloodingBandwidth_ThresholdType
	OpenconfigMpls_IgpFloodingBandwidth_ThresholdType_UNSET E_OpenconfigMpls_IgpFloodingBandwidth_ThresholdType = 0
	// OpenconfigMpls_IgpFloodingBandwidth_ThresholdType_DELTA corresponds to the value DELTA of OpenconfigMpls_IgpFloodingBandwidth_ThresholdType
	OpenconfigMpls_IgpFloodingBandwidth_ThresholdType_DELTA E_OpenconfigMpls_IgpFloodingBandwidth_ThresholdType = 1
	// OpenconfigMpls_IgpFloodingBandwidth_ThresholdType_THRESHOLD_CROSSED corresponds to the value THRESHOLD_CROSSED of OpenconfigMpls_IgpFloodingBandwidth_ThresholdType
	OpenconfigMpls_IgpFloodingBandwidth_ThresholdType_THRESHOLD_CROSSED E_OpenconfigMpls_IgpFloodingBandwidth_ThresholdType = 2
)

// E_OpenconfigMpls_MplsHopType is a derived int64 type which is used to represent
// the enumerated node OpenconfigMpls_MplsHopType. An additional value named
// OpenconfigMpls_MplsHopType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMpls_MplsHopType int64

// IsYANGGoEnum ensures that OpenconfigMpls_MplsHopType implements the yang.GoEnum
// interface. This ensures that OpenconfigMpls_MplsHopType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMpls_MplsHopType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMpls_MplsHopType.
func (E_OpenconfigMpls_MplsHopType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigMpls_MplsHopType_UNSET corresponds to the value UNSET of OpenconfigMpls_MplsHopType
	OpenconfigMpls_MplsHopType_UNSET E_OpenconfigMpls_MplsHopType = 0
	// OpenconfigMpls_MplsHopType_LOOSE corresponds to the value LOOSE of OpenconfigMpls_MplsHopType
	OpenconfigMpls_MplsHopType_LOOSE E_OpenconfigMpls_MplsHopType = 1
	// OpenconfigMpls_MplsHopType_STRICT corresponds to the value STRICT of OpenconfigMpls_MplsHopType
	OpenconfigMpls_MplsHopType_STRICT E_OpenconfigMpls_MplsHopType = 2
)

// E_OpenconfigMpls_MplsSrlgFloodingType is a derived int64 type which is used to represent
// the enumerated node OpenconfigMpls_MplsSrlgFloodingType. An additional value named
// OpenconfigMpls_MplsSrlgFloodingType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMpls_MplsSrlgFloodingType int64

// IsYANGGoEnum ensures that OpenconfigMpls_MplsSrlgFloodingType implements the yang.GoEnum
// interface. This ensures that OpenconfigMpls_MplsSrlgFloodingType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMpls_MplsSrlgFloodingType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMpls_MplsSrlgFloodingType.
func (E_OpenconfigMpls_MplsSrlgFloodingType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigMpls_MplsSrlgFloodingType_UNSET corresponds to the value UNSET of OpenconfigMpls_MplsSrlgFloodingType
	OpenconfigMpls_MplsSrlgFloodingType_UNSET E_OpenconfigMpls_MplsSrlgFloodingType = 0
	// OpenconfigMpls_MplsSrlgFloodingType_FLOODED_SRLG corresponds to the value FLOODED_SRLG of OpenconfigMpls_MplsSrlgFloodingType
	OpenconfigMpls_MplsSrlgFloodingType_FLOODED_SRLG E_OpenconfigMpls_MplsSrlgFloodingType = 1
	// OpenconfigMpls_MplsSrlgFloodingType_STATIC_SRLG corresponds to the value STATIC_SRLG of OpenconfigMpls_MplsSrlgFloodingType
	OpenconfigMpls_MplsSrlgFloodingType_STATIC_SRLG E_OpenconfigMpls_MplsSrlgFloodingType = 2
)

// E_OpenconfigMpls_ReservedLabelBlock_LowerBound is a derived int64 type which is used to represent
// the enumerated node OpenconfigMpls_ReservedLabelBlock_LowerBound. An additional value named
// OpenconfigMpls_ReservedLabelBlock_LowerBound_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMpls_ReservedLabelBlock_LowerBound int64

// IsYANGGoEnum ensures that OpenconfigMpls_ReservedLabelBlock_LowerBound implements the yang.GoEnum
// interface. This ensures that OpenconfigMpls_ReservedLabelBlock_LowerBound can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMpls_ReservedLabelBlock_LowerBound) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMpls_ReservedLabelBlock_LowerBound.
func (E_OpenconfigMpls_ReservedLabelBlock_LowerBound) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigMpls_ReservedLabelBlock_LowerBound_UNSET corresponds to the value UNSET of OpenconfigMpls_ReservedLabelBlock_LowerBound
	OpenconfigMpls_ReservedLabelBlock_LowerBound_UNSET E_OpenconfigMpls_ReservedLabelBlock_LowerBound = 0
	// OpenconfigMpls_ReservedLabelBlock_LowerBound_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of OpenconfigMpls_ReservedLabelBlock_LowerBound
	OpenconfigMpls_ReservedLabelBlock_LowerBound_IPV4_EXPLICIT_NULL E_OpenconfigMpls_ReservedLabelBlock_LowerBound = 1
	// OpenconfigMpls_ReservedLabelBlock_LowerBound_ROUTER_ALERT corresponds to the value ROUTER_ALERT of OpenconfigMpls_ReservedLabelBlock_LowerBound
	OpenconfigMpls_ReservedLabelBlock_LowerBound_ROUTER_ALERT E_OpenconfigMpls_ReservedLabelBlock_LowerBound = 2
	// OpenconfigMpls_ReservedLabelBlock_LowerBound_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of OpenconfigMpls_ReservedLabelBlock_LowerBound
	OpenconfigMpls_ReservedLabelBlock_LowerBound_IPV6_EXPLICIT_NULL E_OpenconfigMpls_ReservedLabelBlock_LowerBound = 3
	// OpenconfigMpls_ReservedLabelBlock_LowerBound_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of OpenconfigMpls_ReservedLabelBlock_LowerBound
	OpenconfigMpls_ReservedLabelBlock_LowerBound_IMPLICIT_NULL E_OpenconfigMpls_ReservedLabelBlock_LowerBound = 4
	// OpenconfigMpls_ReservedLabelBlock_LowerBound_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of OpenconfigMpls_ReservedLabelBlock_LowerBound
	OpenconfigMpls_ReservedLabelBlock_LowerBound_ENTROPY_LABEL_INDICATOR E_OpenconfigMpls_ReservedLabelBlock_LowerBound = 8
	// OpenconfigMpls_ReservedLabelBlock_LowerBound_NO_LABEL corresponds to the value NO_LABEL of OpenconfigMpls_ReservedLabelBlock_LowerBound
	OpenconfigMpls_ReservedLabelBlock_LowerBound_NO_LABEL E_OpenconfigMpls_ReservedLabelBlock_LowerBound = 9
)

// E_OpenconfigMpls_ReservedLabelBlock_UpperBound is a derived int64 type which is used to represent
// the enumerated node OpenconfigMpls_ReservedLabelBlock_UpperBound. An additional value named
// OpenconfigMpls_ReservedLabelBlock_UpperBound_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMpls_ReservedLabelBlock_UpperBound int64

// IsYANGGoEnum ensures that OpenconfigMpls_ReservedLabelBlock_UpperBound implements the yang.GoEnum
// interface. This ensures that OpenconfigMpls_ReservedLabelBlock_UpperBound can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMpls_ReservedLabelBlock_UpperBound) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMpls_ReservedLabelBlock_UpperBound.
func (E_OpenconfigMpls_ReservedLabelBlock_UpperBound) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigMpls_ReservedLabelBlock_UpperBound_UNSET corresponds to the value UNSET of OpenconfigMpls_ReservedLabelBlock_UpperBound
	OpenconfigMpls_ReservedLabelBlock_UpperBound_UNSET E_OpenconfigMpls_ReservedLabelBlock_UpperBound = 0
	// OpenconfigMpls_ReservedLabelBlock_UpperBound_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of OpenconfigMpls_ReservedLabelBlock_UpperBound
	OpenconfigMpls_ReservedLabelBlock_UpperBound_IPV4_EXPLICIT_NULL E_OpenconfigMpls_ReservedLabelBlock_UpperBound = 1
	// OpenconfigMpls_ReservedLabelBlock_UpperBound_ROUTER_ALERT corresponds to the value ROUTER_ALERT of OpenconfigMpls_ReservedLabelBlock_UpperBound
	OpenconfigMpls_ReservedLabelBlock_UpperBound_ROUTER_ALERT E_OpenconfigMpls_ReservedLabelBlock_UpperBound = 2
	// OpenconfigMpls_ReservedLabelBlock_UpperBound_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of OpenconfigMpls_ReservedLabelBlock_UpperBound
	OpenconfigMpls_ReservedLabelBlock_UpperBound_IPV6_EXPLICIT_NULL E_OpenconfigMpls_ReservedLabelBlock_UpperBound = 3
	// OpenconfigMpls_ReservedLabelBlock_UpperBound_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of OpenconfigMpls_ReservedLabelBlock_UpperBound
	OpenconfigMpls_ReservedLabelBlock_UpperBound_IMPLICIT_NULL E_OpenconfigMpls_ReservedLabelBlock_UpperBound = 4
	// OpenconfigMpls_ReservedLabelBlock_UpperBound_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of OpenconfigMpls_ReservedLabelBlock_UpperBound
	OpenconfigMpls_ReservedLabelBlock_UpperBound_ENTROPY_LABEL_INDICATOR E_OpenconfigMpls_ReservedLabelBlock_UpperBound = 8
	// OpenconfigMpls_ReservedLabelBlock_UpperBound_NO_LABEL corresponds to the value NO_LABEL of OpenconfigMpls_ReservedLabelBlock_UpperBound
	OpenconfigMpls_ReservedLabelBlock_UpperBound_NO_LABEL E_OpenconfigMpls_ReservedLabelBlock_UpperBound = 9
)

// E_OpenconfigMpls_TeBandwidthType is a derived int64 type which is used to represent
// the enumerated node OpenconfigMpls_TeBandwidthType. An additional value named
// OpenconfigMpls_TeBandwidthType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigMpls_TeBandwidthType int64

// IsYANGGoEnum ensures that OpenconfigMpls_TeBandwidthType implements the yang.GoEnum
// interface. This ensures that OpenconfigMpls_TeBandwidthType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigMpls_TeBandwidthType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigMpls_TeBandwidthType.
func (E_OpenconfigMpls_TeBandwidthType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigMpls_TeBandwidthType_UNSET corresponds to the value UNSET of OpenconfigMpls_TeBandwidthType
	OpenconfigMpls_TeBandwidthType_UNSET E_OpenconfigMpls_TeBandwidthType = 0
	// OpenconfigMpls_TeBandwidthType_SPECIFIED corresponds to the value SPECIFIED of OpenconfigMpls_TeBandwidthType
	OpenconfigMpls_TeBandwidthType_SPECIFIED E_OpenconfigMpls_TeBandwidthType = 1
	// OpenconfigMpls_TeBandwidthType_AUTO corresponds to the value AUTO of OpenconfigMpls_TeBandwidthType
	OpenconfigMpls_TeBandwidthType_AUTO E_OpenconfigMpls_TeBandwidthType = 2
)

// E_OpenconfigNetworkInstanceTypes_ENCAPSULATION is a derived int64 type which is used to represent
// the enumerated node OpenconfigNetworkInstanceTypes_ENCAPSULATION. An additional value named
// OpenconfigNetworkInstanceTypes_ENCAPSULATION_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigNetworkInstanceTypes_ENCAPSULATION int64

// IsYANGGoEnum ensures that OpenconfigNetworkInstanceTypes_ENCAPSULATION implements the yang.GoEnum
// interface. This ensures that OpenconfigNetworkInstanceTypes_ENCAPSULATION can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigNetworkInstanceTypes_ENCAPSULATION) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigNetworkInstanceTypes_ENCAPSULATION.
func (E_OpenconfigNetworkInstanceTypes_ENCAPSULATION) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigNetworkInstanceTypes_ENCAPSULATION_UNSET corresponds to the value UNSET of OpenconfigNetworkInstanceTypes_ENCAPSULATION
	OpenconfigNetworkInstanceTypes_ENCAPSULATION_UNSET E_OpenconfigNetworkInstanceTypes_ENCAPSULATION = 0
	// OpenconfigNetworkInstanceTypes_ENCAPSULATION_MPLS corresponds to the value MPLS of OpenconfigNetworkInstanceTypes_ENCAPSULATION
	OpenconfigNetworkInstanceTypes_ENCAPSULATION_MPLS E_OpenconfigNetworkInstanceTypes_ENCAPSULATION = 1
	// OpenconfigNetworkInstanceTypes_ENCAPSULATION_VXLAN corresponds to the value VXLAN of OpenconfigNetworkInstanceTypes_ENCAPSULATION
	OpenconfigNetworkInstanceTypes_ENCAPSULATION_VXLAN E_OpenconfigNetworkInstanceTypes_ENCAPSULATION = 2
)

// E_OpenconfigNetworkInstanceTypes_ENDPOINT_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigNetworkInstanceTypes_ENDPOINT_TYPE. An additional value named
// OpenconfigNetworkInstanceTypes_ENDPOINT_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigNetworkInstanceTypes_ENDPOINT_TYPE int64

// IsYANGGoEnum ensures that OpenconfigNetworkInstanceTypes_ENDPOINT_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigNetworkInstanceTypes_ENDPOINT_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigNetworkInstanceTypes_ENDPOINT_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigNetworkInstanceTypes_ENDPOINT_TYPE.
func (E_OpenconfigNetworkInstanceTypes_ENDPOINT_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigNetworkInstanceTypes_ENDPOINT_TYPE_UNSET corresponds to the value UNSET of OpenconfigNetworkInstanceTypes_ENDPOINT_TYPE
	OpenconfigNetworkInstanceTypes_ENDPOINT_TYPE_UNSET E_OpenconfigNetworkInstanceTypes_ENDPOINT_TYPE = 0
	// OpenconfigNetworkInstanceTypes_ENDPOINT_TYPE_LOCAL corresponds to the value LOCAL of OpenconfigNetworkInstanceTypes_ENDPOINT_TYPE
	OpenconfigNetworkInstanceTypes_ENDPOINT_TYPE_LOCAL E_OpenconfigNetworkInstanceTypes_ENDPOINT_TYPE = 1
	// OpenconfigNetworkInstanceTypes_ENDPOINT_TYPE_REMOTE corresponds to the value REMOTE of OpenconfigNetworkInstanceTypes_ENDPOINT_TYPE
	OpenconfigNetworkInstanceTypes_ENDPOINT_TYPE_REMOTE E_OpenconfigNetworkInstanceTypes_ENDPOINT_TYPE = 2
)

// E_OpenconfigNetworkInstanceTypes_LABEL_ALLOCATION_MODE is a derived int64 type which is used to represent
// the enumerated node OpenconfigNetworkInstanceTypes_LABEL_ALLOCATION_MODE. An additional value named
// OpenconfigNetworkInstanceTypes_LABEL_ALLOCATION_MODE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigNetworkInstanceTypes_LABEL_ALLOCATION_MODE int64

// IsYANGGoEnum ensures that OpenconfigNetworkInstanceTypes_LABEL_ALLOCATION_MODE implements the yang.GoEnum
// interface. This ensures that OpenconfigNetworkInstanceTypes_LABEL_ALLOCATION_MODE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigNetworkInstanceTypes_LABEL_ALLOCATION_MODE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigNetworkInstanceTypes_LABEL_ALLOCATION_MODE.
func (E_OpenconfigNetworkInstanceTypes_LABEL_ALLOCATION_MODE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigNetworkInstanceTypes_LABEL_ALLOCATION_MODE_UNSET corresponds to the value UNSET of OpenconfigNetworkInstanceTypes_LABEL_ALLOCATION_MODE
	OpenconfigNetworkInstanceTypes_LABEL_ALLOCATION_MODE_UNSET E_OpenconfigNetworkInstanceTypes_LABEL_ALLOCATION_MODE = 0
	// OpenconfigNetworkInstanceTypes_LABEL_ALLOCATION_MODE_INSTANCE_LABEL corresponds to the value INSTANCE_LABEL of OpenconfigNetworkInstanceTypes_LABEL_ALLOCATION_MODE
	OpenconfigNetworkInstanceTypes_LABEL_ALLOCATION_MODE_INSTANCE_LABEL E_OpenconfigNetworkInstanceTypes_LABEL_ALLOCATION_MODE = 1
	// OpenconfigNetworkInstanceTypes_LABEL_ALLOCATION_MODE_PER_NEXTHOP corresponds to the value PER_NEXTHOP of OpenconfigNetworkInstanceTypes_LABEL_ALLOCATION_MODE
	OpenconfigNetworkInstanceTypes_LABEL_ALLOCATION_MODE_PER_NEXTHOP E_OpenconfigNetworkInstanceTypes_LABEL_ALLOCATION_MODE = 2
	// OpenconfigNetworkInstanceTypes_LABEL_ALLOCATION_MODE_PER_PREFIX corresponds to the value PER_PREFIX of OpenconfigNetworkInstanceTypes_LABEL_ALLOCATION_MODE
	OpenconfigNetworkInstanceTypes_LABEL_ALLOCATION_MODE_PER_PREFIX E_OpenconfigNetworkInstanceTypes_LABEL_ALLOCATION_MODE = 3
)

// E_OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE. An additional value named
// OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE int64

// IsYANGGoEnum ensures that OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE.
func (E_OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE_UNSET corresponds to the value UNSET of OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE
	OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE_UNSET E_OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE = 0
	// OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE_DEFAULT_INSTANCE corresponds to the value DEFAULT_INSTANCE of OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE
	OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE_DEFAULT_INSTANCE E_OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE = 1
	// OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE_L2L3 corresponds to the value L2L3 of OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE
	OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE_L2L3 E_OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE = 2
	// OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE_L2P2P corresponds to the value L2P2P of OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE
	OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE_L2P2P E_OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE = 3
	// OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE_L2VSI corresponds to the value L2VSI of OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE
	OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE_L2VSI E_OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE = 4
	// OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE_L3VRF corresponds to the value L3VRF of OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE
	OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE_L3VRF E_OpenconfigNetworkInstanceTypes_NETWORK_INSTANCE_TYPE = 5
)

// E_OpenconfigNetworkInstance_Entry_EntryType is a derived int64 type which is used to represent
// the enumerated node OpenconfigNetworkInstance_Entry_EntryType. An additional value named
// OpenconfigNetworkInstance_Entry_EntryType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigNetworkInstance_Entry_EntryType int64

// IsYANGGoEnum ensures that OpenconfigNetworkInstance_Entry_EntryType implements the yang.GoEnum
// interface. This ensures that OpenconfigNetworkInstance_Entry_EntryType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigNetworkInstance_Entry_EntryType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigNetworkInstance_Entry_EntryType.
func (E_OpenconfigNetworkInstance_Entry_EntryType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigNetworkInstance_Entry_EntryType_UNSET corresponds to the value UNSET of OpenconfigNetworkInstance_Entry_EntryType
	OpenconfigNetworkInstance_Entry_EntryType_UNSET E_OpenconfigNetworkInstance_Entry_EntryType = 0
	// OpenconfigNetworkInstance_Entry_EntryType_STATIC corresponds to the value STATIC of OpenconfigNetworkInstance_Entry_EntryType
	OpenconfigNetworkInstance_Entry_EntryType_STATIC E_OpenconfigNetworkInstance_Entry_EntryType = 1
	// OpenconfigNetworkInstance_Entry_EntryType_DYNAMIC corresponds to the value DYNAMIC of OpenconfigNetworkInstance_Entry_EntryType
	OpenconfigNetworkInstance_Entry_EntryType_DYNAMIC E_OpenconfigNetworkInstance_Entry_EntryType = 2
)

// E_OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE is a derived int64 type which is used to represent
// the enumerated node OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE. An additional value named
// OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE int64

// IsYANGGoEnum ensures that OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE implements the yang.GoEnum
// interface. This ensures that OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE.
func (E_OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE_UNSET corresponds to the value UNSET of OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE
	OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE_UNSET E_OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE = 0
	// OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE_DSF corresponds to the value DSF of OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE
	OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE_DSF E_OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE = 1
	// OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE_LEAF corresponds to the value LEAF of OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE
	OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE_LEAF E_OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE = 2
	// OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE_SSMF corresponds to the value SSMF of OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE
	OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE_SSMF E_OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE = 3
	// OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE_TWC corresponds to the value TWC of OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE
	OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE_TWC E_OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE = 4
	// OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE_TWRS corresponds to the value TWRS of OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE
	OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE_TWRS E_OpenconfigOpticalAmplifier_FIBER_TYPE_PROFILE = 5
)

// E_OpenconfigOpticalAmplifier_GAIN_RANGE is a derived int64 type which is used to represent
// the enumerated node OpenconfigOpticalAmplifier_GAIN_RANGE. An additional value named
// OpenconfigOpticalAmplifier_GAIN_RANGE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOpticalAmplifier_GAIN_RANGE int64

// IsYANGGoEnum ensures that OpenconfigOpticalAmplifier_GAIN_RANGE implements the yang.GoEnum
// interface. This ensures that OpenconfigOpticalAmplifier_GAIN_RANGE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOpticalAmplifier_GAIN_RANGE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOpticalAmplifier_GAIN_RANGE.
func (E_OpenconfigOpticalAmplifier_GAIN_RANGE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOpticalAmplifier_GAIN_RANGE_UNSET corresponds to the value UNSET of OpenconfigOpticalAmplifier_GAIN_RANGE
	OpenconfigOpticalAmplifier_GAIN_RANGE_UNSET E_OpenconfigOpticalAmplifier_GAIN_RANGE = 0
	// OpenconfigOpticalAmplifier_GAIN_RANGE_FIXED_GAIN_RANGE corresponds to the value FIXED_GAIN_RANGE of OpenconfigOpticalAmplifier_GAIN_RANGE
	OpenconfigOpticalAmplifier_GAIN_RANGE_FIXED_GAIN_RANGE E_OpenconfigOpticalAmplifier_GAIN_RANGE = 1
	// OpenconfigOpticalAmplifier_GAIN_RANGE_HIGH_GAIN_RANGE corresponds to the value HIGH_GAIN_RANGE of OpenconfigOpticalAmplifier_GAIN_RANGE
	OpenconfigOpticalAmplifier_GAIN_RANGE_HIGH_GAIN_RANGE E_OpenconfigOpticalAmplifier_GAIN_RANGE = 2
	// OpenconfigOpticalAmplifier_GAIN_RANGE_LOW_GAIN_RANGE corresponds to the value LOW_GAIN_RANGE of OpenconfigOpticalAmplifier_GAIN_RANGE
	OpenconfigOpticalAmplifier_GAIN_RANGE_LOW_GAIN_RANGE E_OpenconfigOpticalAmplifier_GAIN_RANGE = 3
	// OpenconfigOpticalAmplifier_GAIN_RANGE_MID_GAIN_RANGE corresponds to the value MID_GAIN_RANGE of OpenconfigOpticalAmplifier_GAIN_RANGE
	OpenconfigOpticalAmplifier_GAIN_RANGE_MID_GAIN_RANGE E_OpenconfigOpticalAmplifier_GAIN_RANGE = 4
)

// E_OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_MODE is a derived int64 type which is used to represent
// the enumerated node OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_MODE. An additional value named
// OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_MODE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_MODE int64

// IsYANGGoEnum ensures that OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_MODE implements the yang.GoEnum
// interface. This ensures that OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_MODE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_MODE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_MODE.
func (E_OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_MODE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_MODE_UNSET corresponds to the value UNSET of OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_MODE
	OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_MODE_UNSET E_OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_MODE = 0
	// OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_MODE_CONSTANT_GAIN corresponds to the value CONSTANT_GAIN of OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_MODE
	OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_MODE_CONSTANT_GAIN E_OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_MODE = 1
	// OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_MODE_CONSTANT_POWER corresponds to the value CONSTANT_POWER of OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_MODE
	OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_MODE_CONSTANT_POWER E_OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_MODE = 2
)

// E_OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE. An additional value named
// OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE int64

// IsYANGGoEnum ensures that OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE.
func (E_OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE_UNSET corresponds to the value UNSET of OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE
	OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE_UNSET E_OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE = 0
	// OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE_BACKWARD_RAMAN corresponds to the value BACKWARD_RAMAN of OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE
	OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE_BACKWARD_RAMAN E_OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE = 1
	// OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE_EDFA corresponds to the value EDFA of OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE
	OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE_EDFA E_OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE = 2
	// OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE_FORWARD_RAMAN corresponds to the value FORWARD_RAMAN of OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE
	OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE_FORWARD_RAMAN E_OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE = 3
	// OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE_HYBRID corresponds to the value HYBRID of OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE
	OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE_HYBRID E_OpenconfigOpticalAmplifier_OPTICAL_AMPLIFIER_TYPE = 4
)

// E_OpenconfigOspfTypes_GRACE_LSA_TLV_TYPES is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfTypes_GRACE_LSA_TLV_TYPES. An additional value named
// OpenconfigOspfTypes_GRACE_LSA_TLV_TYPES_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfTypes_GRACE_LSA_TLV_TYPES int64

// IsYANGGoEnum ensures that OpenconfigOspfTypes_GRACE_LSA_TLV_TYPES implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfTypes_GRACE_LSA_TLV_TYPES can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfTypes_GRACE_LSA_TLV_TYPES) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfTypes_GRACE_LSA_TLV_TYPES.
func (E_OpenconfigOspfTypes_GRACE_LSA_TLV_TYPES) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfTypes_GRACE_LSA_TLV_TYPES_UNSET corresponds to the value UNSET of OpenconfigOspfTypes_GRACE_LSA_TLV_TYPES
	OpenconfigOspfTypes_GRACE_LSA_TLV_TYPES_UNSET E_OpenconfigOspfTypes_GRACE_LSA_TLV_TYPES = 0
	// OpenconfigOspfTypes_GRACE_LSA_TLV_TYPES_GRACE_IP_INTERFACE_ADDRESS corresponds to the value GRACE_IP_INTERFACE_ADDRESS of OpenconfigOspfTypes_GRACE_LSA_TLV_TYPES
	OpenconfigOspfTypes_GRACE_LSA_TLV_TYPES_GRACE_IP_INTERFACE_ADDRESS E_OpenconfigOspfTypes_GRACE_LSA_TLV_TYPES = 1
	// OpenconfigOspfTypes_GRACE_LSA_TLV_TYPES_GRACE_PERIOD corresponds to the value GRACE_PERIOD of OpenconfigOspfTypes_GRACE_LSA_TLV_TYPES
	OpenconfigOspfTypes_GRACE_LSA_TLV_TYPES_GRACE_PERIOD E_OpenconfigOspfTypes_GRACE_LSA_TLV_TYPES = 2
	// OpenconfigOspfTypes_GRACE_LSA_TLV_TYPES_GRACE_RESTART_REASON corresponds to the value GRACE_RESTART_REASON of OpenconfigOspfTypes_GRACE_LSA_TLV_TYPES
	OpenconfigOspfTypes_GRACE_LSA_TLV_TYPES_GRACE_RESTART_REASON E_OpenconfigOspfTypes_GRACE_LSA_TLV_TYPES = 3
)

// E_OpenconfigOspfTypes_MAX_METRIC_INCLUDE is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfTypes_MAX_METRIC_INCLUDE. An additional value named
// OpenconfigOspfTypes_MAX_METRIC_INCLUDE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfTypes_MAX_METRIC_INCLUDE int64

// IsYANGGoEnum ensures that OpenconfigOspfTypes_MAX_METRIC_INCLUDE implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfTypes_MAX_METRIC_INCLUDE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfTypes_MAX_METRIC_INCLUDE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfTypes_MAX_METRIC_INCLUDE.
func (E_OpenconfigOspfTypes_MAX_METRIC_INCLUDE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfTypes_MAX_METRIC_INCLUDE_UNSET corresponds to the value UNSET of OpenconfigOspfTypes_MAX_METRIC_INCLUDE
	OpenconfigOspfTypes_MAX_METRIC_INCLUDE_UNSET E_OpenconfigOspfTypes_MAX_METRIC_INCLUDE = 0
	// OpenconfigOspfTypes_MAX_METRIC_INCLUDE_MAX_METRIC_INCLUDE_STUB corresponds to the value MAX_METRIC_INCLUDE_STUB of OpenconfigOspfTypes_MAX_METRIC_INCLUDE
	OpenconfigOspfTypes_MAX_METRIC_INCLUDE_MAX_METRIC_INCLUDE_STUB E_OpenconfigOspfTypes_MAX_METRIC_INCLUDE = 1
	// OpenconfigOspfTypes_MAX_METRIC_INCLUDE_MAX_METRIC_INCLUDE_TYPE2_EXTERNAL corresponds to the value MAX_METRIC_INCLUDE_TYPE2_EXTERNAL of OpenconfigOspfTypes_MAX_METRIC_INCLUDE
	OpenconfigOspfTypes_MAX_METRIC_INCLUDE_MAX_METRIC_INCLUDE_TYPE2_EXTERNAL E_OpenconfigOspfTypes_MAX_METRIC_INCLUDE = 2
)

// E_OpenconfigOspfTypes_MAX_METRIC_TRIGGER is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfTypes_MAX_METRIC_TRIGGER. An additional value named
// OpenconfigOspfTypes_MAX_METRIC_TRIGGER_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfTypes_MAX_METRIC_TRIGGER int64

// IsYANGGoEnum ensures that OpenconfigOspfTypes_MAX_METRIC_TRIGGER implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfTypes_MAX_METRIC_TRIGGER can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfTypes_MAX_METRIC_TRIGGER) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfTypes_MAX_METRIC_TRIGGER.
func (E_OpenconfigOspfTypes_MAX_METRIC_TRIGGER) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfTypes_MAX_METRIC_TRIGGER_UNSET corresponds to the value UNSET of OpenconfigOspfTypes_MAX_METRIC_TRIGGER
	OpenconfigOspfTypes_MAX_METRIC_TRIGGER_UNSET E_OpenconfigOspfTypes_MAX_METRIC_TRIGGER = 0
	// OpenconfigOspfTypes_MAX_METRIC_TRIGGER_MAX_METRIC_ON_SYSTEM_BOOT corresponds to the value MAX_METRIC_ON_SYSTEM_BOOT of OpenconfigOspfTypes_MAX_METRIC_TRIGGER
	OpenconfigOspfTypes_MAX_METRIC_TRIGGER_MAX_METRIC_ON_SYSTEM_BOOT E_OpenconfigOspfTypes_MAX_METRIC_TRIGGER = 1
)

// E_OpenconfigOspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE. An additional value named
// OpenconfigOspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE int64

// IsYANGGoEnum ensures that OpenconfigOspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE.
func (E_OpenconfigOspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE_UNSET corresponds to the value UNSET of OpenconfigOspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE
	OpenconfigOspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE_UNSET E_OpenconfigOspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE = 0
	// OpenconfigOspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE_ADJACENCY_SID corresponds to the value ADJACENCY_SID of OpenconfigOspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE
	OpenconfigOspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE_ADJACENCY_SID E_OpenconfigOspfTypes_OSPFV2_EXTENDED_LINK_SUBTLV_TYPE = 1
)

// E_OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE. An additional value named
// OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE int64

// IsYANGGoEnum ensures that OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE.
func (E_OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_UNSET corresponds to the value UNSET of OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE
	OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_UNSET E_OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE = 0
	// OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_ERO_METRIC corresponds to the value ERO_METRIC of OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE
	OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_ERO_METRIC E_OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE = 1
	// OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_ERO_PATH corresponds to the value ERO_PATH of OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE
	OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_ERO_PATH E_OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE = 2
	// OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_SID_MPLS_LABEL_BINDING corresponds to the value SID_MPLS_LABEL_BINDING of OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE
	OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE_SID_MPLS_LABEL_BINDING E_OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SID_LABEL_BINDING_SUBTLV_TYPE = 3
)

// E_OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE. An additional value named
// OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE int64

// IsYANGGoEnum ensures that OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE.
func (E_OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_UNSET corresponds to the value UNSET of OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE
	OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_UNSET E_OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE = 0
	// OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_EXTENDED_PREFIX_RANGE corresponds to the value EXTENDED_PREFIX_RANGE of OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE
	OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_EXTENDED_PREFIX_RANGE E_OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE = 1
	// OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_PREFIX_SID corresponds to the value PREFIX_SID of OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE
	OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_PREFIX_SID E_OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE = 2
	// OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_SID_LABEL_BINDING corresponds to the value SID_LABEL_BINDING of OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE
	OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE_SID_LABEL_BINDING E_OpenconfigOspfTypes_OSPFV2_EXTENDED_PREFIX_SUBTLV_TYPE = 3
)

// E_OpenconfigOspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE. An additional value named
// OpenconfigOspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE int64

// IsYANGGoEnum ensures that OpenconfigOspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE.
func (E_OpenconfigOspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE_UNSET corresponds to the value UNSET of OpenconfigOspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE
	OpenconfigOspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE_UNSET E_OpenconfigOspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE = 0
	// OpenconfigOspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE_IPV4_SEGMENT corresponds to the value IPV4_SEGMENT of OpenconfigOspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE
	OpenconfigOspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE_IPV4_SEGMENT E_OpenconfigOspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE = 1
	// OpenconfigOspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE_UNNUMBERED_INTERFACE_SEGMENT corresponds to the value UNNUMBERED_INTERFACE_SEGMENT of OpenconfigOspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE
	OpenconfigOspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE_UNNUMBERED_INTERFACE_SEGMENT E_OpenconfigOspfTypes_OSPFV2_EXTPREFIX_BINDING_ERO_PATH_SEGMENT_TYPE = 2
)

// E_OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE. An additional value named
// OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE int64

// IsYANGGoEnum ensures that OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE.
func (E_OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE_UNSET corresponds to the value UNSET of OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE
	OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE_UNSET E_OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE = 0
	// OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE_POINT_TO_POINT_LINK corresponds to the value POINT_TO_POINT_LINK of OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE
	OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE_POINT_TO_POINT_LINK E_OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE = 1
	// OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE_STUB_NETWORK_LINK corresponds to the value STUB_NETWORK_LINK of OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE
	OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE_STUB_NETWORK_LINK E_OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE = 2
	// OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE_TRANSIT_NETWORK_LINK corresponds to the value TRANSIT_NETWORK_LINK of OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE
	OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE_TRANSIT_NETWORK_LINK E_OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE = 3
	// OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE_VIRTUAL_LINK corresponds to the value VIRTUAL_LINK of OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE
	OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE_VIRTUAL_LINK E_OpenconfigOspfTypes_OSPFV2_ROUTER_LINK_TYPE = 4
)

// E_OpenconfigOspfTypes_OSPF_LSA_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfTypes_OSPF_LSA_TYPE. An additional value named
// OpenconfigOspfTypes_OSPF_LSA_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfTypes_OSPF_LSA_TYPE int64

// IsYANGGoEnum ensures that OpenconfigOspfTypes_OSPF_LSA_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfTypes_OSPF_LSA_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfTypes_OSPF_LSA_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfTypes_OSPF_LSA_TYPE.
func (E_OpenconfigOspfTypes_OSPF_LSA_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfTypes_OSPF_LSA_TYPE_UNSET corresponds to the value UNSET of OpenconfigOspfTypes_OSPF_LSA_TYPE
	OpenconfigOspfTypes_OSPF_LSA_TYPE_UNSET E_OpenconfigOspfTypes_OSPF_LSA_TYPE = 0
	// OpenconfigOspfTypes_OSPF_LSA_TYPE_AS_EXTERNAL_LSA corresponds to the value AS_EXTERNAL_LSA of OpenconfigOspfTypes_OSPF_LSA_TYPE
	OpenconfigOspfTypes_OSPF_LSA_TYPE_AS_EXTERNAL_LSA E_OpenconfigOspfTypes_OSPF_LSA_TYPE = 1
	// OpenconfigOspfTypes_OSPF_LSA_TYPE_NETWORK_LSA corresponds to the value NETWORK_LSA of OpenconfigOspfTypes_OSPF_LSA_TYPE
	OpenconfigOspfTypes_OSPF_LSA_TYPE_NETWORK_LSA E_OpenconfigOspfTypes_OSPF_LSA_TYPE = 2
	// OpenconfigOspfTypes_OSPF_LSA_TYPE_NSSA_AS_EXTERNAL_LSA corresponds to the value NSSA_AS_EXTERNAL_LSA of OpenconfigOspfTypes_OSPF_LSA_TYPE
	OpenconfigOspfTypes_OSPF_LSA_TYPE_NSSA_AS_EXTERNAL_LSA E_OpenconfigOspfTypes_OSPF_LSA_TYPE = 3
	// OpenconfigOspfTypes_OSPF_LSA_TYPE_OSPFV2_AREA_SCOPE_OPAQUE_LSA corresponds to the value OSPFV2_AREA_SCOPE_OPAQUE_LSA of OpenconfigOspfTypes_OSPF_LSA_TYPE
	OpenconfigOspfTypes_OSPF_LSA_TYPE_OSPFV2_AREA_SCOPE_OPAQUE_LSA E_OpenconfigOspfTypes_OSPF_LSA_TYPE = 4
	// OpenconfigOspfTypes_OSPF_LSA_TYPE_OSPFV2_AS_SCOPE_OPAQUE_LSA corresponds to the value OSPFV2_AS_SCOPE_OPAQUE_LSA of OpenconfigOspfTypes_OSPF_LSA_TYPE
	OpenconfigOspfTypes_OSPF_LSA_TYPE_OSPFV2_AS_SCOPE_OPAQUE_LSA E_OpenconfigOspfTypes_OSPF_LSA_TYPE = 5
	// OpenconfigOspfTypes_OSPF_LSA_TYPE_OSPFV2_LINK_SCOPE_OPAQUE_LSA corresponds to the value OSPFV2_LINK_SCOPE_OPAQUE_LSA of OpenconfigOspfTypes_OSPF_LSA_TYPE
	OpenconfigOspfTypes_OSPF_LSA_TYPE_OSPFV2_LINK_SCOPE_OPAQUE_LSA E_OpenconfigOspfTypes_OSPF_LSA_TYPE = 6
	// OpenconfigOspfTypes_OSPF_LSA_TYPE_ROUTER_LSA corresponds to the value ROUTER_LSA of OpenconfigOspfTypes_OSPF_LSA_TYPE
	OpenconfigOspfTypes_OSPF_LSA_TYPE_ROUTER_LSA E_OpenconfigOspfTypes_OSPF_LSA_TYPE = 7
	// OpenconfigOspfTypes_OSPF_LSA_TYPE_SUMMARY_ASBR_LSA corresponds to the value SUMMARY_ASBR_LSA of OpenconfigOspfTypes_OSPF_LSA_TYPE
	OpenconfigOspfTypes_OSPF_LSA_TYPE_SUMMARY_ASBR_LSA E_OpenconfigOspfTypes_OSPF_LSA_TYPE = 8
	// OpenconfigOspfTypes_OSPF_LSA_TYPE_SUMMARY_IP_NETWORK_LSA corresponds to the value SUMMARY_IP_NETWORK_LSA of OpenconfigOspfTypes_OSPF_LSA_TYPE
	OpenconfigOspfTypes_OSPF_LSA_TYPE_SUMMARY_IP_NETWORK_LSA E_OpenconfigOspfTypes_OSPF_LSA_TYPE = 9
)

// E_OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE. An additional value named
// OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE int64

// IsYANGGoEnum ensures that OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE.
func (E_OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE_UNSET corresponds to the value UNSET of OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE
	OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE_UNSET E_OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE = 0
	// OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE_ATTEMPT corresponds to the value ATTEMPT of OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE
	OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE_ATTEMPT E_OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE = 1
	// OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE_DOWN corresponds to the value DOWN of OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE
	OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE_DOWN E_OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE = 2
	// OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE_EXCHANGE corresponds to the value EXCHANGE of OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE
	OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE_EXCHANGE E_OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE = 3
	// OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE_EXSTART corresponds to the value EXSTART of OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE
	OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE_EXSTART E_OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE = 4
	// OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE_FULL corresponds to the value FULL of OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE
	OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE_FULL E_OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE = 5
	// OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE_INIT corresponds to the value INIT of OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE
	OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE_INIT E_OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE = 6
	// OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE_LOADING corresponds to the value LOADING of OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE
	OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE_LOADING E_OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE = 7
	// OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE_TWO_WAY corresponds to the value TWO_WAY of OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE
	OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE_TWO_WAY E_OpenconfigOspfTypes_OSPF_NEIGHBOR_STATE = 8
)

// E_OpenconfigOspfTypes_OSPF_NETWORK_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfTypes_OSPF_NETWORK_TYPE. An additional value named
// OpenconfigOspfTypes_OSPF_NETWORK_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfTypes_OSPF_NETWORK_TYPE int64

// IsYANGGoEnum ensures that OpenconfigOspfTypes_OSPF_NETWORK_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfTypes_OSPF_NETWORK_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfTypes_OSPF_NETWORK_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfTypes_OSPF_NETWORK_TYPE.
func (E_OpenconfigOspfTypes_OSPF_NETWORK_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfTypes_OSPF_NETWORK_TYPE_UNSET corresponds to the value UNSET of OpenconfigOspfTypes_OSPF_NETWORK_TYPE
	OpenconfigOspfTypes_OSPF_NETWORK_TYPE_UNSET E_OpenconfigOspfTypes_OSPF_NETWORK_TYPE = 0
	// OpenconfigOspfTypes_OSPF_NETWORK_TYPE_BROADCAST_NETWORK corresponds to the value BROADCAST_NETWORK of OpenconfigOspfTypes_OSPF_NETWORK_TYPE
	OpenconfigOspfTypes_OSPF_NETWORK_TYPE_BROADCAST_NETWORK E_OpenconfigOspfTypes_OSPF_NETWORK_TYPE = 1
	// OpenconfigOspfTypes_OSPF_NETWORK_TYPE_NON_BROADCAST_NETWORK corresponds to the value NON_BROADCAST_NETWORK of OpenconfigOspfTypes_OSPF_NETWORK_TYPE
	OpenconfigOspfTypes_OSPF_NETWORK_TYPE_NON_BROADCAST_NETWORK E_OpenconfigOspfTypes_OSPF_NETWORK_TYPE = 2
	// OpenconfigOspfTypes_OSPF_NETWORK_TYPE_POINT_TO_POINT_NETWORK corresponds to the value POINT_TO_POINT_NETWORK of OpenconfigOspfTypes_OSPF_NETWORK_TYPE
	OpenconfigOspfTypes_OSPF_NETWORK_TYPE_POINT_TO_POINT_NETWORK E_OpenconfigOspfTypes_OSPF_NETWORK_TYPE = 3
)

// E_OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE. An additional value named
// OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE int64

// IsYANGGoEnum ensures that OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE.
func (E_OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE_UNSET corresponds to the value UNSET of OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE
	OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE_UNSET E_OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE = 0
	// OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE_GRACE_LSA corresponds to the value GRACE_LSA of OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE
	OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE_GRACE_LSA E_OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE = 1
	// OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE_OSPFV2_EXTENDED_LINK corresponds to the value OSPFV2_EXTENDED_LINK of OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE
	OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE_OSPFV2_EXTENDED_LINK E_OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE = 2
	// OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE_OSPFV2_EXTENDED_PREFIX corresponds to the value OSPFV2_EXTENDED_PREFIX of OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE
	OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE_OSPFV2_EXTENDED_PREFIX E_OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE = 3
	// OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE_ROUTER_INFORMATION corresponds to the value ROUTER_INFORMATION of OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE
	OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE_ROUTER_INFORMATION E_OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE = 4
	// OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE_TRAFFIC_ENGINEERING corresponds to the value TRAFFIC_ENGINEERING of OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE
	OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE_TRAFFIC_ENGINEERING E_OpenconfigOspfTypes_OSPF_OPAQUE_LSA_TYPE = 5
)

// E_OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES. An additional value named
// OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES int64

// IsYANGGoEnum ensures that OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES.
func (E_OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES_UNSET corresponds to the value UNSET of OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES
	OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES_UNSET E_OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES = 0
	// OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES_SR_SID_LABEL_TLV corresponds to the value SR_SID_LABEL_TLV of OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES
	OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES_SR_SID_LABEL_TLV E_OpenconfigOspfTypes_OSPF_RI_SR_SID_LABEL_TLV_TYPES = 1
)

// E_OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE. An additional value named
// OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE int64

// IsYANGGoEnum ensures that OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE.
func (E_OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE_UNSET corresponds to the value UNSET of OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE
	OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE_UNSET E_OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE = 0
	// OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_ADMIN_GROUP corresponds to the value TE_LINK_ADMIN_GROUP of OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE
	OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_ADMIN_GROUP E_OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE = 1
	// OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_ID corresponds to the value TE_LINK_ID of OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE
	OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_ID E_OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE = 2
	// OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_LOCAL_IP corresponds to the value TE_LINK_LOCAL_IP of OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE
	OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_LOCAL_IP E_OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE = 3
	// OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_MAXIMUM_BANDWIDTH corresponds to the value TE_LINK_MAXIMUM_BANDWIDTH of OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE
	OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_MAXIMUM_BANDWIDTH E_OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE = 4
	// OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_MAXIMUM_RESERVABLE_BANDWIDTH corresponds to the value TE_LINK_MAXIMUM_RESERVABLE_BANDWIDTH of OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE
	OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_MAXIMUM_RESERVABLE_BANDWIDTH E_OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE = 5
	// OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_METRIC corresponds to the value TE_LINK_METRIC of OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE
	OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_METRIC E_OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE = 6
	// OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_REMOTE_IP corresponds to the value TE_LINK_REMOTE_IP of OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE
	OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_REMOTE_IP E_OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE = 7
	// OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_TYPE corresponds to the value TE_LINK_TYPE of OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE
	OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_TYPE E_OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE = 8
	// OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_UNRESERVED_BANDWIDTH corresponds to the value TE_LINK_UNRESERVED_BANDWIDTH of OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE
	OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE_TE_LINK_UNRESERVED_BANDWIDTH E_OpenconfigOspfTypes_OSPF_TE_LINK_TLV_TYPE = 9
)

// E_OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE. An additional value named
// OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE int64

// IsYANGGoEnum ensures that OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE.
func (E_OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE_UNSET corresponds to the value UNSET of OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE
	OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE_UNSET E_OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE = 0
	// OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_LINK corresponds to the value TE_LINK of OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE
	OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_LINK E_OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE = 1
	// OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_LINK_LOCAL corresponds to the value TE_LINK_LOCAL of OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE
	OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_LINK_LOCAL E_OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE = 2
	// OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_NODE_ATTRIBUTE corresponds to the value TE_NODE_ATTRIBUTE of OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE
	OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_NODE_ATTRIBUTE E_OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE = 3
	// OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_OPTICAL_NODE_PROPERTY corresponds to the value TE_OPTICAL_NODE_PROPERTY of OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE
	OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_OPTICAL_NODE_PROPERTY E_OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE = 4
	// OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_ROUTER_ADDRESS corresponds to the value TE_ROUTER_ADDRESS of OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE
	OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_ROUTER_ADDRESS E_OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE = 5
	// OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_ROUTER_IPV6_ADDRESS corresponds to the value TE_ROUTER_IPV6_ADDRESS of OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE
	OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE_TE_ROUTER_IPV6_ADDRESS E_OpenconfigOspfTypes_OSPF_TE_LSA_TLV_TYPE = 6
)

// E_OpenconfigOspfTypes_RI_LSA_TLV_TYPES is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfTypes_RI_LSA_TLV_TYPES. An additional value named
// OpenconfigOspfTypes_RI_LSA_TLV_TYPES_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfTypes_RI_LSA_TLV_TYPES int64

// IsYANGGoEnum ensures that OpenconfigOspfTypes_RI_LSA_TLV_TYPES implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfTypes_RI_LSA_TLV_TYPES can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfTypes_RI_LSA_TLV_TYPES) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfTypes_RI_LSA_TLV_TYPES.
func (E_OpenconfigOspfTypes_RI_LSA_TLV_TYPES) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfTypes_RI_LSA_TLV_TYPES_UNSET corresponds to the value UNSET of OpenconfigOspfTypes_RI_LSA_TLV_TYPES
	OpenconfigOspfTypes_RI_LSA_TLV_TYPES_UNSET E_OpenconfigOspfTypes_RI_LSA_TLV_TYPES = 0
	// OpenconfigOspfTypes_RI_LSA_TLV_TYPES_RI_FUNCTIONAL_CAPABILITIES corresponds to the value RI_FUNCTIONAL_CAPABILITIES of OpenconfigOspfTypes_RI_LSA_TLV_TYPES
	OpenconfigOspfTypes_RI_LSA_TLV_TYPES_RI_FUNCTIONAL_CAPABILITIES E_OpenconfigOspfTypes_RI_LSA_TLV_TYPES = 1
	// OpenconfigOspfTypes_RI_LSA_TLV_TYPES_RI_INFORMATIONAL_CAPABILITIES corresponds to the value RI_INFORMATIONAL_CAPABILITIES of OpenconfigOspfTypes_RI_LSA_TLV_TYPES
	OpenconfigOspfTypes_RI_LSA_TLV_TYPES_RI_INFORMATIONAL_CAPABILITIES E_OpenconfigOspfTypes_RI_LSA_TLV_TYPES = 2
	// OpenconfigOspfTypes_RI_LSA_TLV_TYPES_RI_NODE_ADMIN_TAG corresponds to the value RI_NODE_ADMIN_TAG of OpenconfigOspfTypes_RI_LSA_TLV_TYPES
	OpenconfigOspfTypes_RI_LSA_TLV_TYPES_RI_NODE_ADMIN_TAG E_OpenconfigOspfTypes_RI_LSA_TLV_TYPES = 3
	// OpenconfigOspfTypes_RI_LSA_TLV_TYPES_RI_SR_ALGORITHM corresponds to the value RI_SR_ALGORITHM of OpenconfigOspfTypes_RI_LSA_TLV_TYPES
	OpenconfigOspfTypes_RI_LSA_TLV_TYPES_RI_SR_ALGORITHM E_OpenconfigOspfTypes_RI_LSA_TLV_TYPES = 4
	// OpenconfigOspfTypes_RI_LSA_TLV_TYPES_RI_SR_SID_LABEL_RANGE corresponds to the value RI_SR_SID_LABEL_RANGE of OpenconfigOspfTypes_RI_LSA_TLV_TYPES
	OpenconfigOspfTypes_RI_LSA_TLV_TYPES_RI_SR_SID_LABEL_RANGE E_OpenconfigOspfTypes_RI_LSA_TLV_TYPES = 5
)

// E_OpenconfigOspfTypes_ROUTER_LSA_TYPES is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfTypes_ROUTER_LSA_TYPES. An additional value named
// OpenconfigOspfTypes_ROUTER_LSA_TYPES_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfTypes_ROUTER_LSA_TYPES int64

// IsYANGGoEnum ensures that OpenconfigOspfTypes_ROUTER_LSA_TYPES implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfTypes_ROUTER_LSA_TYPES can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfTypes_ROUTER_LSA_TYPES) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfTypes_ROUTER_LSA_TYPES.
func (E_OpenconfigOspfTypes_ROUTER_LSA_TYPES) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfTypes_ROUTER_LSA_TYPES_UNSET corresponds to the value UNSET of OpenconfigOspfTypes_ROUTER_LSA_TYPES
	OpenconfigOspfTypes_ROUTER_LSA_TYPES_UNSET E_OpenconfigOspfTypes_ROUTER_LSA_TYPES = 0
	// OpenconfigOspfTypes_ROUTER_LSA_TYPES_ROUTER_LSA_P2P corresponds to the value ROUTER_LSA_P2P of OpenconfigOspfTypes_ROUTER_LSA_TYPES
	OpenconfigOspfTypes_ROUTER_LSA_TYPES_ROUTER_LSA_P2P E_OpenconfigOspfTypes_ROUTER_LSA_TYPES = 1
	// OpenconfigOspfTypes_ROUTER_LSA_TYPES_ROUTER_LSA_STUB_NETWORK corresponds to the value ROUTER_LSA_STUB_NETWORK of OpenconfigOspfTypes_ROUTER_LSA_TYPES
	OpenconfigOspfTypes_ROUTER_LSA_TYPES_ROUTER_LSA_STUB_NETWORK E_OpenconfigOspfTypes_ROUTER_LSA_TYPES = 2
	// OpenconfigOspfTypes_ROUTER_LSA_TYPES_ROUTER_LSA_TRANSIT_NETWORK corresponds to the value ROUTER_LSA_TRANSIT_NETWORK of OpenconfigOspfTypes_ROUTER_LSA_TYPES
	OpenconfigOspfTypes_ROUTER_LSA_TYPES_ROUTER_LSA_TRANSIT_NETWORK E_OpenconfigOspfTypes_ROUTER_LSA_TYPES = 3
	// OpenconfigOspfTypes_ROUTER_LSA_TYPES_ROUTER_LSA_VIRTUAL_LINK corresponds to the value ROUTER_LSA_VIRTUAL_LINK of OpenconfigOspfTypes_ROUTER_LSA_TYPES
	OpenconfigOspfTypes_ROUTER_LSA_TYPES_ROUTER_LSA_VIRTUAL_LINK E_OpenconfigOspfTypes_ROUTER_LSA_TYPES = 4
)

// E_OpenconfigOspfTypes_SR_ALGORITHM is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfTypes_SR_ALGORITHM. An additional value named
// OpenconfigOspfTypes_SR_ALGORITHM_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfTypes_SR_ALGORITHM int64

// IsYANGGoEnum ensures that OpenconfigOspfTypes_SR_ALGORITHM implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfTypes_SR_ALGORITHM can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfTypes_SR_ALGORITHM) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfTypes_SR_ALGORITHM.
func (E_OpenconfigOspfTypes_SR_ALGORITHM) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfTypes_SR_ALGORITHM_UNSET corresponds to the value UNSET of OpenconfigOspfTypes_SR_ALGORITHM
	OpenconfigOspfTypes_SR_ALGORITHM_UNSET E_OpenconfigOspfTypes_SR_ALGORITHM = 0
	// OpenconfigOspfTypes_SR_ALGORITHM_SPF corresponds to the value SPF of OpenconfigOspfTypes_SR_ALGORITHM
	OpenconfigOspfTypes_SR_ALGORITHM_SPF E_OpenconfigOspfTypes_SR_ALGORITHM = 1
	// OpenconfigOspfTypes_SR_ALGORITHM_STRICT_SPF corresponds to the value STRICT_SPF of OpenconfigOspfTypes_SR_ALGORITHM
	OpenconfigOspfTypes_SR_ALGORITHM_STRICT_SPF E_OpenconfigOspfTypes_SR_ALGORITHM = 2
)

// E_OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE. An additional value named
// OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE int64

// IsYANGGoEnum ensures that OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE.
func (E_OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE_UNSET corresponds to the value UNSET of OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE
	OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE_UNSET E_OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE = 0
	// OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE_NODE_IPV4_LOCAL_ADDRESS corresponds to the value NODE_IPV4_LOCAL_ADDRESS of OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE
	OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE_NODE_IPV4_LOCAL_ADDRESS E_OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE = 1
	// OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE_NODE_IPV6_LOCAL_ADDRESS corresponds to the value NODE_IPV6_LOCAL_ADDRESS of OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE
	OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE_NODE_IPV6_LOCAL_ADDRESS E_OpenconfigOspfTypes_TE_NODE_ATTRIBUTE_TLV_TYPE = 2
)

// E_OpenconfigOspfv2_AsExternalLsa_MetricType is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfv2_AsExternalLsa_MetricType. An additional value named
// OpenconfigOspfv2_AsExternalLsa_MetricType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfv2_AsExternalLsa_MetricType int64

// IsYANGGoEnum ensures that OpenconfigOspfv2_AsExternalLsa_MetricType implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfv2_AsExternalLsa_MetricType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfv2_AsExternalLsa_MetricType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfv2_AsExternalLsa_MetricType.
func (E_OpenconfigOspfv2_AsExternalLsa_MetricType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfv2_AsExternalLsa_MetricType_UNSET corresponds to the value UNSET of OpenconfigOspfv2_AsExternalLsa_MetricType
	OpenconfigOspfv2_AsExternalLsa_MetricType_UNSET E_OpenconfigOspfv2_AsExternalLsa_MetricType = 0
	// OpenconfigOspfv2_AsExternalLsa_MetricType_TYPE_1 corresponds to the value TYPE_1 of OpenconfigOspfv2_AsExternalLsa_MetricType
	OpenconfigOspfv2_AsExternalLsa_MetricType_TYPE_1 E_OpenconfigOspfv2_AsExternalLsa_MetricType = 1
	// OpenconfigOspfv2_AsExternalLsa_MetricType_TYPE_2 corresponds to the value TYPE_2 of OpenconfigOspfv2_AsExternalLsa_MetricType
	OpenconfigOspfv2_AsExternalLsa_MetricType_TYPE_2 E_OpenconfigOspfv2_AsExternalLsa_MetricType = 2
)

// E_OpenconfigOspfv2_ExtendedPrefix_AddressFamily is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfv2_ExtendedPrefix_AddressFamily. An additional value named
// OpenconfigOspfv2_ExtendedPrefix_AddressFamily_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfv2_ExtendedPrefix_AddressFamily int64

// IsYANGGoEnum ensures that OpenconfigOspfv2_ExtendedPrefix_AddressFamily implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfv2_ExtendedPrefix_AddressFamily can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfv2_ExtendedPrefix_AddressFamily) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfv2_ExtendedPrefix_AddressFamily.
func (E_OpenconfigOspfv2_ExtendedPrefix_AddressFamily) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfv2_ExtendedPrefix_AddressFamily_UNSET corresponds to the value UNSET of OpenconfigOspfv2_ExtendedPrefix_AddressFamily
	OpenconfigOspfv2_ExtendedPrefix_AddressFamily_UNSET E_OpenconfigOspfv2_ExtendedPrefix_AddressFamily = 0
	// OpenconfigOspfv2_ExtendedPrefix_AddressFamily_IPV4_UNICAST corresponds to the value IPV4_UNICAST of OpenconfigOspfv2_ExtendedPrefix_AddressFamily
	OpenconfigOspfv2_ExtendedPrefix_AddressFamily_IPV4_UNICAST E_OpenconfigOspfv2_ExtendedPrefix_AddressFamily = 1
)

// E_OpenconfigOspfv2_ExtendedPrefix_RouteType is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfv2_ExtendedPrefix_RouteType. An additional value named
// OpenconfigOspfv2_ExtendedPrefix_RouteType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfv2_ExtendedPrefix_RouteType int64

// IsYANGGoEnum ensures that OpenconfigOspfv2_ExtendedPrefix_RouteType implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfv2_ExtendedPrefix_RouteType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfv2_ExtendedPrefix_RouteType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfv2_ExtendedPrefix_RouteType.
func (E_OpenconfigOspfv2_ExtendedPrefix_RouteType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfv2_ExtendedPrefix_RouteType_UNSET corresponds to the value UNSET of OpenconfigOspfv2_ExtendedPrefix_RouteType
	OpenconfigOspfv2_ExtendedPrefix_RouteType_UNSET E_OpenconfigOspfv2_ExtendedPrefix_RouteType = 0
	// OpenconfigOspfv2_ExtendedPrefix_RouteType_UNSPECIFIED corresponds to the value UNSPECIFIED of OpenconfigOspfv2_ExtendedPrefix_RouteType
	OpenconfigOspfv2_ExtendedPrefix_RouteType_UNSPECIFIED E_OpenconfigOspfv2_ExtendedPrefix_RouteType = 1
	// OpenconfigOspfv2_ExtendedPrefix_RouteType_INTRA_AREA corresponds to the value INTRA_AREA of OpenconfigOspfv2_ExtendedPrefix_RouteType
	OpenconfigOspfv2_ExtendedPrefix_RouteType_INTRA_AREA E_OpenconfigOspfv2_ExtendedPrefix_RouteType = 2
	// OpenconfigOspfv2_ExtendedPrefix_RouteType_INTER_AREA corresponds to the value INTER_AREA of OpenconfigOspfv2_ExtendedPrefix_RouteType
	OpenconfigOspfv2_ExtendedPrefix_RouteType_INTER_AREA E_OpenconfigOspfv2_ExtendedPrefix_RouteType = 4
	// OpenconfigOspfv2_ExtendedPrefix_RouteType_AS_EXTERNAL corresponds to the value AS_EXTERNAL of OpenconfigOspfv2_ExtendedPrefix_RouteType
	OpenconfigOspfv2_ExtendedPrefix_RouteType_AS_EXTERNAL E_OpenconfigOspfv2_ExtendedPrefix_RouteType = 6
	// OpenconfigOspfv2_ExtendedPrefix_RouteType_NSSA_EXTERNAL corresponds to the value NSSA_EXTERNAL of OpenconfigOspfv2_ExtendedPrefix_RouteType
	OpenconfigOspfv2_ExtendedPrefix_RouteType_NSSA_EXTERNAL E_OpenconfigOspfv2_ExtendedPrefix_RouteType = 8
)

// E_OpenconfigOspfv2_Global_SummaryRouteCostMode is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfv2_Global_SummaryRouteCostMode. An additional value named
// OpenconfigOspfv2_Global_SummaryRouteCostMode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfv2_Global_SummaryRouteCostMode int64

// IsYANGGoEnum ensures that OpenconfigOspfv2_Global_SummaryRouteCostMode implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfv2_Global_SummaryRouteCostMode can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfv2_Global_SummaryRouteCostMode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfv2_Global_SummaryRouteCostMode.
func (E_OpenconfigOspfv2_Global_SummaryRouteCostMode) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfv2_Global_SummaryRouteCostMode_UNSET corresponds to the value UNSET of OpenconfigOspfv2_Global_SummaryRouteCostMode
	OpenconfigOspfv2_Global_SummaryRouteCostMode_UNSET E_OpenconfigOspfv2_Global_SummaryRouteCostMode = 0
	// OpenconfigOspfv2_Global_SummaryRouteCostMode_RFC1583_COMPATIBLE corresponds to the value RFC1583_COMPATIBLE of OpenconfigOspfv2_Global_SummaryRouteCostMode
	OpenconfigOspfv2_Global_SummaryRouteCostMode_RFC1583_COMPATIBLE E_OpenconfigOspfv2_Global_SummaryRouteCostMode = 1
	// OpenconfigOspfv2_Global_SummaryRouteCostMode_RFC2328_COMPATIBLE corresponds to the value RFC2328_COMPATIBLE of OpenconfigOspfv2_Global_SummaryRouteCostMode
	OpenconfigOspfv2_Global_SummaryRouteCostMode_RFC2328_COMPATIBLE E_OpenconfigOspfv2_Global_SummaryRouteCostMode = 2
)

// E_OpenconfigOspfv2_LsaGeneration_TimerType is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfv2_LsaGeneration_TimerType. An additional value named
// OpenconfigOspfv2_LsaGeneration_TimerType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfv2_LsaGeneration_TimerType int64

// IsYANGGoEnum ensures that OpenconfigOspfv2_LsaGeneration_TimerType implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfv2_LsaGeneration_TimerType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfv2_LsaGeneration_TimerType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfv2_LsaGeneration_TimerType.
func (E_OpenconfigOspfv2_LsaGeneration_TimerType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfv2_LsaGeneration_TimerType_UNSET corresponds to the value UNSET of OpenconfigOspfv2_LsaGeneration_TimerType
	OpenconfigOspfv2_LsaGeneration_TimerType_UNSET E_OpenconfigOspfv2_LsaGeneration_TimerType = 0
	// OpenconfigOspfv2_LsaGeneration_TimerType_LINEAR_BACKOFF corresponds to the value LINEAR_BACKOFF of OpenconfigOspfv2_LsaGeneration_TimerType
	OpenconfigOspfv2_LsaGeneration_TimerType_LINEAR_BACKOFF E_OpenconfigOspfv2_LsaGeneration_TimerType = 1
	// OpenconfigOspfv2_LsaGeneration_TimerType_EXPONENTIAL_BACKOFF corresponds to the value EXPONENTIAL_BACKOFF of OpenconfigOspfv2_LsaGeneration_TimerType
	OpenconfigOspfv2_LsaGeneration_TimerType_EXPONENTIAL_BACKOFF E_OpenconfigOspfv2_LsaGeneration_TimerType = 2
)

// E_OpenconfigOspfv2_OpaqueLsa_Scope is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfv2_OpaqueLsa_Scope. An additional value named
// OpenconfigOspfv2_OpaqueLsa_Scope_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfv2_OpaqueLsa_Scope int64

// IsYANGGoEnum ensures that OpenconfigOspfv2_OpaqueLsa_Scope implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfv2_OpaqueLsa_Scope can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfv2_OpaqueLsa_Scope) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfv2_OpaqueLsa_Scope.
func (E_OpenconfigOspfv2_OpaqueLsa_Scope) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfv2_OpaqueLsa_Scope_UNSET corresponds to the value UNSET of OpenconfigOspfv2_OpaqueLsa_Scope
	OpenconfigOspfv2_OpaqueLsa_Scope_UNSET E_OpenconfigOspfv2_OpaqueLsa_Scope = 0
	// OpenconfigOspfv2_OpaqueLsa_Scope_LINK corresponds to the value LINK of OpenconfigOspfv2_OpaqueLsa_Scope
	OpenconfigOspfv2_OpaqueLsa_Scope_LINK E_OpenconfigOspfv2_OpaqueLsa_Scope = 1
	// OpenconfigOspfv2_OpaqueLsa_Scope_AREA corresponds to the value AREA of OpenconfigOspfv2_OpaqueLsa_Scope
	OpenconfigOspfv2_OpaqueLsa_Scope_AREA E_OpenconfigOspfv2_OpaqueLsa_Scope = 2
	// OpenconfigOspfv2_OpaqueLsa_Scope_AS corresponds to the value AS of OpenconfigOspfv2_OpaqueLsa_Scope
	OpenconfigOspfv2_OpaqueLsa_Scope_AS E_OpenconfigOspfv2_OpaqueLsa_Scope = 3
)

// E_OpenconfigOspfv2_PrefixSid_SidScope is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfv2_PrefixSid_SidScope. An additional value named
// OpenconfigOspfv2_PrefixSid_SidScope_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfv2_PrefixSid_SidScope int64

// IsYANGGoEnum ensures that OpenconfigOspfv2_PrefixSid_SidScope implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfv2_PrefixSid_SidScope can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfv2_PrefixSid_SidScope) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfv2_PrefixSid_SidScope.
func (E_OpenconfigOspfv2_PrefixSid_SidScope) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfv2_PrefixSid_SidScope_UNSET corresponds to the value UNSET of OpenconfigOspfv2_PrefixSid_SidScope
	OpenconfigOspfv2_PrefixSid_SidScope_UNSET E_OpenconfigOspfv2_PrefixSid_SidScope = 0
	// OpenconfigOspfv2_PrefixSid_SidScope_LOCAL corresponds to the value LOCAL of OpenconfigOspfv2_PrefixSid_SidScope
	OpenconfigOspfv2_PrefixSid_SidScope_LOCAL E_OpenconfigOspfv2_PrefixSid_SidScope = 1
	// OpenconfigOspfv2_PrefixSid_SidScope_GLOBAL corresponds to the value GLOBAL of OpenconfigOspfv2_PrefixSid_SidScope
	OpenconfigOspfv2_PrefixSid_SidScope_GLOBAL E_OpenconfigOspfv2_PrefixSid_SidScope = 2
)

// E_OpenconfigOspfv2_PrefixSid_SidValueType is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfv2_PrefixSid_SidValueType. An additional value named
// OpenconfigOspfv2_PrefixSid_SidValueType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfv2_PrefixSid_SidValueType int64

// IsYANGGoEnum ensures that OpenconfigOspfv2_PrefixSid_SidValueType implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfv2_PrefixSid_SidValueType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfv2_PrefixSid_SidValueType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfv2_PrefixSid_SidValueType.
func (E_OpenconfigOspfv2_PrefixSid_SidValueType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfv2_PrefixSid_SidValueType_UNSET corresponds to the value UNSET of OpenconfigOspfv2_PrefixSid_SidValueType
	OpenconfigOspfv2_PrefixSid_SidValueType_UNSET E_OpenconfigOspfv2_PrefixSid_SidValueType = 0
	// OpenconfigOspfv2_PrefixSid_SidValueType_ABSOLUTE corresponds to the value ABSOLUTE of OpenconfigOspfv2_PrefixSid_SidValueType
	OpenconfigOspfv2_PrefixSid_SidValueType_ABSOLUTE E_OpenconfigOspfv2_PrefixSid_SidValueType = 1
	// OpenconfigOspfv2_PrefixSid_SidValueType_INDEX corresponds to the value INDEX of OpenconfigOspfv2_PrefixSid_SidValueType
	OpenconfigOspfv2_PrefixSid_SidValueType_INDEX E_OpenconfigOspfv2_PrefixSid_SidValueType = 2
)

// E_OpenconfigOspfv2_SrSidType is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfv2_SrSidType. An additional value named
// OpenconfigOspfv2_SrSidType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfv2_SrSidType int64

// IsYANGGoEnum ensures that OpenconfigOspfv2_SrSidType implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfv2_SrSidType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfv2_SrSidType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfv2_SrSidType.
func (E_OpenconfigOspfv2_SrSidType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigOspfv2_SrSidType_UNSET corresponds to the value UNSET of OpenconfigOspfv2_SrSidType
	OpenconfigOspfv2_SrSidType_UNSET E_OpenconfigOspfv2_SrSidType = 0
	// OpenconfigOspfv2_SrSidType_LABEL corresponds to the value LABEL of OpenconfigOspfv2_SrSidType
	OpenconfigOspfv2_SrSidType_LABEL E_OpenconfigOspfv2_SrSidType = 1
	// OpenconfigOspfv2_SrSidType_SID corresponds to the value SID of OpenconfigOspfv2_SrSidType
	OpenconfigOspfv2_SrSidType_SID E_OpenconfigOspfv2_SrSidType = 2
)

// E_OpenconfigOspfv2_SubTlv_LinkType is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfv2_SubTlv_LinkType. An additional value named
// OpenconfigOspfv2_SubTlv_LinkType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfv2_SubTlv_LinkType int64

// IsYANGGoEnum ensures that OpenconfigOspfv2_SubTlv_LinkType implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfv2_SubTlv_LinkType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfv2_SubTlv_LinkType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfv2_SubTlv_LinkType.
func (E_OpenconfigOspfv2_SubTlv_LinkType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigOspfv2_SubTlv_LinkType_UNSET corresponds to the value UNSET of OpenconfigOspfv2_SubTlv_LinkType
	OpenconfigOspfv2_SubTlv_LinkType_UNSET E_OpenconfigOspfv2_SubTlv_LinkType = 0
	// OpenconfigOspfv2_SubTlv_LinkType_POINT_TO_POINT corresponds to the value POINT_TO_POINT of OpenconfigOspfv2_SubTlv_LinkType
	OpenconfigOspfv2_SubTlv_LinkType_POINT_TO_POINT E_OpenconfigOspfv2_SubTlv_LinkType = 1
	// OpenconfigOspfv2_SubTlv_LinkType_MULTI_ACCESS corresponds to the value MULTI_ACCESS of OpenconfigOspfv2_SubTlv_LinkType
	OpenconfigOspfv2_SubTlv_LinkType_MULTI_ACCESS E_OpenconfigOspfv2_SubTlv_LinkType = 2
	// OpenconfigOspfv2_SubTlv_LinkType_UNKNOWN corresponds to the value UNKNOWN of OpenconfigOspfv2_SubTlv_LinkType
	OpenconfigOspfv2_SubTlv_LinkType_UNKNOWN E_OpenconfigOspfv2_SubTlv_LinkType = 3
)

// E_OpenconfigOspfv2_SubTlv_Type is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfv2_SubTlv_Type. An additional value named
// OpenconfigOspfv2_SubTlv_Type_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfv2_SubTlv_Type int64

// IsYANGGoEnum ensures that OpenconfigOspfv2_SubTlv_Type implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfv2_SubTlv_Type can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfv2_SubTlv_Type) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfv2_SubTlv_Type.
func (E_OpenconfigOspfv2_SubTlv_Type) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigOspfv2_SubTlv_Type_UNSET corresponds to the value UNSET of OpenconfigOspfv2_SubTlv_Type
	OpenconfigOspfv2_SubTlv_Type_UNSET E_OpenconfigOspfv2_SubTlv_Type = 0
	// OpenconfigOspfv2_SubTlv_Type_UNKNOWN corresponds to the value UNKNOWN of OpenconfigOspfv2_SubTlv_Type
	OpenconfigOspfv2_SubTlv_Type_UNKNOWN E_OpenconfigOspfv2_SubTlv_Type = 1
)

// E_OpenconfigOspfv2_SubTlv_Type_ is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfv2_SubTlv_Type_. An additional value named
// OpenconfigOspfv2_SubTlv_Type__UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfv2_SubTlv_Type_ int64

// IsYANGGoEnum ensures that OpenconfigOspfv2_SubTlv_Type_ implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfv2_SubTlv_Type_ can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfv2_SubTlv_Type_) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfv2_SubTlv_Type_.
func (E_OpenconfigOspfv2_SubTlv_Type_) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigOspfv2_SubTlv_Type__UNSET corresponds to the value UNSET of OpenconfigOspfv2_SubTlv_Type_
	OpenconfigOspfv2_SubTlv_Type__UNSET E_OpenconfigOspfv2_SubTlv_Type_ = 0
	// OpenconfigOspfv2_SubTlv_Type__UNKNOWN corresponds to the value UNKNOWN of OpenconfigOspfv2_SubTlv_Type_
	OpenconfigOspfv2_SubTlv_Type__UNKNOWN E_OpenconfigOspfv2_SubTlv_Type_ = 1
)

// E_OpenconfigOspfv2_Tlv_Reason is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfv2_Tlv_Reason. An additional value named
// OpenconfigOspfv2_Tlv_Reason_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfv2_Tlv_Reason int64

// IsYANGGoEnum ensures that OpenconfigOspfv2_Tlv_Reason implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfv2_Tlv_Reason can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfv2_Tlv_Reason) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfv2_Tlv_Reason.
func (E_OpenconfigOspfv2_Tlv_Reason) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigOspfv2_Tlv_Reason_UNSET corresponds to the value UNSET of OpenconfigOspfv2_Tlv_Reason
	OpenconfigOspfv2_Tlv_Reason_UNSET E_OpenconfigOspfv2_Tlv_Reason = 0
	// OpenconfigOspfv2_Tlv_Reason_UNKNOWN corresponds to the value UNKNOWN of OpenconfigOspfv2_Tlv_Reason
	OpenconfigOspfv2_Tlv_Reason_UNKNOWN E_OpenconfigOspfv2_Tlv_Reason = 1
	// OpenconfigOspfv2_Tlv_Reason_SOFTWARE_RESTART corresponds to the value SOFTWARE_RESTART of OpenconfigOspfv2_Tlv_Reason
	OpenconfigOspfv2_Tlv_Reason_SOFTWARE_RESTART E_OpenconfigOspfv2_Tlv_Reason = 2
	// OpenconfigOspfv2_Tlv_Reason_SOFTWARE_RELOAD_UPGRADE corresponds to the value SOFTWARE_RELOAD_UPGRADE of OpenconfigOspfv2_Tlv_Reason
	OpenconfigOspfv2_Tlv_Reason_SOFTWARE_RELOAD_UPGRADE E_OpenconfigOspfv2_Tlv_Reason = 3
	// OpenconfigOspfv2_Tlv_Reason_CONTROL_PROCESSOR_SWITCH corresponds to the value CONTROL_PROCESSOR_SWITCH of OpenconfigOspfv2_Tlv_Reason
	OpenconfigOspfv2_Tlv_Reason_CONTROL_PROCESSOR_SWITCH E_OpenconfigOspfv2_Tlv_Reason = 4
)

// E_OpenconfigOspfv2_Tlv_Type is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfv2_Tlv_Type. An additional value named
// OpenconfigOspfv2_Tlv_Type_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfv2_Tlv_Type int64

// IsYANGGoEnum ensures that OpenconfigOspfv2_Tlv_Type implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfv2_Tlv_Type can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfv2_Tlv_Type) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfv2_Tlv_Type.
func (E_OpenconfigOspfv2_Tlv_Type) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigOspfv2_Tlv_Type_UNSET corresponds to the value UNSET of OpenconfigOspfv2_Tlv_Type
	OpenconfigOspfv2_Tlv_Type_UNSET E_OpenconfigOspfv2_Tlv_Type = 0
	// OpenconfigOspfv2_Tlv_Type_UNKNOWN corresponds to the value UNKNOWN of OpenconfigOspfv2_Tlv_Type
	OpenconfigOspfv2_Tlv_Type_UNKNOWN E_OpenconfigOspfv2_Tlv_Type = 1
)

// E_OpenconfigOspfv2_Tlv_Type_ is a derived int64 type which is used to represent
// the enumerated node OpenconfigOspfv2_Tlv_Type_. An additional value named
// OpenconfigOspfv2_Tlv_Type__UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigOspfv2_Tlv_Type_ int64

// IsYANGGoEnum ensures that OpenconfigOspfv2_Tlv_Type_ implements the yang.GoEnum
// interface. This ensures that OpenconfigOspfv2_Tlv_Type_ can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigOspfv2_Tlv_Type_) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigOspfv2_Tlv_Type_.
func (E_OpenconfigOspfv2_Tlv_Type_) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigOspfv2_Tlv_Type__UNSET corresponds to the value UNSET of OpenconfigOspfv2_Tlv_Type_
	OpenconfigOspfv2_Tlv_Type__UNSET E_OpenconfigOspfv2_Tlv_Type_ = 0
	// OpenconfigOspfv2_Tlv_Type__UNKNOWN corresponds to the value UNKNOWN of OpenconfigOspfv2_Tlv_Type_
	OpenconfigOspfv2_Tlv_Type__UNKNOWN E_OpenconfigOspfv2_Tlv_Type_ = 1
)

// E_OpenconfigPacketMatchTypes_ETHERTYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigPacketMatchTypes_ETHERTYPE. An additional value named
// OpenconfigPacketMatchTypes_ETHERTYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigPacketMatchTypes_ETHERTYPE int64

// IsYANGGoEnum ensures that OpenconfigPacketMatchTypes_ETHERTYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigPacketMatchTypes_ETHERTYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigPacketMatchTypes_ETHERTYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigPacketMatchTypes_ETHERTYPE.
func (E_OpenconfigPacketMatchTypes_ETHERTYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigPacketMatchTypes_ETHERTYPE_UNSET corresponds to the value UNSET of OpenconfigPacketMatchTypes_ETHERTYPE
	OpenconfigPacketMatchTypes_ETHERTYPE_UNSET E_OpenconfigPacketMatchTypes_ETHERTYPE = 0
	// OpenconfigPacketMatchTypes_ETHERTYPE_ETHERTYPE_ARP corresponds to the value ETHERTYPE_ARP of OpenconfigPacketMatchTypes_ETHERTYPE
	OpenconfigPacketMatchTypes_ETHERTYPE_ETHERTYPE_ARP E_OpenconfigPacketMatchTypes_ETHERTYPE = 1
	// OpenconfigPacketMatchTypes_ETHERTYPE_ETHERTYPE_IPV4 corresponds to the value ETHERTYPE_IPV4 of OpenconfigPacketMatchTypes_ETHERTYPE
	OpenconfigPacketMatchTypes_ETHERTYPE_ETHERTYPE_IPV4 E_OpenconfigPacketMatchTypes_ETHERTYPE = 2
	// OpenconfigPacketMatchTypes_ETHERTYPE_ETHERTYPE_IPV6 corresponds to the value ETHERTYPE_IPV6 of OpenconfigPacketMatchTypes_ETHERTYPE
	OpenconfigPacketMatchTypes_ETHERTYPE_ETHERTYPE_IPV6 E_OpenconfigPacketMatchTypes_ETHERTYPE = 3
	// OpenconfigPacketMatchTypes_ETHERTYPE_ETHERTYPE_LLDP corresponds to the value ETHERTYPE_LLDP of OpenconfigPacketMatchTypes_ETHERTYPE
	OpenconfigPacketMatchTypes_ETHERTYPE_ETHERTYPE_LLDP E_OpenconfigPacketMatchTypes_ETHERTYPE = 4
	// OpenconfigPacketMatchTypes_ETHERTYPE_ETHERTYPE_MPLS corresponds to the value ETHERTYPE_MPLS of OpenconfigPacketMatchTypes_ETHERTYPE
	OpenconfigPacketMatchTypes_ETHERTYPE_ETHERTYPE_MPLS E_OpenconfigPacketMatchTypes_ETHERTYPE = 5
	// OpenconfigPacketMatchTypes_ETHERTYPE_ETHERTYPE_ROCE corresponds to the value ETHERTYPE_ROCE of OpenconfigPacketMatchTypes_ETHERTYPE
	OpenconfigPacketMatchTypes_ETHERTYPE_ETHERTYPE_ROCE E_OpenconfigPacketMatchTypes_ETHERTYPE = 6
	// OpenconfigPacketMatchTypes_ETHERTYPE_ETHERTYPE_VLAN corresponds to the value ETHERTYPE_VLAN of OpenconfigPacketMatchTypes_ETHERTYPE
	OpenconfigPacketMatchTypes_ETHERTYPE_ETHERTYPE_VLAN E_OpenconfigPacketMatchTypes_ETHERTYPE = 7
)

// E_OpenconfigPacketMatchTypes_IP_PROTOCOL is a derived int64 type which is used to represent
// the enumerated node OpenconfigPacketMatchTypes_IP_PROTOCOL. An additional value named
// OpenconfigPacketMatchTypes_IP_PROTOCOL_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigPacketMatchTypes_IP_PROTOCOL int64

// IsYANGGoEnum ensures that OpenconfigPacketMatchTypes_IP_PROTOCOL implements the yang.GoEnum
// interface. This ensures that OpenconfigPacketMatchTypes_IP_PROTOCOL can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigPacketMatchTypes_IP_PROTOCOL) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigPacketMatchTypes_IP_PROTOCOL.
func (E_OpenconfigPacketMatchTypes_IP_PROTOCOL) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigPacketMatchTypes_IP_PROTOCOL_UNSET corresponds to the value UNSET of OpenconfigPacketMatchTypes_IP_PROTOCOL
	OpenconfigPacketMatchTypes_IP_PROTOCOL_UNSET E_OpenconfigPacketMatchTypes_IP_PROTOCOL = 0
	// OpenconfigPacketMatchTypes_IP_PROTOCOL_IP_AUTH corresponds to the value IP_AUTH of OpenconfigPacketMatchTypes_IP_PROTOCOL
	OpenconfigPacketMatchTypes_IP_PROTOCOL_IP_AUTH E_OpenconfigPacketMatchTypes_IP_PROTOCOL = 1
	// OpenconfigPacketMatchTypes_IP_PROTOCOL_IP_GRE corresponds to the value IP_GRE of OpenconfigPacketMatchTypes_IP_PROTOCOL
	OpenconfigPacketMatchTypes_IP_PROTOCOL_IP_GRE E_OpenconfigPacketMatchTypes_IP_PROTOCOL = 2
	// OpenconfigPacketMatchTypes_IP_PROTOCOL_IP_ICMP corresponds to the value IP_ICMP of OpenconfigPacketMatchTypes_IP_PROTOCOL
	OpenconfigPacketMatchTypes_IP_PROTOCOL_IP_ICMP E_OpenconfigPacketMatchTypes_IP_PROTOCOL = 3
	// OpenconfigPacketMatchTypes_IP_PROTOCOL_IP_IGMP corresponds to the value IP_IGMP of OpenconfigPacketMatchTypes_IP_PROTOCOL
	OpenconfigPacketMatchTypes_IP_PROTOCOL_IP_IGMP E_OpenconfigPacketMatchTypes_IP_PROTOCOL = 4
	// OpenconfigPacketMatchTypes_IP_PROTOCOL_IP_L2TP corresponds to the value IP_L2TP of OpenconfigPacketMatchTypes_IP_PROTOCOL
	OpenconfigPacketMatchTypes_IP_PROTOCOL_IP_L2TP E_OpenconfigPacketMatchTypes_IP_PROTOCOL = 5
	// OpenconfigPacketMatchTypes_IP_PROTOCOL_IP_PIM corresponds to the value IP_PIM of OpenconfigPacketMatchTypes_IP_PROTOCOL
	OpenconfigPacketMatchTypes_IP_PROTOCOL_IP_PIM E_OpenconfigPacketMatchTypes_IP_PROTOCOL = 6
	// OpenconfigPacketMatchTypes_IP_PROTOCOL_IP_RSVP corresponds to the value IP_RSVP of OpenconfigPacketMatchTypes_IP_PROTOCOL
	OpenconfigPacketMatchTypes_IP_PROTOCOL_IP_RSVP E_OpenconfigPacketMatchTypes_IP_PROTOCOL = 7
	// OpenconfigPacketMatchTypes_IP_PROTOCOL_IP_TCP corresponds to the value IP_TCP of OpenconfigPacketMatchTypes_IP_PROTOCOL
	OpenconfigPacketMatchTypes_IP_PROTOCOL_IP_TCP E_OpenconfigPacketMatchTypes_IP_PROTOCOL = 8
	// OpenconfigPacketMatchTypes_IP_PROTOCOL_IP_UDP corresponds to the value IP_UDP of OpenconfigPacketMatchTypes_IP_PROTOCOL
	OpenconfigPacketMatchTypes_IP_PROTOCOL_IP_UDP E_OpenconfigPacketMatchTypes_IP_PROTOCOL = 9
)

// E_OpenconfigPacketMatchTypes_TCP_FLAGS is a derived int64 type which is used to represent
// the enumerated node OpenconfigPacketMatchTypes_TCP_FLAGS. An additional value named
// OpenconfigPacketMatchTypes_TCP_FLAGS_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigPacketMatchTypes_TCP_FLAGS int64

// IsYANGGoEnum ensures that OpenconfigPacketMatchTypes_TCP_FLAGS implements the yang.GoEnum
// interface. This ensures that OpenconfigPacketMatchTypes_TCP_FLAGS can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigPacketMatchTypes_TCP_FLAGS) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigPacketMatchTypes_TCP_FLAGS.
func (E_OpenconfigPacketMatchTypes_TCP_FLAGS) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigPacketMatchTypes_TCP_FLAGS_UNSET corresponds to the value UNSET of OpenconfigPacketMatchTypes_TCP_FLAGS
	OpenconfigPacketMatchTypes_TCP_FLAGS_UNSET E_OpenconfigPacketMatchTypes_TCP_FLAGS = 0
	// OpenconfigPacketMatchTypes_TCP_FLAGS_TCP_ACK corresponds to the value TCP_ACK of OpenconfigPacketMatchTypes_TCP_FLAGS
	OpenconfigPacketMatchTypes_TCP_FLAGS_TCP_ACK E_OpenconfigPacketMatchTypes_TCP_FLAGS = 1
	// OpenconfigPacketMatchTypes_TCP_FLAGS_TCP_CWR corresponds to the value TCP_CWR of OpenconfigPacketMatchTypes_TCP_FLAGS
	OpenconfigPacketMatchTypes_TCP_FLAGS_TCP_CWR E_OpenconfigPacketMatchTypes_TCP_FLAGS = 2
	// OpenconfigPacketMatchTypes_TCP_FLAGS_TCP_ECE corresponds to the value TCP_ECE of OpenconfigPacketMatchTypes_TCP_FLAGS
	OpenconfigPacketMatchTypes_TCP_FLAGS_TCP_ECE E_OpenconfigPacketMatchTypes_TCP_FLAGS = 3
	// OpenconfigPacketMatchTypes_TCP_FLAGS_TCP_FIN corresponds to the value TCP_FIN of OpenconfigPacketMatchTypes_TCP_FLAGS
	OpenconfigPacketMatchTypes_TCP_FLAGS_TCP_FIN E_OpenconfigPacketMatchTypes_TCP_FLAGS = 4
	// OpenconfigPacketMatchTypes_TCP_FLAGS_TCP_PSH corresponds to the value TCP_PSH of OpenconfigPacketMatchTypes_TCP_FLAGS
	OpenconfigPacketMatchTypes_TCP_FLAGS_TCP_PSH E_OpenconfigPacketMatchTypes_TCP_FLAGS = 5
	// OpenconfigPacketMatchTypes_TCP_FLAGS_TCP_RST corresponds to the value TCP_RST of OpenconfigPacketMatchTypes_TCP_FLAGS
	OpenconfigPacketMatchTypes_TCP_FLAGS_TCP_RST E_OpenconfigPacketMatchTypes_TCP_FLAGS = 6
	// OpenconfigPacketMatchTypes_TCP_FLAGS_TCP_SYN corresponds to the value TCP_SYN of OpenconfigPacketMatchTypes_TCP_FLAGS
	OpenconfigPacketMatchTypes_TCP_FLAGS_TCP_SYN E_OpenconfigPacketMatchTypes_TCP_FLAGS = 7
	// OpenconfigPacketMatchTypes_TCP_FLAGS_TCP_URG corresponds to the value TCP_URG of OpenconfigPacketMatchTypes_TCP_FLAGS
	OpenconfigPacketMatchTypes_TCP_FLAGS_TCP_URG E_OpenconfigPacketMatchTypes_TCP_FLAGS = 8
)

// E_OpenconfigPacketMatch_Transport_DestinationPort is a derived int64 type which is used to represent
// the enumerated node OpenconfigPacketMatch_Transport_DestinationPort. An additional value named
// OpenconfigPacketMatch_Transport_DestinationPort_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigPacketMatch_Transport_DestinationPort int64

// IsYANGGoEnum ensures that OpenconfigPacketMatch_Transport_DestinationPort implements the yang.GoEnum
// interface. This ensures that OpenconfigPacketMatch_Transport_DestinationPort can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigPacketMatch_Transport_DestinationPort) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigPacketMatch_Transport_DestinationPort.
func (E_OpenconfigPacketMatch_Transport_DestinationPort) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigPacketMatch_Transport_DestinationPort_UNSET corresponds to the value UNSET of OpenconfigPacketMatch_Transport_DestinationPort
	OpenconfigPacketMatch_Transport_DestinationPort_UNSET E_OpenconfigPacketMatch_Transport_DestinationPort = 0
	// OpenconfigPacketMatch_Transport_DestinationPort_ANY corresponds to the value ANY of OpenconfigPacketMatch_Transport_DestinationPort
	OpenconfigPacketMatch_Transport_DestinationPort_ANY E_OpenconfigPacketMatch_Transport_DestinationPort = 1
)

// E_OpenconfigPacketMatch_Transport_SourcePort is a derived int64 type which is used to represent
// the enumerated node OpenconfigPacketMatch_Transport_SourcePort. An additional value named
// OpenconfigPacketMatch_Transport_SourcePort_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigPacketMatch_Transport_SourcePort int64

// IsYANGGoEnum ensures that OpenconfigPacketMatch_Transport_SourcePort implements the yang.GoEnum
// interface. This ensures that OpenconfigPacketMatch_Transport_SourcePort can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigPacketMatch_Transport_SourcePort) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigPacketMatch_Transport_SourcePort.
func (E_OpenconfigPacketMatch_Transport_SourcePort) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigPacketMatch_Transport_SourcePort_UNSET corresponds to the value UNSET of OpenconfigPacketMatch_Transport_SourcePort
	OpenconfigPacketMatch_Transport_SourcePort_UNSET E_OpenconfigPacketMatch_Transport_SourcePort = 0
	// OpenconfigPacketMatch_Transport_SourcePort_ANY corresponds to the value ANY of OpenconfigPacketMatch_Transport_SourcePort
	OpenconfigPacketMatch_Transport_SourcePort_ANY E_OpenconfigPacketMatch_Transport_SourcePort = 1
)

// E_OpenconfigPlatformTransceiver_Transceiver_Present is a derived int64 type which is used to represent
// the enumerated node OpenconfigPlatformTransceiver_Transceiver_Present. An additional value named
// OpenconfigPlatformTransceiver_Transceiver_Present_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigPlatformTransceiver_Transceiver_Present int64

// IsYANGGoEnum ensures that OpenconfigPlatformTransceiver_Transceiver_Present implements the yang.GoEnum
// interface. This ensures that OpenconfigPlatformTransceiver_Transceiver_Present can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigPlatformTransceiver_Transceiver_Present) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigPlatformTransceiver_Transceiver_Present.
func (E_OpenconfigPlatformTransceiver_Transceiver_Present) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigPlatformTransceiver_Transceiver_Present_UNSET corresponds to the value UNSET of OpenconfigPlatformTransceiver_Transceiver_Present
	OpenconfigPlatformTransceiver_Transceiver_Present_UNSET E_OpenconfigPlatformTransceiver_Transceiver_Present = 0
	// OpenconfigPlatformTransceiver_Transceiver_Present_PRESENT corresponds to the value PRESENT of OpenconfigPlatformTransceiver_Transceiver_Present
	OpenconfigPlatformTransceiver_Transceiver_Present_PRESENT E_OpenconfigPlatformTransceiver_Transceiver_Present = 1
	// OpenconfigPlatformTransceiver_Transceiver_Present_NOT_PRESENT corresponds to the value NOT_PRESENT of OpenconfigPlatformTransceiver_Transceiver_Present
	OpenconfigPlatformTransceiver_Transceiver_Present_NOT_PRESENT E_OpenconfigPlatformTransceiver_Transceiver_Present = 2
)

// E_OpenconfigPlatformTypes_COMPONENT_OPER_STATUS is a derived int64 type which is used to represent
// the enumerated node OpenconfigPlatformTypes_COMPONENT_OPER_STATUS. An additional value named
// OpenconfigPlatformTypes_COMPONENT_OPER_STATUS_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigPlatformTypes_COMPONENT_OPER_STATUS int64

// IsYANGGoEnum ensures that OpenconfigPlatformTypes_COMPONENT_OPER_STATUS implements the yang.GoEnum
// interface. This ensures that OpenconfigPlatformTypes_COMPONENT_OPER_STATUS can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigPlatformTypes_COMPONENT_OPER_STATUS) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigPlatformTypes_COMPONENT_OPER_STATUS.
func (E_OpenconfigPlatformTypes_COMPONENT_OPER_STATUS) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigPlatformTypes_COMPONENT_OPER_STATUS_UNSET corresponds to the value UNSET of OpenconfigPlatformTypes_COMPONENT_OPER_STATUS
	OpenconfigPlatformTypes_COMPONENT_OPER_STATUS_UNSET E_OpenconfigPlatformTypes_COMPONENT_OPER_STATUS = 0
	// OpenconfigPlatformTypes_COMPONENT_OPER_STATUS_ACTIVE corresponds to the value ACTIVE of OpenconfigPlatformTypes_COMPONENT_OPER_STATUS
	OpenconfigPlatformTypes_COMPONENT_OPER_STATUS_ACTIVE E_OpenconfigPlatformTypes_COMPONENT_OPER_STATUS = 1
	// OpenconfigPlatformTypes_COMPONENT_OPER_STATUS_DISABLED corresponds to the value DISABLED of OpenconfigPlatformTypes_COMPONENT_OPER_STATUS
	OpenconfigPlatformTypes_COMPONENT_OPER_STATUS_DISABLED E_OpenconfigPlatformTypes_COMPONENT_OPER_STATUS = 2
	// OpenconfigPlatformTypes_COMPONENT_OPER_STATUS_INACTIVE corresponds to the value INACTIVE of OpenconfigPlatformTypes_COMPONENT_OPER_STATUS
	OpenconfigPlatformTypes_COMPONENT_OPER_STATUS_INACTIVE E_OpenconfigPlatformTypes_COMPONENT_OPER_STATUS = 3
)

// E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT is a derived int64 type which is used to represent
// the enumerated node OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT. An additional value named
// OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT int64

// IsYANGGoEnum ensures that OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT implements the yang.GoEnum
// interface. This ensures that OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT.
func (E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_UNSET corresponds to the value UNSET of OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_UNSET E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 0
	// OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_BACKPLANE corresponds to the value BACKPLANE of OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_BACKPLANE E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 1
	// OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_CHASSIS corresponds to the value CHASSIS of OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_CHASSIS E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 2
	// OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_CPU corresponds to the value CPU of OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_CPU E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 3
	// OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_FABRIC corresponds to the value FABRIC of OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_FABRIC E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 4
	// OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_FAN corresponds to the value FAN of OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_FAN E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 5
	// OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_FRU corresponds to the value FRU of OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_FRU E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 6
	// OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_INTEGRATED_CIRCUIT corresponds to the value INTEGRATED_CIRCUIT of OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_INTEGRATED_CIRCUIT E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 7
	// OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_LINECARD corresponds to the value LINECARD of OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_LINECARD E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 8
	// OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_OPTICAL_CHANNEL corresponds to the value OPTICAL_CHANNEL of OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_OPTICAL_CHANNEL E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 9
	// OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_PORT corresponds to the value PORT of OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_PORT E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 10
	// OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_POWER_SUPPLY corresponds to the value POWER_SUPPLY of OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_POWER_SUPPLY E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 11
	// OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_SENSOR corresponds to the value SENSOR of OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_SENSOR E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 12
	// OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_STORAGE corresponds to the value STORAGE of OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_STORAGE E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 13
	// OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_TRANSCEIVER corresponds to the value TRANSCEIVER of OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT
	OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT_TRANSCEIVER E_OpenconfigPlatformTypes_OPENCONFIG_HARDWARE_COMPONENT = 14
)

// E_OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT is a derived int64 type which is used to represent
// the enumerated node OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT. An additional value named
// OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT int64

// IsYANGGoEnum ensures that OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT implements the yang.GoEnum
// interface. This ensures that OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT.
func (E_OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_UNSET corresponds to the value UNSET of OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT
	OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_UNSET E_OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT = 0
	// OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_OPERATING_SYSTEM corresponds to the value OPERATING_SYSTEM of OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT
	OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT_OPERATING_SYSTEM E_OpenconfigPlatformTypes_OPENCONFIG_SOFTWARE_COMPONENT = 1
)

// E_OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE. An additional value named
// OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE int64

// IsYANGGoEnum ensures that OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE.
func (E_OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE_UNSET corresponds to the value UNSET of OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE
	OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE_UNSET E_OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE = 0
	// OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE_BGP corresponds to the value BGP of OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE
	OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE_BGP E_OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE = 1
	// OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE_DIRECTLY_CONNECTED corresponds to the value DIRECTLY_CONNECTED of OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE
	OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE_DIRECTLY_CONNECTED E_OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE = 2
	// OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE_ISIS corresponds to the value ISIS of OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE
	OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE_ISIS E_OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE = 3
	// OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE_LOCAL_AGGREGATE corresponds to the value LOCAL_AGGREGATE of OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE
	OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE_LOCAL_AGGREGATE E_OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE = 4
	// OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE_OSPF corresponds to the value OSPF of OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE
	OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE_OSPF E_OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE = 5
	// OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE_OSPF3 corresponds to the value OSPF3 of OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE
	OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE_OSPF3 E_OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE = 6
	// OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE_STATIC corresponds to the value STATIC of OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE
	OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE_STATIC E_OpenconfigPolicyTypes_INSTALL_PROTOCOL_TYPE = 7
)

// E_OpenconfigRoutingPolicy_DefaultPolicyType is a derived int64 type which is used to represent
// the enumerated node OpenconfigRoutingPolicy_DefaultPolicyType. An additional value named
// OpenconfigRoutingPolicy_DefaultPolicyType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigRoutingPolicy_DefaultPolicyType int64

// IsYANGGoEnum ensures that OpenconfigRoutingPolicy_DefaultPolicyType implements the yang.GoEnum
// interface. This ensures that OpenconfigRoutingPolicy_DefaultPolicyType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigRoutingPolicy_DefaultPolicyType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigRoutingPolicy_DefaultPolicyType.
func (E_OpenconfigRoutingPolicy_DefaultPolicyType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigRoutingPolicy_DefaultPolicyType_UNSET corresponds to the value UNSET of OpenconfigRoutingPolicy_DefaultPolicyType
	OpenconfigRoutingPolicy_DefaultPolicyType_UNSET E_OpenconfigRoutingPolicy_DefaultPolicyType = 0
	// OpenconfigRoutingPolicy_DefaultPolicyType_ACCEPT_ROUTE corresponds to the value ACCEPT_ROUTE of OpenconfigRoutingPolicy_DefaultPolicyType
	OpenconfigRoutingPolicy_DefaultPolicyType_ACCEPT_ROUTE E_OpenconfigRoutingPolicy_DefaultPolicyType = 1
	// OpenconfigRoutingPolicy_DefaultPolicyType_REJECT_ROUTE corresponds to the value REJECT_ROUTE of OpenconfigRoutingPolicy_DefaultPolicyType
	OpenconfigRoutingPolicy_DefaultPolicyType_REJECT_ROUTE E_OpenconfigRoutingPolicy_DefaultPolicyType = 2
)

// E_OpenconfigRoutingPolicy_MatchSetOptionsRestrictedType is a derived int64 type which is used to represent
// the enumerated node OpenconfigRoutingPolicy_MatchSetOptionsRestrictedType. An additional value named
// OpenconfigRoutingPolicy_MatchSetOptionsRestrictedType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigRoutingPolicy_MatchSetOptionsRestrictedType int64

// IsYANGGoEnum ensures that OpenconfigRoutingPolicy_MatchSetOptionsRestrictedType implements the yang.GoEnum
// interface. This ensures that OpenconfigRoutingPolicy_MatchSetOptionsRestrictedType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigRoutingPolicy_MatchSetOptionsRestrictedType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigRoutingPolicy_MatchSetOptionsRestrictedType.
func (E_OpenconfigRoutingPolicy_MatchSetOptionsRestrictedType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigRoutingPolicy_MatchSetOptionsRestrictedType_UNSET corresponds to the value UNSET of OpenconfigRoutingPolicy_MatchSetOptionsRestrictedType
	OpenconfigRoutingPolicy_MatchSetOptionsRestrictedType_UNSET E_OpenconfigRoutingPolicy_MatchSetOptionsRestrictedType = 0
	// OpenconfigRoutingPolicy_MatchSetOptionsRestrictedType_ANY corresponds to the value ANY of OpenconfigRoutingPolicy_MatchSetOptionsRestrictedType
	OpenconfigRoutingPolicy_MatchSetOptionsRestrictedType_ANY E_OpenconfigRoutingPolicy_MatchSetOptionsRestrictedType = 1
	// OpenconfigRoutingPolicy_MatchSetOptionsRestrictedType_INVERT corresponds to the value INVERT of OpenconfigRoutingPolicy_MatchSetOptionsRestrictedType
	OpenconfigRoutingPolicy_MatchSetOptionsRestrictedType_INVERT E_OpenconfigRoutingPolicy_MatchSetOptionsRestrictedType = 2
)

// E_OpenconfigRoutingPolicy_PolicyResultType is a derived int64 type which is used to represent
// the enumerated node OpenconfigRoutingPolicy_PolicyResultType. An additional value named
// OpenconfigRoutingPolicy_PolicyResultType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigRoutingPolicy_PolicyResultType int64

// IsYANGGoEnum ensures that OpenconfigRoutingPolicy_PolicyResultType implements the yang.GoEnum
// interface. This ensures that OpenconfigRoutingPolicy_PolicyResultType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigRoutingPolicy_PolicyResultType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigRoutingPolicy_PolicyResultType.
func (E_OpenconfigRoutingPolicy_PolicyResultType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigRoutingPolicy_PolicyResultType_UNSET corresponds to the value UNSET of OpenconfigRoutingPolicy_PolicyResultType
	OpenconfigRoutingPolicy_PolicyResultType_UNSET E_OpenconfigRoutingPolicy_PolicyResultType = 0
	// OpenconfigRoutingPolicy_PolicyResultType_ACCEPT_ROUTE corresponds to the value ACCEPT_ROUTE of OpenconfigRoutingPolicy_PolicyResultType
	OpenconfigRoutingPolicy_PolicyResultType_ACCEPT_ROUTE E_OpenconfigRoutingPolicy_PolicyResultType = 1
	// OpenconfigRoutingPolicy_PolicyResultType_REJECT_ROUTE corresponds to the value REJECT_ROUTE of OpenconfigRoutingPolicy_PolicyResultType
	OpenconfigRoutingPolicy_PolicyResultType_REJECT_ROUTE E_OpenconfigRoutingPolicy_PolicyResultType = 2
)

// E_OpenconfigRoutingPolicy_PrefixSet_Mode is a derived int64 type which is used to represent
// the enumerated node OpenconfigRoutingPolicy_PrefixSet_Mode. An additional value named
// OpenconfigRoutingPolicy_PrefixSet_Mode_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigRoutingPolicy_PrefixSet_Mode int64

// IsYANGGoEnum ensures that OpenconfigRoutingPolicy_PrefixSet_Mode implements the yang.GoEnum
// interface. This ensures that OpenconfigRoutingPolicy_PrefixSet_Mode can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigRoutingPolicy_PrefixSet_Mode) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigRoutingPolicy_PrefixSet_Mode.
func (E_OpenconfigRoutingPolicy_PrefixSet_Mode) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigRoutingPolicy_PrefixSet_Mode_UNSET corresponds to the value UNSET of OpenconfigRoutingPolicy_PrefixSet_Mode
	OpenconfigRoutingPolicy_PrefixSet_Mode_UNSET E_OpenconfigRoutingPolicy_PrefixSet_Mode = 0
	// OpenconfigRoutingPolicy_PrefixSet_Mode_IPV4 corresponds to the value IPV4 of OpenconfigRoutingPolicy_PrefixSet_Mode
	OpenconfigRoutingPolicy_PrefixSet_Mode_IPV4 E_OpenconfigRoutingPolicy_PrefixSet_Mode = 1
	// OpenconfigRoutingPolicy_PrefixSet_Mode_IPV6 corresponds to the value IPV6 of OpenconfigRoutingPolicy_PrefixSet_Mode
	OpenconfigRoutingPolicy_PrefixSet_Mode_IPV6 E_OpenconfigRoutingPolicy_PrefixSet_Mode = 2
	// OpenconfigRoutingPolicy_PrefixSet_Mode_MIXED corresponds to the value MIXED of OpenconfigRoutingPolicy_PrefixSet_Mode
	OpenconfigRoutingPolicy_PrefixSet_Mode_MIXED E_OpenconfigRoutingPolicy_PrefixSet_Mode = 3
)

// E_OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal is a derived int64 type which is used to represent
// the enumerated node OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal. An additional value named
// OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal int64

// IsYANGGoEnum ensures that OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal implements the yang.GoEnum
// interface. This ensures that OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal.
func (E_OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal_UNSET corresponds to the value UNSET of OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal
	OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal_UNSET E_OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal = 0
	// OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal
	OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal_IPV4_EXPLICIT_NULL E_OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal = 1
	// OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal_ROUTER_ALERT corresponds to the value ROUTER_ALERT of OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal
	OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal_ROUTER_ALERT E_OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal = 2
	// OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal
	OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal_IPV6_EXPLICIT_NULL E_OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal = 3
	// OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal
	OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal_IMPLICIT_NULL E_OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal = 4
	// OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal
	OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal_ENTROPY_LABEL_INDICATOR E_OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal = 8
	// OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal_NO_LABEL corresponds to the value NO_LABEL of OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal
	OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal_NO_LABEL E_OpenconfigSegmentRouting_AdjacencySid_AllocatedDynamicLocal = 9
)

// E_OpenconfigSegmentRouting_AdjacencySid_SidId is a derived int64 type which is used to represent
// the enumerated node OpenconfigSegmentRouting_AdjacencySid_SidId. An additional value named
// OpenconfigSegmentRouting_AdjacencySid_SidId_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigSegmentRouting_AdjacencySid_SidId int64

// IsYANGGoEnum ensures that OpenconfigSegmentRouting_AdjacencySid_SidId implements the yang.GoEnum
// interface. This ensures that OpenconfigSegmentRouting_AdjacencySid_SidId can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigSegmentRouting_AdjacencySid_SidId) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigSegmentRouting_AdjacencySid_SidId.
func (E_OpenconfigSegmentRouting_AdjacencySid_SidId) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigSegmentRouting_AdjacencySid_SidId_UNSET corresponds to the value UNSET of OpenconfigSegmentRouting_AdjacencySid_SidId
	OpenconfigSegmentRouting_AdjacencySid_SidId_UNSET E_OpenconfigSegmentRouting_AdjacencySid_SidId = 0
	// OpenconfigSegmentRouting_AdjacencySid_SidId_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of OpenconfigSegmentRouting_AdjacencySid_SidId
	OpenconfigSegmentRouting_AdjacencySid_SidId_IPV4_EXPLICIT_NULL E_OpenconfigSegmentRouting_AdjacencySid_SidId = 1
	// OpenconfigSegmentRouting_AdjacencySid_SidId_ROUTER_ALERT corresponds to the value ROUTER_ALERT of OpenconfigSegmentRouting_AdjacencySid_SidId
	OpenconfigSegmentRouting_AdjacencySid_SidId_ROUTER_ALERT E_OpenconfigSegmentRouting_AdjacencySid_SidId = 2
	// OpenconfigSegmentRouting_AdjacencySid_SidId_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of OpenconfigSegmentRouting_AdjacencySid_SidId
	OpenconfigSegmentRouting_AdjacencySid_SidId_IPV6_EXPLICIT_NULL E_OpenconfigSegmentRouting_AdjacencySid_SidId = 3
	// OpenconfigSegmentRouting_AdjacencySid_SidId_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of OpenconfigSegmentRouting_AdjacencySid_SidId
	OpenconfigSegmentRouting_AdjacencySid_SidId_IMPLICIT_NULL E_OpenconfigSegmentRouting_AdjacencySid_SidId = 4
	// OpenconfigSegmentRouting_AdjacencySid_SidId_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of OpenconfigSegmentRouting_AdjacencySid_SidId
	OpenconfigSegmentRouting_AdjacencySid_SidId_ENTROPY_LABEL_INDICATOR E_OpenconfigSegmentRouting_AdjacencySid_SidId = 8
	// OpenconfigSegmentRouting_AdjacencySid_SidId_NO_LABEL corresponds to the value NO_LABEL of OpenconfigSegmentRouting_AdjacencySid_SidId
	OpenconfigSegmentRouting_AdjacencySid_SidId_NO_LABEL E_OpenconfigSegmentRouting_AdjacencySid_SidId = 9
)

// E_OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel is a derived int64 type which is used to represent
// the enumerated node OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel. An additional value named
// OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel int64

// IsYANGGoEnum ensures that OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel implements the yang.GoEnum
// interface. This ensures that OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel.
func (E_OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel_UNSET corresponds to the value UNSET of OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel
	OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel_UNSET E_OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel = 0
	// OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel
	OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel_IPV4_EXPLICIT_NULL E_OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel = 1
	// OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel_ROUTER_ALERT corresponds to the value ROUTER_ALERT of OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel
	OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel_ROUTER_ALERT E_OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel = 2
	// OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel
	OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel_IPV6_EXPLICIT_NULL E_OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel = 3
	// OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel
	OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel_IMPLICIT_NULL E_OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel = 4
	// OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel
	OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel_ENTROPY_LABEL_INDICATOR E_OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel = 8
	// OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel_NO_LABEL corresponds to the value NO_LABEL of OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel
	OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel_NO_LABEL E_OpenconfigSegmentRouting_AggregateSidCounter_MplsLabel = 9
)

// E_OpenconfigSegmentRouting_PrefixSid_LabelOptions is a derived int64 type which is used to represent
// the enumerated node OpenconfigSegmentRouting_PrefixSid_LabelOptions. An additional value named
// OpenconfigSegmentRouting_PrefixSid_LabelOptions_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigSegmentRouting_PrefixSid_LabelOptions int64

// IsYANGGoEnum ensures that OpenconfigSegmentRouting_PrefixSid_LabelOptions implements the yang.GoEnum
// interface. This ensures that OpenconfigSegmentRouting_PrefixSid_LabelOptions can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigSegmentRouting_PrefixSid_LabelOptions) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigSegmentRouting_PrefixSid_LabelOptions.
func (E_OpenconfigSegmentRouting_PrefixSid_LabelOptions) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigSegmentRouting_PrefixSid_LabelOptions_UNSET corresponds to the value UNSET of OpenconfigSegmentRouting_PrefixSid_LabelOptions
	OpenconfigSegmentRouting_PrefixSid_LabelOptions_UNSET E_OpenconfigSegmentRouting_PrefixSid_LabelOptions = 0
	// OpenconfigSegmentRouting_PrefixSid_LabelOptions_NO_PHP corresponds to the value NO_PHP of OpenconfigSegmentRouting_PrefixSid_LabelOptions
	OpenconfigSegmentRouting_PrefixSid_LabelOptions_NO_PHP E_OpenconfigSegmentRouting_PrefixSid_LabelOptions = 1
	// OpenconfigSegmentRouting_PrefixSid_LabelOptions_EXPLICIT_NULL corresponds to the value EXPLICIT_NULL of OpenconfigSegmentRouting_PrefixSid_LabelOptions
	OpenconfigSegmentRouting_PrefixSid_LabelOptions_EXPLICIT_NULL E_OpenconfigSegmentRouting_PrefixSid_LabelOptions = 2
)

// E_OpenconfigSegmentRouting_PrefixSid_SidId is a derived int64 type which is used to represent
// the enumerated node OpenconfigSegmentRouting_PrefixSid_SidId. An additional value named
// OpenconfigSegmentRouting_PrefixSid_SidId_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigSegmentRouting_PrefixSid_SidId int64

// IsYANGGoEnum ensures that OpenconfigSegmentRouting_PrefixSid_SidId implements the yang.GoEnum
// interface. This ensures that OpenconfigSegmentRouting_PrefixSid_SidId can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigSegmentRouting_PrefixSid_SidId) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigSegmentRouting_PrefixSid_SidId.
func (E_OpenconfigSegmentRouting_PrefixSid_SidId) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigSegmentRouting_PrefixSid_SidId_UNSET corresponds to the value UNSET of OpenconfigSegmentRouting_PrefixSid_SidId
	OpenconfigSegmentRouting_PrefixSid_SidId_UNSET E_OpenconfigSegmentRouting_PrefixSid_SidId = 0
	// OpenconfigSegmentRouting_PrefixSid_SidId_IPV4_EXPLICIT_NULL corresponds to the value IPV4_EXPLICIT_NULL of OpenconfigSegmentRouting_PrefixSid_SidId
	OpenconfigSegmentRouting_PrefixSid_SidId_IPV4_EXPLICIT_NULL E_OpenconfigSegmentRouting_PrefixSid_SidId = 1
	// OpenconfigSegmentRouting_PrefixSid_SidId_ROUTER_ALERT corresponds to the value ROUTER_ALERT of OpenconfigSegmentRouting_PrefixSid_SidId
	OpenconfigSegmentRouting_PrefixSid_SidId_ROUTER_ALERT E_OpenconfigSegmentRouting_PrefixSid_SidId = 2
	// OpenconfigSegmentRouting_PrefixSid_SidId_IPV6_EXPLICIT_NULL corresponds to the value IPV6_EXPLICIT_NULL of OpenconfigSegmentRouting_PrefixSid_SidId
	OpenconfigSegmentRouting_PrefixSid_SidId_IPV6_EXPLICIT_NULL E_OpenconfigSegmentRouting_PrefixSid_SidId = 3
	// OpenconfigSegmentRouting_PrefixSid_SidId_IMPLICIT_NULL corresponds to the value IMPLICIT_NULL of OpenconfigSegmentRouting_PrefixSid_SidId
	OpenconfigSegmentRouting_PrefixSid_SidId_IMPLICIT_NULL E_OpenconfigSegmentRouting_PrefixSid_SidId = 4
	// OpenconfigSegmentRouting_PrefixSid_SidId_ENTROPY_LABEL_INDICATOR corresponds to the value ENTROPY_LABEL_INDICATOR of OpenconfigSegmentRouting_PrefixSid_SidId
	OpenconfigSegmentRouting_PrefixSid_SidId_ENTROPY_LABEL_INDICATOR E_OpenconfigSegmentRouting_PrefixSid_SidId = 8
	// OpenconfigSegmentRouting_PrefixSid_SidId_NO_LABEL corresponds to the value NO_LABEL of OpenconfigSegmentRouting_PrefixSid_SidId
	OpenconfigSegmentRouting_PrefixSid_SidId_NO_LABEL E_OpenconfigSegmentRouting_PrefixSid_SidId = 9
)

// E_OpenconfigSegmentRouting_SrDataplaneType is a derived int64 type which is used to represent
// the enumerated node OpenconfigSegmentRouting_SrDataplaneType. An additional value named
// OpenconfigSegmentRouting_SrDataplaneType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigSegmentRouting_SrDataplaneType int64

// IsYANGGoEnum ensures that OpenconfigSegmentRouting_SrDataplaneType implements the yang.GoEnum
// interface. This ensures that OpenconfigSegmentRouting_SrDataplaneType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigSegmentRouting_SrDataplaneType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigSegmentRouting_SrDataplaneType.
func (E_OpenconfigSegmentRouting_SrDataplaneType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigSegmentRouting_SrDataplaneType_UNSET corresponds to the value UNSET of OpenconfigSegmentRouting_SrDataplaneType
	OpenconfigSegmentRouting_SrDataplaneType_UNSET E_OpenconfigSegmentRouting_SrDataplaneType = 0
	// OpenconfigSegmentRouting_SrDataplaneType_MPLS corresponds to the value MPLS of OpenconfigSegmentRouting_SrDataplaneType
	OpenconfigSegmentRouting_SrDataplaneType_MPLS E_OpenconfigSegmentRouting_SrDataplaneType = 1
	// OpenconfigSegmentRouting_SrDataplaneType_IPV6 corresponds to the value IPV6 of OpenconfigSegmentRouting_SrDataplaneType
	OpenconfigSegmentRouting_SrDataplaneType_IPV6 E_OpenconfigSegmentRouting_SrDataplaneType = 2
)

// E_OpenconfigSpanningTreeTypes_STP_EDGE_PORT is a derived int64 type which is used to represent
// the enumerated node OpenconfigSpanningTreeTypes_STP_EDGE_PORT. An additional value named
// OpenconfigSpanningTreeTypes_STP_EDGE_PORT_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigSpanningTreeTypes_STP_EDGE_PORT int64

// IsYANGGoEnum ensures that OpenconfigSpanningTreeTypes_STP_EDGE_PORT implements the yang.GoEnum
// interface. This ensures that OpenconfigSpanningTreeTypes_STP_EDGE_PORT can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigSpanningTreeTypes_STP_EDGE_PORT) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigSpanningTreeTypes_STP_EDGE_PORT.
func (E_OpenconfigSpanningTreeTypes_STP_EDGE_PORT) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigSpanningTreeTypes_STP_EDGE_PORT_UNSET corresponds to the value UNSET of OpenconfigSpanningTreeTypes_STP_EDGE_PORT
	OpenconfigSpanningTreeTypes_STP_EDGE_PORT_UNSET E_OpenconfigSpanningTreeTypes_STP_EDGE_PORT = 0
	// OpenconfigSpanningTreeTypes_STP_EDGE_PORT_EDGE_AUTO corresponds to the value EDGE_AUTO of OpenconfigSpanningTreeTypes_STP_EDGE_PORT
	OpenconfigSpanningTreeTypes_STP_EDGE_PORT_EDGE_AUTO E_OpenconfigSpanningTreeTypes_STP_EDGE_PORT = 1
	// OpenconfigSpanningTreeTypes_STP_EDGE_PORT_EDGE_DISABLE corresponds to the value EDGE_DISABLE of OpenconfigSpanningTreeTypes_STP_EDGE_PORT
	OpenconfigSpanningTreeTypes_STP_EDGE_PORT_EDGE_DISABLE E_OpenconfigSpanningTreeTypes_STP_EDGE_PORT = 2
	// OpenconfigSpanningTreeTypes_STP_EDGE_PORT_EDGE_ENABLE corresponds to the value EDGE_ENABLE of OpenconfigSpanningTreeTypes_STP_EDGE_PORT
	OpenconfigSpanningTreeTypes_STP_EDGE_PORT_EDGE_ENABLE E_OpenconfigSpanningTreeTypes_STP_EDGE_PORT = 3
)

// E_OpenconfigSpanningTreeTypes_STP_PORT_ROLE is a derived int64 type which is used to represent
// the enumerated node OpenconfigSpanningTreeTypes_STP_PORT_ROLE. An additional value named
// OpenconfigSpanningTreeTypes_STP_PORT_ROLE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigSpanningTreeTypes_STP_PORT_ROLE int64

// IsYANGGoEnum ensures that OpenconfigSpanningTreeTypes_STP_PORT_ROLE implements the yang.GoEnum
// interface. This ensures that OpenconfigSpanningTreeTypes_STP_PORT_ROLE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigSpanningTreeTypes_STP_PORT_ROLE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigSpanningTreeTypes_STP_PORT_ROLE.
func (E_OpenconfigSpanningTreeTypes_STP_PORT_ROLE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigSpanningTreeTypes_STP_PORT_ROLE_UNSET corresponds to the value UNSET of OpenconfigSpanningTreeTypes_STP_PORT_ROLE
	OpenconfigSpanningTreeTypes_STP_PORT_ROLE_UNSET E_OpenconfigSpanningTreeTypes_STP_PORT_ROLE = 0
	// OpenconfigSpanningTreeTypes_STP_PORT_ROLE_ALTERNATE corresponds to the value ALTERNATE of OpenconfigSpanningTreeTypes_STP_PORT_ROLE
	OpenconfigSpanningTreeTypes_STP_PORT_ROLE_ALTERNATE E_OpenconfigSpanningTreeTypes_STP_PORT_ROLE = 1
	// OpenconfigSpanningTreeTypes_STP_PORT_ROLE_BACKUP corresponds to the value BACKUP of OpenconfigSpanningTreeTypes_STP_PORT_ROLE
	OpenconfigSpanningTreeTypes_STP_PORT_ROLE_BACKUP E_OpenconfigSpanningTreeTypes_STP_PORT_ROLE = 2
	// OpenconfigSpanningTreeTypes_STP_PORT_ROLE_DESIGNATED corresponds to the value DESIGNATED of OpenconfigSpanningTreeTypes_STP_PORT_ROLE
	OpenconfigSpanningTreeTypes_STP_PORT_ROLE_DESIGNATED E_OpenconfigSpanningTreeTypes_STP_PORT_ROLE = 3
	// OpenconfigSpanningTreeTypes_STP_PORT_ROLE_ROOT corresponds to the value ROOT of OpenconfigSpanningTreeTypes_STP_PORT_ROLE
	OpenconfigSpanningTreeTypes_STP_PORT_ROLE_ROOT E_OpenconfigSpanningTreeTypes_STP_PORT_ROLE = 4
)

// E_OpenconfigSpanningTreeTypes_STP_PORT_STATE is a derived int64 type which is used to represent
// the enumerated node OpenconfigSpanningTreeTypes_STP_PORT_STATE. An additional value named
// OpenconfigSpanningTreeTypes_STP_PORT_STATE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigSpanningTreeTypes_STP_PORT_STATE int64

// IsYANGGoEnum ensures that OpenconfigSpanningTreeTypes_STP_PORT_STATE implements the yang.GoEnum
// interface. This ensures that OpenconfigSpanningTreeTypes_STP_PORT_STATE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigSpanningTreeTypes_STP_PORT_STATE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigSpanningTreeTypes_STP_PORT_STATE.
func (E_OpenconfigSpanningTreeTypes_STP_PORT_STATE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigSpanningTreeTypes_STP_PORT_STATE_UNSET corresponds to the value UNSET of OpenconfigSpanningTreeTypes_STP_PORT_STATE
	OpenconfigSpanningTreeTypes_STP_PORT_STATE_UNSET E_OpenconfigSpanningTreeTypes_STP_PORT_STATE = 0
	// OpenconfigSpanningTreeTypes_STP_PORT_STATE_BLOCKING corresponds to the value BLOCKING of OpenconfigSpanningTreeTypes_STP_PORT_STATE
	OpenconfigSpanningTreeTypes_STP_PORT_STATE_BLOCKING E_OpenconfigSpanningTreeTypes_STP_PORT_STATE = 1
	// OpenconfigSpanningTreeTypes_STP_PORT_STATE_DISABLED corresponds to the value DISABLED of OpenconfigSpanningTreeTypes_STP_PORT_STATE
	OpenconfigSpanningTreeTypes_STP_PORT_STATE_DISABLED E_OpenconfigSpanningTreeTypes_STP_PORT_STATE = 2
	// OpenconfigSpanningTreeTypes_STP_PORT_STATE_FORWARDING corresponds to the value FORWARDING of OpenconfigSpanningTreeTypes_STP_PORT_STATE
	OpenconfigSpanningTreeTypes_STP_PORT_STATE_FORWARDING E_OpenconfigSpanningTreeTypes_STP_PORT_STATE = 3
	// OpenconfigSpanningTreeTypes_STP_PORT_STATE_LEARNING corresponds to the value LEARNING of OpenconfigSpanningTreeTypes_STP_PORT_STATE
	OpenconfigSpanningTreeTypes_STP_PORT_STATE_LEARNING E_OpenconfigSpanningTreeTypes_STP_PORT_STATE = 4
	// OpenconfigSpanningTreeTypes_STP_PORT_STATE_LISTENING corresponds to the value LISTENING of OpenconfigSpanningTreeTypes_STP_PORT_STATE
	OpenconfigSpanningTreeTypes_STP_PORT_STATE_LISTENING E_OpenconfigSpanningTreeTypes_STP_PORT_STATE = 5
)

// E_OpenconfigSpanningTreeTypes_STP_PROTOCOL is a derived int64 type which is used to represent
// the enumerated node OpenconfigSpanningTreeTypes_STP_PROTOCOL. An additional value named
// OpenconfigSpanningTreeTypes_STP_PROTOCOL_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigSpanningTreeTypes_STP_PROTOCOL int64

// IsYANGGoEnum ensures that OpenconfigSpanningTreeTypes_STP_PROTOCOL implements the yang.GoEnum
// interface. This ensures that OpenconfigSpanningTreeTypes_STP_PROTOCOL can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigSpanningTreeTypes_STP_PROTOCOL) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigSpanningTreeTypes_STP_PROTOCOL.
func (E_OpenconfigSpanningTreeTypes_STP_PROTOCOL) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigSpanningTreeTypes_STP_PROTOCOL_UNSET corresponds to the value UNSET of OpenconfigSpanningTreeTypes_STP_PROTOCOL
	OpenconfigSpanningTreeTypes_STP_PROTOCOL_UNSET E_OpenconfigSpanningTreeTypes_STP_PROTOCOL = 0
	// OpenconfigSpanningTreeTypes_STP_PROTOCOL_MSTP corresponds to the value MSTP of OpenconfigSpanningTreeTypes_STP_PROTOCOL
	OpenconfigSpanningTreeTypes_STP_PROTOCOL_MSTP E_OpenconfigSpanningTreeTypes_STP_PROTOCOL = 1
	// OpenconfigSpanningTreeTypes_STP_PROTOCOL_RAPID_PVST corresponds to the value RAPID_PVST of OpenconfigSpanningTreeTypes_STP_PROTOCOL
	OpenconfigSpanningTreeTypes_STP_PROTOCOL_RAPID_PVST E_OpenconfigSpanningTreeTypes_STP_PROTOCOL = 2
	// OpenconfigSpanningTreeTypes_STP_PROTOCOL_RSTP corresponds to the value RSTP of OpenconfigSpanningTreeTypes_STP_PROTOCOL
	OpenconfigSpanningTreeTypes_STP_PROTOCOL_RSTP E_OpenconfigSpanningTreeTypes_STP_PROTOCOL = 3
)

// E_OpenconfigSpanningTree_StpGuardType is a derived int64 type which is used to represent
// the enumerated node OpenconfigSpanningTree_StpGuardType. An additional value named
// OpenconfigSpanningTree_StpGuardType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigSpanningTree_StpGuardType int64

// IsYANGGoEnum ensures that OpenconfigSpanningTree_StpGuardType implements the yang.GoEnum
// interface. This ensures that OpenconfigSpanningTree_StpGuardType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigSpanningTree_StpGuardType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigSpanningTree_StpGuardType.
func (E_OpenconfigSpanningTree_StpGuardType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigSpanningTree_StpGuardType_UNSET corresponds to the value UNSET of OpenconfigSpanningTree_StpGuardType
	OpenconfigSpanningTree_StpGuardType_UNSET E_OpenconfigSpanningTree_StpGuardType = 0
	// OpenconfigSpanningTree_StpGuardType_ROOT corresponds to the value ROOT of OpenconfigSpanningTree_StpGuardType
	OpenconfigSpanningTree_StpGuardType_ROOT E_OpenconfigSpanningTree_StpGuardType = 1
	// OpenconfigSpanningTree_StpGuardType_LOOP corresponds to the value LOOP of OpenconfigSpanningTree_StpGuardType
	OpenconfigSpanningTree_StpGuardType_LOOP E_OpenconfigSpanningTree_StpGuardType = 2
	// OpenconfigSpanningTree_StpGuardType_NONE corresponds to the value NONE of OpenconfigSpanningTree_StpGuardType
	OpenconfigSpanningTree_StpGuardType_NONE E_OpenconfigSpanningTree_StpGuardType = 3
)

// E_OpenconfigSpanningTree_StpLinkType is a derived int64 type which is used to represent
// the enumerated node OpenconfigSpanningTree_StpLinkType. An additional value named
// OpenconfigSpanningTree_StpLinkType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigSpanningTree_StpLinkType int64

// IsYANGGoEnum ensures that OpenconfigSpanningTree_StpLinkType implements the yang.GoEnum
// interface. This ensures that OpenconfigSpanningTree_StpLinkType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigSpanningTree_StpLinkType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigSpanningTree_StpLinkType.
func (E_OpenconfigSpanningTree_StpLinkType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigSpanningTree_StpLinkType_UNSET corresponds to the value UNSET of OpenconfigSpanningTree_StpLinkType
	OpenconfigSpanningTree_StpLinkType_UNSET E_OpenconfigSpanningTree_StpLinkType = 0
	// OpenconfigSpanningTree_StpLinkType_P2P corresponds to the value P2P of OpenconfigSpanningTree_StpLinkType
	OpenconfigSpanningTree_StpLinkType_P2P E_OpenconfigSpanningTree_StpLinkType = 1
	// OpenconfigSpanningTree_StpLinkType_SHARED corresponds to the value SHARED of OpenconfigSpanningTree_StpLinkType
	OpenconfigSpanningTree_StpLinkType_SHARED E_OpenconfigSpanningTree_StpLinkType = 2
)

// E_OpenconfigSystemLogging_SYSLOG_FACILITY is a derived int64 type which is used to represent
// the enumerated node OpenconfigSystemLogging_SYSLOG_FACILITY. An additional value named
// OpenconfigSystemLogging_SYSLOG_FACILITY_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigSystemLogging_SYSLOG_FACILITY int64

// IsYANGGoEnum ensures that OpenconfigSystemLogging_SYSLOG_FACILITY implements the yang.GoEnum
// interface. This ensures that OpenconfigSystemLogging_SYSLOG_FACILITY can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigSystemLogging_SYSLOG_FACILITY) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigSystemLogging_SYSLOG_FACILITY.
func (E_OpenconfigSystemLogging_SYSLOG_FACILITY) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigSystemLogging_SYSLOG_FACILITY_UNSET corresponds to the value UNSET of OpenconfigSystemLogging_SYSLOG_FACILITY
	OpenconfigSystemLogging_SYSLOG_FACILITY_UNSET E_OpenconfigSystemLogging_SYSLOG_FACILITY = 0
	// OpenconfigSystemLogging_SYSLOG_FACILITY_ALL corresponds to the value ALL of OpenconfigSystemLogging_SYSLOG_FACILITY
	OpenconfigSystemLogging_SYSLOG_FACILITY_ALL E_OpenconfigSystemLogging_SYSLOG_FACILITY = 1
	// OpenconfigSystemLogging_SYSLOG_FACILITY_AUDIT corresponds to the value AUDIT of OpenconfigSystemLogging_SYSLOG_FACILITY
	OpenconfigSystemLogging_SYSLOG_FACILITY_AUDIT E_OpenconfigSystemLogging_SYSLOG_FACILITY = 2
	// OpenconfigSystemLogging_SYSLOG_FACILITY_AUTH corresponds to the value AUTH of OpenconfigSystemLogging_SYSLOG_FACILITY
	OpenconfigSystemLogging_SYSLOG_FACILITY_AUTH E_OpenconfigSystemLogging_SYSLOG_FACILITY = 3
	// OpenconfigSystemLogging_SYSLOG_FACILITY_AUTHPRIV corresponds to the value AUTHPRIV of OpenconfigSystemLogging_SYSLOG_FACILITY
	OpenconfigSystemLogging_SYSLOG_FACILITY_AUTHPRIV E_OpenconfigSystemLogging_SYSLOG_FACILITY = 4
	// OpenconfigSystemLogging_SYSLOG_FACILITY_CONSOLE corresponds to the value CONSOLE of OpenconfigSystemLogging_SYSLOG_FACILITY
	OpenconfigSystemLogging_SYSLOG_FACILITY_CONSOLE E_OpenconfigSystemLogging_SYSLOG_FACILITY = 5
	// OpenconfigSystemLogging_SYSLOG_FACILITY_KERNEL corresponds to the value KERNEL of OpenconfigSystemLogging_SYSLOG_FACILITY
	OpenconfigSystemLogging_SYSLOG_FACILITY_KERNEL E_OpenconfigSystemLogging_SYSLOG_FACILITY = 6
	// OpenconfigSystemLogging_SYSLOG_FACILITY_LOCAL0 corresponds to the value LOCAL0 of OpenconfigSystemLogging_SYSLOG_FACILITY
	OpenconfigSystemLogging_SYSLOG_FACILITY_LOCAL0 E_OpenconfigSystemLogging_SYSLOG_FACILITY = 7
	// OpenconfigSystemLogging_SYSLOG_FACILITY_LOCAL1 corresponds to the value LOCAL1 of OpenconfigSystemLogging_SYSLOG_FACILITY
	OpenconfigSystemLogging_SYSLOG_FACILITY_LOCAL1 E_OpenconfigSystemLogging_SYSLOG_FACILITY = 8
	// OpenconfigSystemLogging_SYSLOG_FACILITY_LOCAL2 corresponds to the value LOCAL2 of OpenconfigSystemLogging_SYSLOG_FACILITY
	OpenconfigSystemLogging_SYSLOG_FACILITY_LOCAL2 E_OpenconfigSystemLogging_SYSLOG_FACILITY = 9
	// OpenconfigSystemLogging_SYSLOG_FACILITY_LOCAL3 corresponds to the value LOCAL3 of OpenconfigSystemLogging_SYSLOG_FACILITY
	OpenconfigSystemLogging_SYSLOG_FACILITY_LOCAL3 E_OpenconfigSystemLogging_SYSLOG_FACILITY = 10
	// OpenconfigSystemLogging_SYSLOG_FACILITY_LOCAL4 corresponds to the value LOCAL4 of OpenconfigSystemLogging_SYSLOG_FACILITY
	OpenconfigSystemLogging_SYSLOG_FACILITY_LOCAL4 E_OpenconfigSystemLogging_SYSLOG_FACILITY = 11
	// OpenconfigSystemLogging_SYSLOG_FACILITY_LOCAL5 corresponds to the value LOCAL5 of OpenconfigSystemLogging_SYSLOG_FACILITY
	OpenconfigSystemLogging_SYSLOG_FACILITY_LOCAL5 E_OpenconfigSystemLogging_SYSLOG_FACILITY = 12
	// OpenconfigSystemLogging_SYSLOG_FACILITY_LOCAL6 corresponds to the value LOCAL6 of OpenconfigSystemLogging_SYSLOG_FACILITY
	OpenconfigSystemLogging_SYSLOG_FACILITY_LOCAL6 E_OpenconfigSystemLogging_SYSLOG_FACILITY = 13
	// OpenconfigSystemLogging_SYSLOG_FACILITY_LOCAL7 corresponds to the value LOCAL7 of OpenconfigSystemLogging_SYSLOG_FACILITY
	OpenconfigSystemLogging_SYSLOG_FACILITY_LOCAL7 E_OpenconfigSystemLogging_SYSLOG_FACILITY = 14
	// OpenconfigSystemLogging_SYSLOG_FACILITY_MAIL corresponds to the value MAIL of OpenconfigSystemLogging_SYSLOG_FACILITY
	OpenconfigSystemLogging_SYSLOG_FACILITY_MAIL E_OpenconfigSystemLogging_SYSLOG_FACILITY = 15
	// OpenconfigSystemLogging_SYSLOG_FACILITY_NTP corresponds to the value NTP of OpenconfigSystemLogging_SYSLOG_FACILITY
	OpenconfigSystemLogging_SYSLOG_FACILITY_NTP E_OpenconfigSystemLogging_SYSLOG_FACILITY = 16
	// OpenconfigSystemLogging_SYSLOG_FACILITY_SYSLOG corresponds to the value SYSLOG of OpenconfigSystemLogging_SYSLOG_FACILITY
	OpenconfigSystemLogging_SYSLOG_FACILITY_SYSLOG E_OpenconfigSystemLogging_SYSLOG_FACILITY = 17
	// OpenconfigSystemLogging_SYSLOG_FACILITY_SYSTEM_DAEMON corresponds to the value SYSTEM_DAEMON of OpenconfigSystemLogging_SYSLOG_FACILITY
	OpenconfigSystemLogging_SYSLOG_FACILITY_SYSTEM_DAEMON E_OpenconfigSystemLogging_SYSLOG_FACILITY = 18
	// OpenconfigSystemLogging_SYSLOG_FACILITY_USER corresponds to the value USER of OpenconfigSystemLogging_SYSLOG_FACILITY
	OpenconfigSystemLogging_SYSLOG_FACILITY_USER E_OpenconfigSystemLogging_SYSLOG_FACILITY = 19
)

// E_OpenconfigSystemLogging_SyslogSeverity is a derived int64 type which is used to represent
// the enumerated node OpenconfigSystemLogging_SyslogSeverity. An additional value named
// OpenconfigSystemLogging_SyslogSeverity_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigSystemLogging_SyslogSeverity int64

// IsYANGGoEnum ensures that OpenconfigSystemLogging_SyslogSeverity implements the yang.GoEnum
// interface. This ensures that OpenconfigSystemLogging_SyslogSeverity can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigSystemLogging_SyslogSeverity) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigSystemLogging_SyslogSeverity.
func (E_OpenconfigSystemLogging_SyslogSeverity) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigSystemLogging_SyslogSeverity_UNSET corresponds to the value UNSET of OpenconfigSystemLogging_SyslogSeverity
	OpenconfigSystemLogging_SyslogSeverity_UNSET E_OpenconfigSystemLogging_SyslogSeverity = 0
	// OpenconfigSystemLogging_SyslogSeverity_EMERGENCY corresponds to the value EMERGENCY of OpenconfigSystemLogging_SyslogSeverity
	OpenconfigSystemLogging_SyslogSeverity_EMERGENCY E_OpenconfigSystemLogging_SyslogSeverity = 1
	// OpenconfigSystemLogging_SyslogSeverity_ALERT corresponds to the value ALERT of OpenconfigSystemLogging_SyslogSeverity
	OpenconfigSystemLogging_SyslogSeverity_ALERT E_OpenconfigSystemLogging_SyslogSeverity = 2
	// OpenconfigSystemLogging_SyslogSeverity_CRITICAL corresponds to the value CRITICAL of OpenconfigSystemLogging_SyslogSeverity
	OpenconfigSystemLogging_SyslogSeverity_CRITICAL E_OpenconfigSystemLogging_SyslogSeverity = 3
	// OpenconfigSystemLogging_SyslogSeverity_ERROR corresponds to the value ERROR of OpenconfigSystemLogging_SyslogSeverity
	OpenconfigSystemLogging_SyslogSeverity_ERROR E_OpenconfigSystemLogging_SyslogSeverity = 4
	// OpenconfigSystemLogging_SyslogSeverity_WARNING corresponds to the value WARNING of OpenconfigSystemLogging_SyslogSeverity
	OpenconfigSystemLogging_SyslogSeverity_WARNING E_OpenconfigSystemLogging_SyslogSeverity = 5
	// OpenconfigSystemLogging_SyslogSeverity_NOTICE corresponds to the value NOTICE of OpenconfigSystemLogging_SyslogSeverity
	OpenconfigSystemLogging_SyslogSeverity_NOTICE E_OpenconfigSystemLogging_SyslogSeverity = 6
	// OpenconfigSystemLogging_SyslogSeverity_INFORMATIONAL corresponds to the value INFORMATIONAL of OpenconfigSystemLogging_SyslogSeverity
	OpenconfigSystemLogging_SyslogSeverity_INFORMATIONAL E_OpenconfigSystemLogging_SyslogSeverity = 7
	// OpenconfigSystemLogging_SyslogSeverity_DEBUG corresponds to the value DEBUG of OpenconfigSystemLogging_SyslogSeverity
	OpenconfigSystemLogging_SyslogSeverity_DEBUG E_OpenconfigSystemLogging_SyslogSeverity = 8
)

// E_OpenconfigSystemTerminal_SshServer_ProtocolVersion is a derived int64 type which is used to represent
// the enumerated node OpenconfigSystemTerminal_SshServer_ProtocolVersion. An additional value named
// OpenconfigSystemTerminal_SshServer_ProtocolVersion_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigSystemTerminal_SshServer_ProtocolVersion int64

// IsYANGGoEnum ensures that OpenconfigSystemTerminal_SshServer_ProtocolVersion implements the yang.GoEnum
// interface. This ensures that OpenconfigSystemTerminal_SshServer_ProtocolVersion can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigSystemTerminal_SshServer_ProtocolVersion) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigSystemTerminal_SshServer_ProtocolVersion.
func (E_OpenconfigSystemTerminal_SshServer_ProtocolVersion) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigSystemTerminal_SshServer_ProtocolVersion_UNSET corresponds to the value UNSET of OpenconfigSystemTerminal_SshServer_ProtocolVersion
	OpenconfigSystemTerminal_SshServer_ProtocolVersion_UNSET E_OpenconfigSystemTerminal_SshServer_ProtocolVersion = 0
	// OpenconfigSystemTerminal_SshServer_ProtocolVersion_V2 corresponds to the value V2 of OpenconfigSystemTerminal_SshServer_ProtocolVersion
	OpenconfigSystemTerminal_SshServer_ProtocolVersion_V2 E_OpenconfigSystemTerminal_SshServer_ProtocolVersion = 1
	// OpenconfigSystemTerminal_SshServer_ProtocolVersion_V1 corresponds to the value V1 of OpenconfigSystemTerminal_SshServer_ProtocolVersion
	OpenconfigSystemTerminal_SshServer_ProtocolVersion_V1 E_OpenconfigSystemTerminal_SshServer_ProtocolVersion = 2
	// OpenconfigSystemTerminal_SshServer_ProtocolVersion_V1_V2 corresponds to the value V1_V2 of OpenconfigSystemTerminal_SshServer_ProtocolVersion
	OpenconfigSystemTerminal_SshServer_ProtocolVersion_V1_V2 E_OpenconfigSystemTerminal_SshServer_ProtocolVersion = 3
)

// E_OpenconfigSystem_Cpu_Index is a derived int64 type which is used to represent
// the enumerated node OpenconfigSystem_Cpu_Index. An additional value named
// OpenconfigSystem_Cpu_Index_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigSystem_Cpu_Index int64

// IsYANGGoEnum ensures that OpenconfigSystem_Cpu_Index implements the yang.GoEnum
// interface. This ensures that OpenconfigSystem_Cpu_Index can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigSystem_Cpu_Index) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigSystem_Cpu_Index.
func (E_OpenconfigSystem_Cpu_Index) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigSystem_Cpu_Index_UNSET corresponds to the value UNSET of OpenconfigSystem_Cpu_Index
	OpenconfigSystem_Cpu_Index_UNSET E_OpenconfigSystem_Cpu_Index = 0
	// OpenconfigSystem_Cpu_Index_ALL corresponds to the value ALL of OpenconfigSystem_Cpu_Index
	OpenconfigSystem_Cpu_Index_ALL E_OpenconfigSystem_Cpu_Index = 1
)

// E_OpenconfigSystem_NTP_AUTH_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigSystem_NTP_AUTH_TYPE. An additional value named
// OpenconfigSystem_NTP_AUTH_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigSystem_NTP_AUTH_TYPE int64

// IsYANGGoEnum ensures that OpenconfigSystem_NTP_AUTH_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigSystem_NTP_AUTH_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigSystem_NTP_AUTH_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigSystem_NTP_AUTH_TYPE.
func (E_OpenconfigSystem_NTP_AUTH_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigSystem_NTP_AUTH_TYPE_UNSET corresponds to the value UNSET of OpenconfigSystem_NTP_AUTH_TYPE
	OpenconfigSystem_NTP_AUTH_TYPE_UNSET E_OpenconfigSystem_NTP_AUTH_TYPE = 0
	// OpenconfigSystem_NTP_AUTH_TYPE_NTP_AUTH_MD5 corresponds to the value NTP_AUTH_MD5 of OpenconfigSystem_NTP_AUTH_TYPE
	OpenconfigSystem_NTP_AUTH_TYPE_NTP_AUTH_MD5 E_OpenconfigSystem_NTP_AUTH_TYPE = 1
)

// E_OpenconfigSystem_Server_AssociationType is a derived int64 type which is used to represent
// the enumerated node OpenconfigSystem_Server_AssociationType. An additional value named
// OpenconfigSystem_Server_AssociationType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigSystem_Server_AssociationType int64

// IsYANGGoEnum ensures that OpenconfigSystem_Server_AssociationType implements the yang.GoEnum
// interface. This ensures that OpenconfigSystem_Server_AssociationType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigSystem_Server_AssociationType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigSystem_Server_AssociationType.
func (E_OpenconfigSystem_Server_AssociationType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigSystem_Server_AssociationType_UNSET corresponds to the value UNSET of OpenconfigSystem_Server_AssociationType
	OpenconfigSystem_Server_AssociationType_UNSET E_OpenconfigSystem_Server_AssociationType = 0
	// OpenconfigSystem_Server_AssociationType_SERVER corresponds to the value SERVER of OpenconfigSystem_Server_AssociationType
	OpenconfigSystem_Server_AssociationType_SERVER E_OpenconfigSystem_Server_AssociationType = 1
	// OpenconfigSystem_Server_AssociationType_PEER corresponds to the value PEER of OpenconfigSystem_Server_AssociationType
	OpenconfigSystem_Server_AssociationType_PEER E_OpenconfigSystem_Server_AssociationType = 2
	// OpenconfigSystem_Server_AssociationType_POOL corresponds to the value POOL of OpenconfigSystem_Server_AssociationType
	OpenconfigSystem_Server_AssociationType_POOL E_OpenconfigSystem_Server_AssociationType = 3
)

// E_OpenconfigTerminalDevice_AdminStateType is a derived int64 type which is used to represent
// the enumerated node OpenconfigTerminalDevice_AdminStateType. An additional value named
// OpenconfigTerminalDevice_AdminStateType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigTerminalDevice_AdminStateType int64

// IsYANGGoEnum ensures that OpenconfigTerminalDevice_AdminStateType implements the yang.GoEnum
// interface. This ensures that OpenconfigTerminalDevice_AdminStateType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigTerminalDevice_AdminStateType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigTerminalDevice_AdminStateType.
func (E_OpenconfigTerminalDevice_AdminStateType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigTerminalDevice_AdminStateType_UNSET corresponds to the value UNSET of OpenconfigTerminalDevice_AdminStateType
	OpenconfigTerminalDevice_AdminStateType_UNSET E_OpenconfigTerminalDevice_AdminStateType = 0
	// OpenconfigTerminalDevice_AdminStateType_ENABLED corresponds to the value ENABLED of OpenconfigTerminalDevice_AdminStateType
	OpenconfigTerminalDevice_AdminStateType_ENABLED E_OpenconfigTerminalDevice_AdminStateType = 1
	// OpenconfigTerminalDevice_AdminStateType_DISABLED corresponds to the value DISABLED of OpenconfigTerminalDevice_AdminStateType
	OpenconfigTerminalDevice_AdminStateType_DISABLED E_OpenconfigTerminalDevice_AdminStateType = 2
	// OpenconfigTerminalDevice_AdminStateType_MAINT corresponds to the value MAINT of OpenconfigTerminalDevice_AdminStateType
	OpenconfigTerminalDevice_AdminStateType_MAINT E_OpenconfigTerminalDevice_AdminStateType = 3
)

// E_OpenconfigTerminalDevice_Assignment_AssignmentType is a derived int64 type which is used to represent
// the enumerated node OpenconfigTerminalDevice_Assignment_AssignmentType. An additional value named
// OpenconfigTerminalDevice_Assignment_AssignmentType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigTerminalDevice_Assignment_AssignmentType int64

// IsYANGGoEnum ensures that OpenconfigTerminalDevice_Assignment_AssignmentType implements the yang.GoEnum
// interface. This ensures that OpenconfigTerminalDevice_Assignment_AssignmentType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigTerminalDevice_Assignment_AssignmentType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigTerminalDevice_Assignment_AssignmentType.
func (E_OpenconfigTerminalDevice_Assignment_AssignmentType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigTerminalDevice_Assignment_AssignmentType_UNSET corresponds to the value UNSET of OpenconfigTerminalDevice_Assignment_AssignmentType
	OpenconfigTerminalDevice_Assignment_AssignmentType_UNSET E_OpenconfigTerminalDevice_Assignment_AssignmentType = 0
	// OpenconfigTerminalDevice_Assignment_AssignmentType_LOGICAL_CHANNEL corresponds to the value LOGICAL_CHANNEL of OpenconfigTerminalDevice_Assignment_AssignmentType
	OpenconfigTerminalDevice_Assignment_AssignmentType_LOGICAL_CHANNEL E_OpenconfigTerminalDevice_Assignment_AssignmentType = 1
	// OpenconfigTerminalDevice_Assignment_AssignmentType_OPTICAL_CHANNEL corresponds to the value OPTICAL_CHANNEL of OpenconfigTerminalDevice_Assignment_AssignmentType
	OpenconfigTerminalDevice_Assignment_AssignmentType_OPTICAL_CHANNEL E_OpenconfigTerminalDevice_Assignment_AssignmentType = 2
)

// E_OpenconfigTerminalDevice_Channel_LinkState is a derived int64 type which is used to represent
// the enumerated node OpenconfigTerminalDevice_Channel_LinkState. An additional value named
// OpenconfigTerminalDevice_Channel_LinkState_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigTerminalDevice_Channel_LinkState int64

// IsYANGGoEnum ensures that OpenconfigTerminalDevice_Channel_LinkState implements the yang.GoEnum
// interface. This ensures that OpenconfigTerminalDevice_Channel_LinkState can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigTerminalDevice_Channel_LinkState) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigTerminalDevice_Channel_LinkState.
func (E_OpenconfigTerminalDevice_Channel_LinkState) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigTerminalDevice_Channel_LinkState_UNSET corresponds to the value UNSET of OpenconfigTerminalDevice_Channel_LinkState
	OpenconfigTerminalDevice_Channel_LinkState_UNSET E_OpenconfigTerminalDevice_Channel_LinkState = 0
	// OpenconfigTerminalDevice_Channel_LinkState_UP corresponds to the value UP of OpenconfigTerminalDevice_Channel_LinkState
	OpenconfigTerminalDevice_Channel_LinkState_UP E_OpenconfigTerminalDevice_Channel_LinkState = 1
	// OpenconfigTerminalDevice_Channel_LinkState_DOWN corresponds to the value DOWN of OpenconfigTerminalDevice_Channel_LinkState
	OpenconfigTerminalDevice_Channel_LinkState_DOWN E_OpenconfigTerminalDevice_Channel_LinkState = 2
)

// E_OpenconfigTerminalDevice_LoopbackModeType is a derived int64 type which is used to represent
// the enumerated node OpenconfigTerminalDevice_LoopbackModeType. An additional value named
// OpenconfigTerminalDevice_LoopbackModeType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigTerminalDevice_LoopbackModeType int64

// IsYANGGoEnum ensures that OpenconfigTerminalDevice_LoopbackModeType implements the yang.GoEnum
// interface. This ensures that OpenconfigTerminalDevice_LoopbackModeType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigTerminalDevice_LoopbackModeType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigTerminalDevice_LoopbackModeType.
func (E_OpenconfigTerminalDevice_LoopbackModeType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigTerminalDevice_LoopbackModeType_UNSET corresponds to the value UNSET of OpenconfigTerminalDevice_LoopbackModeType
	OpenconfigTerminalDevice_LoopbackModeType_UNSET E_OpenconfigTerminalDevice_LoopbackModeType = 0
	// OpenconfigTerminalDevice_LoopbackModeType_NONE corresponds to the value NONE of OpenconfigTerminalDevice_LoopbackModeType
	OpenconfigTerminalDevice_LoopbackModeType_NONE E_OpenconfigTerminalDevice_LoopbackModeType = 1
	// OpenconfigTerminalDevice_LoopbackModeType_FACILITY corresponds to the value FACILITY of OpenconfigTerminalDevice_LoopbackModeType
	OpenconfigTerminalDevice_LoopbackModeType_FACILITY E_OpenconfigTerminalDevice_LoopbackModeType = 2
	// OpenconfigTerminalDevice_LoopbackModeType_TERMINAL corresponds to the value TERMINAL of OpenconfigTerminalDevice_LoopbackModeType
	OpenconfigTerminalDevice_LoopbackModeType_TERMINAL E_OpenconfigTerminalDevice_LoopbackModeType = 3
)

// E_OpenconfigTransportLineCommon_AdminStateType is a derived int64 type which is used to represent
// the enumerated node OpenconfigTransportLineCommon_AdminStateType. An additional value named
// OpenconfigTransportLineCommon_AdminStateType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigTransportLineCommon_AdminStateType int64

// IsYANGGoEnum ensures that OpenconfigTransportLineCommon_AdminStateType implements the yang.GoEnum
// interface. This ensures that OpenconfigTransportLineCommon_AdminStateType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigTransportLineCommon_AdminStateType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigTransportLineCommon_AdminStateType.
func (E_OpenconfigTransportLineCommon_AdminStateType) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigTransportLineCommon_AdminStateType_UNSET corresponds to the value UNSET of OpenconfigTransportLineCommon_AdminStateType
	OpenconfigTransportLineCommon_AdminStateType_UNSET E_OpenconfigTransportLineCommon_AdminStateType = 0
	// OpenconfigTransportLineCommon_AdminStateType_ENABLED corresponds to the value ENABLED of OpenconfigTransportLineCommon_AdminStateType
	OpenconfigTransportLineCommon_AdminStateType_ENABLED E_OpenconfigTransportLineCommon_AdminStateType = 1
	// OpenconfigTransportLineCommon_AdminStateType_DISABLED corresponds to the value DISABLED of OpenconfigTransportLineCommon_AdminStateType
	OpenconfigTransportLineCommon_AdminStateType_DISABLED E_OpenconfigTransportLineCommon_AdminStateType = 2
	// OpenconfigTransportLineCommon_AdminStateType_MAINT corresponds to the value MAINT of OpenconfigTransportLineCommon_AdminStateType
	OpenconfigTransportLineCommon_AdminStateType_MAINT E_OpenconfigTransportLineCommon_AdminStateType = 3
)

// E_OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE. An additional value named
// OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE int64

// IsYANGGoEnum ensures that OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE.
func (E_OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE_UNSET corresponds to the value UNSET of OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE
	OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE_UNSET E_OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE = 0
	// OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE_ADD corresponds to the value ADD of OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE
	OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE_ADD E_OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE = 1
	// OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE_DROP corresponds to the value DROP of OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE
	OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE_DROP E_OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE = 2
	// OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE_EGRESS corresponds to the value EGRESS of OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE
	OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE_EGRESS E_OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE = 3
	// OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE_INGRESS corresponds to the value INGRESS of OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE
	OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE_INGRESS E_OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE = 4
	// OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE_MONITOR corresponds to the value MONITOR of OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE
	OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE_MONITOR E_OpenconfigTransportLineCommon_OPTICAL_LINE_PORT_TYPE = 5
)

// E_OpenconfigTransportLineProtection_APS_PATHS is a derived int64 type which is used to represent
// the enumerated node OpenconfigTransportLineProtection_APS_PATHS. An additional value named
// OpenconfigTransportLineProtection_APS_PATHS_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigTransportLineProtection_APS_PATHS int64

// IsYANGGoEnum ensures that OpenconfigTransportLineProtection_APS_PATHS implements the yang.GoEnum
// interface. This ensures that OpenconfigTransportLineProtection_APS_PATHS can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigTransportLineProtection_APS_PATHS) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigTransportLineProtection_APS_PATHS.
func (E_OpenconfigTransportLineProtection_APS_PATHS) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigTransportLineProtection_APS_PATHS_UNSET corresponds to the value UNSET of OpenconfigTransportLineProtection_APS_PATHS
	OpenconfigTransportLineProtection_APS_PATHS_UNSET E_OpenconfigTransportLineProtection_APS_PATHS = 0
	// OpenconfigTransportLineProtection_APS_PATHS_PRIMARY corresponds to the value PRIMARY of OpenconfigTransportLineProtection_APS_PATHS
	OpenconfigTransportLineProtection_APS_PATHS_PRIMARY E_OpenconfigTransportLineProtection_APS_PATHS = 1
	// OpenconfigTransportLineProtection_APS_PATHS_SECONDARY corresponds to the value SECONDARY of OpenconfigTransportLineProtection_APS_PATHS
	OpenconfigTransportLineProtection_APS_PATHS_SECONDARY E_OpenconfigTransportLineProtection_APS_PATHS = 2
)

// E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigTransportTypes_ETHERNET_PMD_TYPE. An additional value named
// OpenconfigTransportTypes_ETHERNET_PMD_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE int64

// IsYANGGoEnum ensures that OpenconfigTransportTypes_ETHERNET_PMD_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigTransportTypes_ETHERNET_PMD_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigTransportTypes_ETHERNET_PMD_TYPE.
func (E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigTransportTypes_ETHERNET_PMD_TYPE_UNSET corresponds to the value UNSET of OpenconfigTransportTypes_ETHERNET_PMD_TYPE
	OpenconfigTransportTypes_ETHERNET_PMD_TYPE_UNSET E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE = 0
	// OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_CLR4 corresponds to the value ETH_100GBASE_CLR4 of OpenconfigTransportTypes_ETHERNET_PMD_TYPE
	OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_CLR4 E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE = 1
	// OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_CR4 corresponds to the value ETH_100GBASE_CR4 of OpenconfigTransportTypes_ETHERNET_PMD_TYPE
	OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_CR4 E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE = 2
	// OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_CWDM4 corresponds to the value ETH_100GBASE_CWDM4 of OpenconfigTransportTypes_ETHERNET_PMD_TYPE
	OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_CWDM4 E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE = 3
	// OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_ER4 corresponds to the value ETH_100GBASE_ER4 of OpenconfigTransportTypes_ETHERNET_PMD_TYPE
	OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_ER4 E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE = 4
	// OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_LR4 corresponds to the value ETH_100GBASE_LR4 of OpenconfigTransportTypes_ETHERNET_PMD_TYPE
	OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_LR4 E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE = 5
	// OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_PSM4 corresponds to the value ETH_100GBASE_PSM4 of OpenconfigTransportTypes_ETHERNET_PMD_TYPE
	OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_PSM4 E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE = 6
	// OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_SR10 corresponds to the value ETH_100GBASE_SR10 of OpenconfigTransportTypes_ETHERNET_PMD_TYPE
	OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_SR10 E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE = 7
	// OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_SR4 corresponds to the value ETH_100GBASE_SR4 of OpenconfigTransportTypes_ETHERNET_PMD_TYPE
	OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_100GBASE_SR4 E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE = 8
	// OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_100G_ACC corresponds to the value ETH_100G_ACC of OpenconfigTransportTypes_ETHERNET_PMD_TYPE
	OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_100G_ACC E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE = 9
	// OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_100G_AOC corresponds to the value ETH_100G_AOC of OpenconfigTransportTypes_ETHERNET_PMD_TYPE
	OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_100G_AOC E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE = 10
	// OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_ER corresponds to the value ETH_10GBASE_ER of OpenconfigTransportTypes_ETHERNET_PMD_TYPE
	OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_ER E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE = 11
	// OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_LR corresponds to the value ETH_10GBASE_LR of OpenconfigTransportTypes_ETHERNET_PMD_TYPE
	OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_LR E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE = 12
	// OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_LRM corresponds to the value ETH_10GBASE_LRM of OpenconfigTransportTypes_ETHERNET_PMD_TYPE
	OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_LRM E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE = 13
	// OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_SR corresponds to the value ETH_10GBASE_SR of OpenconfigTransportTypes_ETHERNET_PMD_TYPE
	OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_SR E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE = 14
	// OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_ZR corresponds to the value ETH_10GBASE_ZR of OpenconfigTransportTypes_ETHERNET_PMD_TYPE
	OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_10GBASE_ZR E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE = 15
	// OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_CR4 corresponds to the value ETH_40GBASE_CR4 of OpenconfigTransportTypes_ETHERNET_PMD_TYPE
	OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_CR4 E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE = 16
	// OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_ER4 corresponds to the value ETH_40GBASE_ER4 of OpenconfigTransportTypes_ETHERNET_PMD_TYPE
	OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_ER4 E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE = 17
	// OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_LR4 corresponds to the value ETH_40GBASE_LR4 of OpenconfigTransportTypes_ETHERNET_PMD_TYPE
	OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_LR4 E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE = 18
	// OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_PSM4 corresponds to the value ETH_40GBASE_PSM4 of OpenconfigTransportTypes_ETHERNET_PMD_TYPE
	OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_PSM4 E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE = 19
	// OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_SR4 corresponds to the value ETH_40GBASE_SR4 of OpenconfigTransportTypes_ETHERNET_PMD_TYPE
	OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_40GBASE_SR4 E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE = 20
	// OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_4X10GBASE_LR corresponds to the value ETH_4X10GBASE_LR of OpenconfigTransportTypes_ETHERNET_PMD_TYPE
	OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_4X10GBASE_LR E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE = 21
	// OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_4X10GBASE_SR corresponds to the value ETH_4X10GBASE_SR of OpenconfigTransportTypes_ETHERNET_PMD_TYPE
	OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_4X10GBASE_SR E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE = 22
	// OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_UNDEFINED corresponds to the value ETH_UNDEFINED of OpenconfigTransportTypes_ETHERNET_PMD_TYPE
	OpenconfigTransportTypes_ETHERNET_PMD_TYPE_ETH_UNDEFINED E_OpenconfigTransportTypes_ETHERNET_PMD_TYPE = 23
)

// E_OpenconfigTransportTypes_FIBER_CONNECTOR_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigTransportTypes_FIBER_CONNECTOR_TYPE. An additional value named
// OpenconfigTransportTypes_FIBER_CONNECTOR_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigTransportTypes_FIBER_CONNECTOR_TYPE int64

// IsYANGGoEnum ensures that OpenconfigTransportTypes_FIBER_CONNECTOR_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigTransportTypes_FIBER_CONNECTOR_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigTransportTypes_FIBER_CONNECTOR_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigTransportTypes_FIBER_CONNECTOR_TYPE.
func (E_OpenconfigTransportTypes_FIBER_CONNECTOR_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigTransportTypes_FIBER_CONNECTOR_TYPE_UNSET corresponds to the value UNSET of OpenconfigTransportTypes_FIBER_CONNECTOR_TYPE
	OpenconfigTransportTypes_FIBER_CONNECTOR_TYPE_UNSET E_OpenconfigTransportTypes_FIBER_CONNECTOR_TYPE = 0
	// OpenconfigTransportTypes_FIBER_CONNECTOR_TYPE_LC_CONNECTOR corresponds to the value LC_CONNECTOR of OpenconfigTransportTypes_FIBER_CONNECTOR_TYPE
	OpenconfigTransportTypes_FIBER_CONNECTOR_TYPE_LC_CONNECTOR E_OpenconfigTransportTypes_FIBER_CONNECTOR_TYPE = 1
	// OpenconfigTransportTypes_FIBER_CONNECTOR_TYPE_MPO_CONNECTOR corresponds to the value MPO_CONNECTOR of OpenconfigTransportTypes_FIBER_CONNECTOR_TYPE
	OpenconfigTransportTypes_FIBER_CONNECTOR_TYPE_MPO_CONNECTOR E_OpenconfigTransportTypes_FIBER_CONNECTOR_TYPE = 2
	// OpenconfigTransportTypes_FIBER_CONNECTOR_TYPE_SC_CONNECTOR corresponds to the value SC_CONNECTOR of OpenconfigTransportTypes_FIBER_CONNECTOR_TYPE
	OpenconfigTransportTypes_FIBER_CONNECTOR_TYPE_SC_CONNECTOR E_OpenconfigTransportTypes_FIBER_CONNECTOR_TYPE = 3
)

// E_OpenconfigTransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigTransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE. An additional value named
// OpenconfigTransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigTransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE int64

// IsYANGGoEnum ensures that OpenconfigTransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigTransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigTransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigTransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE.
func (E_OpenconfigTransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigTransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE_UNSET corresponds to the value UNSET of OpenconfigTransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE
	OpenconfigTransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE_UNSET E_OpenconfigTransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE = 0
	// OpenconfigTransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE_PROT_ETHERNET corresponds to the value PROT_ETHERNET of OpenconfigTransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE
	OpenconfigTransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE_PROT_ETHERNET E_OpenconfigTransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE = 1
	// OpenconfigTransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE_PROT_OTN corresponds to the value PROT_OTN of OpenconfigTransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE
	OpenconfigTransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE_PROT_OTN E_OpenconfigTransportTypes_LOGICAL_ELEMENT_PROTOCOL_TYPE = 2
)

// E_OpenconfigTransportTypes_OTN_APPLICATION_CODE is a derived int64 type which is used to represent
// the enumerated node OpenconfigTransportTypes_OTN_APPLICATION_CODE. An additional value named
// OpenconfigTransportTypes_OTN_APPLICATION_CODE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigTransportTypes_OTN_APPLICATION_CODE int64

// IsYANGGoEnum ensures that OpenconfigTransportTypes_OTN_APPLICATION_CODE implements the yang.GoEnum
// interface. This ensures that OpenconfigTransportTypes_OTN_APPLICATION_CODE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigTransportTypes_OTN_APPLICATION_CODE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigTransportTypes_OTN_APPLICATION_CODE.
func (E_OpenconfigTransportTypes_OTN_APPLICATION_CODE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigTransportTypes_OTN_APPLICATION_CODE_UNSET corresponds to the value UNSET of OpenconfigTransportTypes_OTN_APPLICATION_CODE
	OpenconfigTransportTypes_OTN_APPLICATION_CODE_UNSET E_OpenconfigTransportTypes_OTN_APPLICATION_CODE = 0
	// OpenconfigTransportTypes_OTN_APPLICATION_CODE_OTN_UNDEFINED corresponds to the value OTN_UNDEFINED of OpenconfigTransportTypes_OTN_APPLICATION_CODE
	OpenconfigTransportTypes_OTN_APPLICATION_CODE_OTN_UNDEFINED E_OpenconfigTransportTypes_OTN_APPLICATION_CODE = 1
	// OpenconfigTransportTypes_OTN_APPLICATION_CODE_P1L1_2D1 corresponds to the value P1L1_2D1 of OpenconfigTransportTypes_OTN_APPLICATION_CODE
	OpenconfigTransportTypes_OTN_APPLICATION_CODE_P1L1_2D1 E_OpenconfigTransportTypes_OTN_APPLICATION_CODE = 2
	// OpenconfigTransportTypes_OTN_APPLICATION_CODE_P1L1_2D2 corresponds to the value P1L1_2D2 of OpenconfigTransportTypes_OTN_APPLICATION_CODE
	OpenconfigTransportTypes_OTN_APPLICATION_CODE_P1L1_2D2 E_OpenconfigTransportTypes_OTN_APPLICATION_CODE = 3
	// OpenconfigTransportTypes_OTN_APPLICATION_CODE_P1S1_2D2 corresponds to the value P1S1_2D2 of OpenconfigTransportTypes_OTN_APPLICATION_CODE
	OpenconfigTransportTypes_OTN_APPLICATION_CODE_P1S1_2D2 E_OpenconfigTransportTypes_OTN_APPLICATION_CODE = 4
)

// E_OpenconfigTransportTypes_SONET_APPLICATION_CODE is a derived int64 type which is used to represent
// the enumerated node OpenconfigTransportTypes_SONET_APPLICATION_CODE. An additional value named
// OpenconfigTransportTypes_SONET_APPLICATION_CODE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigTransportTypes_SONET_APPLICATION_CODE int64

// IsYANGGoEnum ensures that OpenconfigTransportTypes_SONET_APPLICATION_CODE implements the yang.GoEnum
// interface. This ensures that OpenconfigTransportTypes_SONET_APPLICATION_CODE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigTransportTypes_SONET_APPLICATION_CODE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigTransportTypes_SONET_APPLICATION_CODE.
func (E_OpenconfigTransportTypes_SONET_APPLICATION_CODE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigTransportTypes_SONET_APPLICATION_CODE_UNSET corresponds to the value UNSET of OpenconfigTransportTypes_SONET_APPLICATION_CODE
	OpenconfigTransportTypes_SONET_APPLICATION_CODE_UNSET E_OpenconfigTransportTypes_SONET_APPLICATION_CODE = 0
	// OpenconfigTransportTypes_SONET_APPLICATION_CODE_SONET_UNDEFINED corresponds to the value SONET_UNDEFINED of OpenconfigTransportTypes_SONET_APPLICATION_CODE
	OpenconfigTransportTypes_SONET_APPLICATION_CODE_SONET_UNDEFINED E_OpenconfigTransportTypes_SONET_APPLICATION_CODE = 1
	// OpenconfigTransportTypes_SONET_APPLICATION_CODE_VSR2000_3R2 corresponds to the value VSR2000_3R2 of OpenconfigTransportTypes_SONET_APPLICATION_CODE
	OpenconfigTransportTypes_SONET_APPLICATION_CODE_VSR2000_3R2 E_OpenconfigTransportTypes_SONET_APPLICATION_CODE = 2
	// OpenconfigTransportTypes_SONET_APPLICATION_CODE_VSR2000_3R3 corresponds to the value VSR2000_3R3 of OpenconfigTransportTypes_SONET_APPLICATION_CODE
	OpenconfigTransportTypes_SONET_APPLICATION_CODE_VSR2000_3R3 E_OpenconfigTransportTypes_SONET_APPLICATION_CODE = 3
	// OpenconfigTransportTypes_SONET_APPLICATION_CODE_VSR2000_3R5 corresponds to the value VSR2000_3R5 of OpenconfigTransportTypes_SONET_APPLICATION_CODE
	OpenconfigTransportTypes_SONET_APPLICATION_CODE_VSR2000_3R5 E_OpenconfigTransportTypes_SONET_APPLICATION_CODE = 4
)

// E_OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE. An additional value named
// OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE int64

// IsYANGGoEnum ensures that OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE.
func (E_OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_UNSET corresponds to the value UNSET of OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_UNSET E_OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 0
	// OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CFP corresponds to the value CFP of OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CFP E_OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 1
	// OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CFP2 corresponds to the value CFP2 of OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CFP2 E_OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 2
	// OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CFP2_ACO corresponds to the value CFP2_ACO of OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CFP2_ACO E_OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 3
	// OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CFP4 corresponds to the value CFP4 of OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CFP4 E_OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 4
	// OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CPAK corresponds to the value CPAK of OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_CPAK E_OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 5
	// OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_NON_PLUGGABLE corresponds to the value NON_PLUGGABLE of OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_NON_PLUGGABLE E_OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 6
	// OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_OTHER corresponds to the value OTHER of OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_OTHER E_OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 7
	// OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP corresponds to the value QSFP of OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP E_OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 8
	// OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP28 corresponds to the value QSFP28 of OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP28 E_OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 9
	// OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP_PLUS corresponds to the value QSFP_PLUS of OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_QSFP_PLUS E_OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 10
	// OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_SFP corresponds to the value SFP of OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_SFP E_OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 11
	// OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_SFP_PLUS corresponds to the value SFP_PLUS of OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_SFP_PLUS E_OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 12
	// OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_X2 corresponds to the value X2 of OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_X2 E_OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 13
	// OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_XFP corresponds to the value XFP of OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE
	OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE_XFP E_OpenconfigTransportTypes_TRANSCEIVER_FORM_FACTOR_TYPE = 14
)

// E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE. An additional value named
// OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE int64

// IsYANGGoEnum ensures that OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE.
func (E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_UNSET corresponds to the value UNSET of OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE
	OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_UNSET E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE = 0
	// OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_100GE corresponds to the value PROT_100GE of OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE
	OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_100GE E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE = 1
	// OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_100G_MLG corresponds to the value PROT_100G_MLG of OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE
	OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_100G_MLG E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE = 2
	// OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_10GE_LAN corresponds to the value PROT_10GE_LAN of OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE
	OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_10GE_LAN E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE = 3
	// OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_10GE_WAN corresponds to the value PROT_10GE_WAN of OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE
	OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_10GE_WAN E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE = 4
	// OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_1GE corresponds to the value PROT_1GE of OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE
	OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_1GE E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE = 5
	// OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_40GE corresponds to the value PROT_40GE of OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE
	OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_40GE E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE = 6
	// OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OC192 corresponds to the value PROT_OC192 of OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE
	OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OC192 E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE = 7
	// OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OC48 corresponds to the value PROT_OC48 of OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE
	OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OC48 E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE = 8
	// OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OC768 corresponds to the value PROT_OC768 of OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE
	OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OC768 E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE = 9
	// OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_ODU2 corresponds to the value PROT_ODU2 of OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE
	OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_ODU2 E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE = 10
	// OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_ODU2E corresponds to the value PROT_ODU2E of OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE
	OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_ODU2E E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE = 11
	// OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_ODU3 corresponds to the value PROT_ODU3 of OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE
	OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_ODU3 E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE = 12
	// OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_ODU4 corresponds to the value PROT_ODU4 of OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE
	OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_ODU4 E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE = 13
	// OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_ODUCN corresponds to the value PROT_ODUCN of OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE
	OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_ODUCN E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE = 14
	// OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTU1E corresponds to the value PROT_OTU1E of OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE
	OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTU1E E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE = 15
	// OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTU2 corresponds to the value PROT_OTU2 of OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE
	OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTU2 E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE = 16
	// OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTU2E corresponds to the value PROT_OTU2E of OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE
	OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTU2E E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE = 17
	// OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTU3 corresponds to the value PROT_OTU3 of OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE
	OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTU3 E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE = 18
	// OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTU4 corresponds to the value PROT_OTU4 of OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE
	OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTU4 E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE = 19
	// OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTUCN corresponds to the value PROT_OTUCN of OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE
	OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_OTUCN E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE = 20
	// OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_STM16 corresponds to the value PROT_STM16 of OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE
	OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_STM16 E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE = 21
	// OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_STM256 corresponds to the value PROT_STM256 of OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE
	OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_STM256 E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE = 22
	// OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_STM64 corresponds to the value PROT_STM64 of OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE
	OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE_PROT_STM64 E_OpenconfigTransportTypes_TRIBUTARY_PROTOCOL_TYPE = 23
)

// E_OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE is a derived int64 type which is used to represent
// the enumerated node OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE. An additional value named
// OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE int64

// IsYANGGoEnum ensures that OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE implements the yang.GoEnum
// interface. This ensures that OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE.
func (E_OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE_UNSET corresponds to the value UNSET of OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE_UNSET E_OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 0
	// OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_100G corresponds to the value TRIB_RATE_100G of OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_100G E_OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 1
	// OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_10G corresponds to the value TRIB_RATE_10G of OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_10G E_OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 2
	// OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_150G corresponds to the value TRIB_RATE_150G of OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_150G E_OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 3
	// OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1G corresponds to the value TRIB_RATE_1G of OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_1G E_OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 4
	// OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2_5G corresponds to the value TRIB_RATE_2_5G of OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_2_5G E_OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 5
	// OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_200G corresponds to the value TRIB_RATE_200G of OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_200G E_OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 6
	// OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_250G corresponds to the value TRIB_RATE_250G of OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_250G E_OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 7
	// OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_300G corresponds to the value TRIB_RATE_300G of OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_300G E_OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 8
	// OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_400G corresponds to the value TRIB_RATE_400G of OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_400G E_OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 9
	// OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_40G corresponds to the value TRIB_RATE_40G of OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE
	OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE_TRIB_RATE_40G E_OpenconfigTransportTypes_TRIBUTARY_RATE_CLASS_TYPE = 10
)

// E_OpenconfigTypes_ADDRESS_FAMILY is a derived int64 type which is used to represent
// the enumerated node OpenconfigTypes_ADDRESS_FAMILY. An additional value named
// OpenconfigTypes_ADDRESS_FAMILY_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigTypes_ADDRESS_FAMILY int64

// IsYANGGoEnum ensures that OpenconfigTypes_ADDRESS_FAMILY implements the yang.GoEnum
// interface. This ensures that OpenconfigTypes_ADDRESS_FAMILY can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigTypes_ADDRESS_FAMILY) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigTypes_ADDRESS_FAMILY.
func (E_OpenconfigTypes_ADDRESS_FAMILY) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigTypes_ADDRESS_FAMILY_UNSET corresponds to the value UNSET of OpenconfigTypes_ADDRESS_FAMILY
	OpenconfigTypes_ADDRESS_FAMILY_UNSET E_OpenconfigTypes_ADDRESS_FAMILY = 0
	// OpenconfigTypes_ADDRESS_FAMILY_IPV4 corresponds to the value IPV4 of OpenconfigTypes_ADDRESS_FAMILY
	OpenconfigTypes_ADDRESS_FAMILY_IPV4 E_OpenconfigTypes_ADDRESS_FAMILY = 1
	// OpenconfigTypes_ADDRESS_FAMILY_IPV6 corresponds to the value IPV6 of OpenconfigTypes_ADDRESS_FAMILY
	OpenconfigTypes_ADDRESS_FAMILY_IPV6 E_OpenconfigTypes_ADDRESS_FAMILY = 2
	// OpenconfigTypes_ADDRESS_FAMILY_L2_ETHERNET corresponds to the value L2_ETHERNET of OpenconfigTypes_ADDRESS_FAMILY
	OpenconfigTypes_ADDRESS_FAMILY_L2_ETHERNET E_OpenconfigTypes_ADDRESS_FAMILY = 3
	// OpenconfigTypes_ADDRESS_FAMILY_MPLS corresponds to the value MPLS of OpenconfigTypes_ADDRESS_FAMILY
	OpenconfigTypes_ADDRESS_FAMILY_MPLS E_OpenconfigTypes_ADDRESS_FAMILY = 4
)

// E_OpenconfigVlanTypes_TPID_TYPES is a derived int64 type which is used to represent
// the enumerated node OpenconfigVlanTypes_TPID_TYPES. An additional value named
// OpenconfigVlanTypes_TPID_TYPES_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigVlanTypes_TPID_TYPES int64

// IsYANGGoEnum ensures that OpenconfigVlanTypes_TPID_TYPES implements the yang.GoEnum
// interface. This ensures that OpenconfigVlanTypes_TPID_TYPES can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigVlanTypes_TPID_TYPES) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigVlanTypes_TPID_TYPES.
func (E_OpenconfigVlanTypes_TPID_TYPES) ΛMap() map[string]map[int64]ygot.EnumDefinition {
	return ΛEnum
}

const (
	// OpenconfigVlanTypes_TPID_TYPES_UNSET corresponds to the value UNSET of OpenconfigVlanTypes_TPID_TYPES
	OpenconfigVlanTypes_TPID_TYPES_UNSET E_OpenconfigVlanTypes_TPID_TYPES = 0
	// OpenconfigVlanTypes_TPID_TYPES_TPID_0X8100 corresponds to the value TPID_0X8100 of OpenconfigVlanTypes_TPID_TYPES
	OpenconfigVlanTypes_TPID_TYPES_TPID_0X8100 E_OpenconfigVlanTypes_TPID_TYPES = 1
	// OpenconfigVlanTypes_TPID_TYPES_TPID_0X88A8 corresponds to the value TPID_0X88A8 of OpenconfigVlanTypes_TPID_TYPES
	OpenconfigVlanTypes_TPID_TYPES_TPID_0X88A8 E_OpenconfigVlanTypes_TPID_TYPES = 2
	// OpenconfigVlanTypes_TPID_TYPES_TPID_0X9100 corresponds to the value TPID_0X9100 of OpenconfigVlanTypes_TPID_TYPES
	OpenconfigVlanTypes_TPID_TYPES_TPID_0X9100 E_OpenconfigVlanTypes_TPID_TYPES = 3
	// OpenconfigVlanTypes_TPID_TYPES_TPID_0X9200 corresponds to the value TPID_0X9200 of OpenconfigVlanTypes_TPID_TYPES
	OpenconfigVlanTypes_TPID_TYPES_TPID_0X9200 E_OpenconfigVlanTypes_TPID_TYPES = 4
)

// E_OpenconfigVlan_VlanModeType is a derived int64 type which is used to represent
// the enumerated node OpenconfigVlan_VlanModeType. An additional value named
// OpenconfigVlan_VlanModeType_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigVlan_VlanModeType int64

// IsYANGGoEnum ensures that OpenconfigVlan_VlanModeType implements the yang.GoEnum
// interface. This ensures that OpenconfigVlan_VlanModeType can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigVlan_VlanModeType) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigVlan_VlanModeType.
func (E_OpenconfigVlan_VlanModeType) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigVlan_VlanModeType_UNSET corresponds to the value UNSET of OpenconfigVlan_VlanModeType
	OpenconfigVlan_VlanModeType_UNSET E_OpenconfigVlan_VlanModeType = 0
	// OpenconfigVlan_VlanModeType_ACCESS corresponds to the value ACCESS of OpenconfigVlan_VlanModeType
	OpenconfigVlan_VlanModeType_ACCESS E_OpenconfigVlan_VlanModeType = 1
	// OpenconfigVlan_VlanModeType_TRUNK corresponds to the value TRUNK of OpenconfigVlan_VlanModeType
	OpenconfigVlan_VlanModeType_TRUNK E_OpenconfigVlan_VlanModeType = 2
)

// E_OpenconfigVlan_Vlan_Status is a derived int64 type which is used to represent
// the enumerated node OpenconfigVlan_Vlan_Status. An additional value named
// OpenconfigVlan_Vlan_Status_UNSET is added to the enumeration which is used as
// the nil value, indicating that the enumeration was not explicitly set by
// the program importing the generated structures.
type E_OpenconfigVlan_Vlan_Status int64

// IsYANGGoEnum ensures that OpenconfigVlan_Vlan_Status implements the yang.GoEnum
// interface. This ensures that OpenconfigVlan_Vlan_Status can be identified as a
// mapped type for a YANG enumeration.
func (E_OpenconfigVlan_Vlan_Status) IsYANGGoEnum() {}

// ΛMap returns the value lookup map associated with  OpenconfigVlan_Vlan_Status.
func (E_OpenconfigVlan_Vlan_Status) ΛMap() map[string]map[int64]ygot.EnumDefinition { return ΛEnum }

const (
	// OpenconfigVlan_Vlan_Status_UNSET corresponds to the value UNSET of OpenconfigVlan_Vlan_Status
	OpenconfigVlan_Vlan_Status_UNSET E_OpenconfigVlan_Vlan_Status = 0
	// OpenconfigVlan_Vlan_Status_ACTIVE corresponds to the value ACTIVE of OpenconfigVlan_Vlan_Status
	OpenconfigVlan_Vlan_Status_ACTIVE E_OpenconfigVlan_Vlan_Status = 1
	// OpenconfigVlan_Vlan_Status_SUSPENDED corresponds to the value SUSPENDED of OpenconfigVlan_Vlan_Status
	OpenconfigVlan_Vlan_Status_SUSPENDED E_OpenconfigVlan_Vlan_Status = 2
)
