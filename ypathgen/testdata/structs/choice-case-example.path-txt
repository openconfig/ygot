/*
Package ocpathstructs is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema. The generated paths are
based on a compressed form of the schema.

This package was generated by pathgen-tests
using the following YANG input files:
	- ../testdata/modules/choice-case-example.yang
Imported modules were sourced from:
*/
package ocpathstructs

import (
	"fmt"

	gpb "github.com/openconfig/gnmi/proto/gnmi"
	oc "github.com/openconfig/ygot/ypathgen/testdata/exampleoc"
	"github.com/openconfig/ygot/ygot"
)

// Resolve is a helper which returns the resolved *gpb.Path of a PathStruct node.
func Resolve(n ygot.PathStruct) (*gpb.Path, []error) {
	n, p, errs := ygot.ResolvePath(n)
	root, ok := n.(*Device)
	if !ok {
		errs = append(errs, fmt.Errorf("Resolve(n ygot.PathStruct): got unexpected root of (type, value) (%T, %v)", n, n))
	}

	if errs != nil {
		return nil, errs
	}
	return &gpb.Path{Target: root.id, Elem: p}, nil
}

// ChoiceCaseAnonymousCase represents the /choice-case-example/choice-case-anonymous-case YANG schema element.
type ChoiceCaseAnonymousCase struct {
	ygot.NodePath
}

// ChoiceCaseAnonymousCaseΩ represents the wildcard version of the /choice-case-example/choice-case-anonymous-case YANG schema element.
type ChoiceCaseAnonymousCaseΩ struct {
	ygot.NodePath
}

// ChoiceCaseAnonymousCase_A represents the /choice-case-example/choice-case-anonymous-case/foo/a/a YANG schema element.
type ChoiceCaseAnonymousCase_A struct {
	ygot.NodePath
}

// ChoiceCaseAnonymousCase_AΩ represents the wildcard version of the /choice-case-example/choice-case-anonymous-case/foo/a/a YANG schema element.
type ChoiceCaseAnonymousCase_AΩ struct {
	ygot.NodePath
}

// ChoiceCaseAnonymousCase_B represents the /choice-case-example/choice-case-anonymous-case/foo/b/b YANG schema element.
type ChoiceCaseAnonymousCase_B struct {
	ygot.NodePath
}

// ChoiceCaseAnonymousCase_BΩ represents the wildcard version of the /choice-case-example/choice-case-anonymous-case/foo/b/b YANG schema element.
type ChoiceCaseAnonymousCase_BΩ struct {
	ygot.NodePath
}

// A returns from ChoiceCaseAnonymousCase the path struct for its child "a".
func (n *ChoiceCaseAnonymousCase) A() *ChoiceCaseAnonymousCase_A {
	return &ChoiceCaseAnonymousCase_A{
		NodePath: ygot.NewNodePath(
			[]string{"a"},
			map[string]interface{}{},
			n,
		),
	}
}

// B returns from ChoiceCaseAnonymousCase the path struct for its child "b".
func (n *ChoiceCaseAnonymousCase) B() *ChoiceCaseAnonymousCase_B {
	return &ChoiceCaseAnonymousCase_B{
		NodePath: ygot.NewNodePath(
			[]string{"b"},
			map[string]interface{}{},
			n,
		),
	}
}

// ChoiceCaseWithLeafref represents the /choice-case-example/choice-case-with-leafref YANG schema element.
type ChoiceCaseWithLeafref struct {
	ygot.NodePath
}

// ChoiceCaseWithLeafrefΩ represents the wildcard version of the /choice-case-example/choice-case-with-leafref YANG schema element.
type ChoiceCaseWithLeafrefΩ struct {
	ygot.NodePath
}

// ChoiceCaseWithLeafref_Ptr represents the /choice-case-example/choice-case-with-leafref/foo/bar/ptr YANG schema element.
type ChoiceCaseWithLeafref_Ptr struct {
	ygot.NodePath
}

// ChoiceCaseWithLeafref_PtrΩ represents the wildcard version of the /choice-case-example/choice-case-with-leafref/foo/bar/ptr YANG schema element.
type ChoiceCaseWithLeafref_PtrΩ struct {
	ygot.NodePath
}

// ChoiceCaseWithLeafref_Referenced represents the /choice-case-example/choice-case-with-leafref/referenced YANG schema element.
type ChoiceCaseWithLeafref_Referenced struct {
	ygot.NodePath
}

// ChoiceCaseWithLeafref_ReferencedΩ represents the wildcard version of the /choice-case-example/choice-case-with-leafref/referenced YANG schema element.
type ChoiceCaseWithLeafref_ReferencedΩ struct {
	ygot.NodePath
}

// Ptr returns from ChoiceCaseWithLeafref the path struct for its child "ptr".
func (n *ChoiceCaseWithLeafref) Ptr() *ChoiceCaseWithLeafref_Ptr {
	return &ChoiceCaseWithLeafref_Ptr{
		NodePath: ygot.NewNodePath(
			[]string{"ptr"},
			map[string]interface{}{},
			n,
		),
	}
}

// Referenced returns from ChoiceCaseWithLeafref the path struct for its child "referenced".
func (n *ChoiceCaseWithLeafref) Referenced() *ChoiceCaseWithLeafref_Referenced {
	return &ChoiceCaseWithLeafref_Referenced{
		NodePath: ygot.NewNodePath(
			[]string{"referenced"},
			map[string]interface{}{},
			n,
		),
	}
}

// Device represents the /device YANG schema element.
type Device struct {
	ygot.NodePath
	id string
}

func ForDevice(id string) *Device {
	return &Device{id: id}
}

// ChoiceCaseAnonymousCase returns from Device the path struct for its child "choice-case-anonymous-case".
func (n *Device) ChoiceCaseAnonymousCase() *ChoiceCaseAnonymousCase {
	return &ChoiceCaseAnonymousCase{
		NodePath: ygot.NewNodePath(
			[]string{"choice-case-anonymous-case"},
			map[string]interface{}{},
			n,
		),
	}
}

// ChoiceCaseWithLeafref returns from Device the path struct for its child "choice-case-with-leafref".
func (n *Device) ChoiceCaseWithLeafref() *ChoiceCaseWithLeafref {
	return &ChoiceCaseWithLeafref{
		NodePath: ygot.NewNodePath(
			[]string{"choice-case-with-leafref"},
			map[string]interface{}{},
			n,
		),
	}
}

// SimpleChoiceCase returns from Device the path struct for its child "simple-choice-case".
func (n *Device) SimpleChoiceCase() *SimpleChoiceCase {
	return &SimpleChoiceCase{
		NodePath: ygot.NewNodePath(
			[]string{"simple-choice-case"},
			map[string]interface{}{},
			n,
		),
	}
}

// SimpleChoiceCase represents the /choice-case-example/simple-choice-case YANG schema element.
type SimpleChoiceCase struct {
	ygot.NodePath
}

// SimpleChoiceCaseΩ represents the wildcard version of the /choice-case-example/simple-choice-case YANG schema element.
type SimpleChoiceCaseΩ struct {
	ygot.NodePath
}

// SimpleChoiceCase_A represents the /choice-case-example/simple-choice-case/foo/bar/a YANG schema element.
type SimpleChoiceCase_A struct {
	ygot.NodePath
}

// SimpleChoiceCase_AΩ represents the wildcard version of the /choice-case-example/simple-choice-case/foo/bar/a YANG schema element.
type SimpleChoiceCase_AΩ struct {
	ygot.NodePath
}

// SimpleChoiceCase_B represents the /choice-case-example/simple-choice-case/foo/baz/b YANG schema element.
type SimpleChoiceCase_B struct {
	ygot.NodePath
}

// SimpleChoiceCase_BΩ represents the wildcard version of the /choice-case-example/simple-choice-case/foo/baz/b YANG schema element.
type SimpleChoiceCase_BΩ struct {
	ygot.NodePath
}

// A returns from SimpleChoiceCase the path struct for its child "a".
func (n *SimpleChoiceCase) A() *SimpleChoiceCase_A {
	return &SimpleChoiceCase_A{
		NodePath: ygot.NewNodePath(
			[]string{"a"},
			map[string]interface{}{},
			n,
		),
	}
}

// B returns from SimpleChoiceCase the path struct for its child "b".
func (n *SimpleChoiceCase) B() *SimpleChoiceCase_B {
	return &SimpleChoiceCase_B{
		NodePath: ygot.NewNodePath(
			[]string{"b"},
			map[string]interface{}{},
			n,
		),
	}
}
