/*
Package openconfigsimpletargetpath is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema. The generated paths are
based on a compressed form of the schema.

This package was generated by pathgen-tests
using the following YANG input files:
	- ../testdata/modules/openconfig-import.yang
Imported modules were sourced from:
*/
package openconfigsimpletargetpath

import (
	"github.com/openconfig/ygot/ygot"
)

// NativePath represents the /openconfig-simple-target/native YANG schema element.
type NativePath struct {
	*ygot.NodePath
}

// NativePathAny represents the wildcard version of the /openconfig-simple-target/native YANG schema element.
type NativePathAny struct {
	*ygot.NodePath
}

// Native_APath represents the /openconfig-simple-target/native/state/a YANG schema element.
type Native_APath struct {
	*ygot.NodePath
}

// Native_APathAny represents the wildcard version of the /openconfig-simple-target/native/state/a YANG schema element.
type Native_APathAny struct {
	*ygot.NodePath
}

// A (leaf): 
// ----------------------------------------
// Defining module: "openconfig-simple-target"
// Instantiating module: "openconfig-simple-target"
// Path from parent: "state/a"
// Path from root: "/native/state/a"
func (n *NativePath) A() *Native_APath {
	return &Native_APath{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a"},
			map[string]interface{}{},
			n,
		),
	}
}

// A (leaf): 
// ----------------------------------------
// Defining module: "openconfig-simple-target"
// Instantiating module: "openconfig-simple-target"
// Path from parent: "state/a"
// Path from root: "/native/state/a"
func (n *NativePathAny) A() *Native_APathAny {
	return &Native_APathAny{
		NodePath: ygot.NewNodePath(
			[]string{"state", "a"},
			map[string]interface{}{},
			n,
		),
	}
}

// TargetPath represents the /openconfig-simple-target/target YANG schema element.
type TargetPath struct {
	*ygot.NodePath
}

// TargetPathAny represents the wildcard version of the /openconfig-simple-target/target YANG schema element.
type TargetPathAny struct {
	*ygot.NodePath
}
