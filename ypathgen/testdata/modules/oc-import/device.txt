/*
Package device is a generated package which contains definitions
of structs which generate gNMI paths for a YANG schema. The generated paths are
based on a compressed form of the schema.

This package was generated by pathgen-tests
using the following YANG input files:
	- ../testdata/modules/openconfig-import.yang
Imported modules were sourced from:
*/
package device

import (
	"github.com/openconfig/ygot/ygot"
	"example.com/openconfigimportpath"
	"example.com/openconfigsimpletargetpath"
)

// DevicePath represents the /device YANG schema element.
type DevicePath struct {
	*ygot.DeviceRootBase
}

// DeviceRoot returns a new path object from which YANG paths can be constructed.
func DeviceRoot(id string) *DevicePath {
	return &DevicePath{ygot.NewDeviceRootBase(id)}
}

// Child returns from DevicePath the path struct for its child "child".
func (n *DevicePath) Child() *openconfigimportpath.ChildPath {
	return &openconfigimportpath.ChildPath{
		NodePath: ygot.NewNodePath(
			[]string{"child"},
			map[string]interface{}{},
			n,
		),
	}
}

// Native returns from DevicePath the path struct for its child "native".
func (n *DevicePath) Native() *openconfigsimpletargetpath.NativePath {
	return &openconfigsimpletargetpath.NativePath{
		NodePath: ygot.NewNodePath(
			[]string{"native"},
			map[string]interface{}{},
			n,
		),
	}
}

// Target returns from DevicePath the path struct for its child "target".
func (n *DevicePath) Target() *openconfigsimpletargetpath.TargetPath {
	return &openconfigsimpletargetpath.TargetPath{
		NodePath: ygot.NewNodePath(
			[]string{"target"},
			map[string]interface{}{},
			n,
		),
	}
}
