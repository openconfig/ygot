// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// ywrapper is a set of wrapper protobuf messages that can be used
// with a protobuf that is automatically generated from a YANG schema.
// The messages are used for scalar fields such that unset fields can
// be distinguished from those that take a generated language's default
// value.
syntax = "proto3";

package ywrapper;

// Wrapper messages are defined to be the most permissive type for the
// mapped type. Protobuf FieldOptions should be examined to determine the
// schema information for the field.

// BytesValue is used to store a value which is a byte array, particularly
// the YANG binary type.
message BytesValue {
  bytes value = 1;
}

// BoolValue is used to store a value which is a boolean, particularly the
// YANG bool and empty types.
message BoolValue {
  bool value = 1;
}

// Decimal64Value is used to store a value which is a decimal64, split into
// a digits field, and a precision field. The precision indicates the number
// of digits that occur after the decimal point in the digits field.
message Decimal64Value {
  int64 digits = 1;
  uint32 precision = 2;
}

// IntValue stores a value which a signed integer, particularly the YANG
// int8, int16, int32, and int64 types.
message IntValue {
  sint64 value = 1;
}

// StringValue stores a value which is a string, particularly the YANG
// string type.
message StringValue {
  string value = 1;
}

// UintVal is used to store a value which an unsigned integer, particularly
// the YANG uint8, uint16, uint32 and uint64 types.
message UintValue {
  uint64 value = 1;
}
